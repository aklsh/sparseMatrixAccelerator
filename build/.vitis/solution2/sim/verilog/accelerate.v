// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="accelerate_accelerate,hls_ip_2021_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=7.256000,HLS_SYN_LAT=42,HLS_SYN_TPT=14,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=3375,HLS_SYN_LUT=4401,HLS_VERSION=2021_2}" *)

module accelerate (
        ap_local_block,
        ap_local_deadlock,
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        out_r,
        out_r_ap_vld,
        subrow_vals_address0,
        subrow_vals_ce0,
        subrow_vals_q0,
        subrow_vals_address1,
        subrow_vals_ce1,
        subrow_vals_q1,
        subrow_col_indices_address0,
        subrow_col_indices_ce0,
        subrow_col_indices_q0,
        subrow_col_indices_address1,
        subrow_col_indices_ce1,
        subrow_col_indices_q1,
        mult_enables_address0,
        mult_enables_ce0,
        mult_enables_q0,
        mult_enables_address1,
        mult_enables_ce1,
        mult_enables_q1,
        label_r,
        init_vector_address0,
        init_vector_ce0,
        init_vector_q0,
        init_vector_address1,
        init_vector_ce1,
        init_vector_q1,
        init
);

parameter    ap_ST_fsm_pp0_stage0 = 14'd1;
parameter    ap_ST_fsm_pp0_stage1 = 14'd2;
parameter    ap_ST_fsm_pp0_stage2 = 14'd4;
parameter    ap_ST_fsm_pp0_stage3 = 14'd8;
parameter    ap_ST_fsm_pp0_stage4 = 14'd16;
parameter    ap_ST_fsm_pp0_stage5 = 14'd32;
parameter    ap_ST_fsm_pp0_stage6 = 14'd64;
parameter    ap_ST_fsm_pp0_stage7 = 14'd128;
parameter    ap_ST_fsm_pp0_stage8 = 14'd256;
parameter    ap_ST_fsm_pp0_stage9 = 14'd512;
parameter    ap_ST_fsm_pp0_stage10 = 14'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 14'd2048;
parameter    ap_ST_fsm_pp0_stage12 = 14'd4096;
parameter    ap_ST_fsm_pp0_stage13 = 14'd8192;

output   ap_local_block;
output   ap_local_deadlock;
input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [31:0] out_r;
output   out_r_ap_vld;
output  [1:0] subrow_vals_address0;
output   subrow_vals_ce0;
input  [31:0] subrow_vals_q0;
output  [1:0] subrow_vals_address1;
output   subrow_vals_ce1;
input  [31:0] subrow_vals_q1;
output  [1:0] subrow_col_indices_address0;
output   subrow_col_indices_ce0;
input  [31:0] subrow_col_indices_q0;
output  [1:0] subrow_col_indices_address1;
output   subrow_col_indices_ce1;
input  [31:0] subrow_col_indices_q1;
output  [1:0] mult_enables_address0;
output   mult_enables_ce0;
input  [0:0] mult_enables_q0;
output  [1:0] mult_enables_address1;
output   mult_enables_ce1;
input  [0:0] mult_enables_q1;
input  [31:0] label_r;
output  [4:0] init_vector_address0;
output   init_vector_ce0;
input  [31:0] init_vector_q0;
output  [4:0] init_vector_address1;
output   init_vector_ce1;
input  [31:0] init_vector_q1;
input   init;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[1:0] subrow_vals_address0;
reg subrow_vals_ce0;
reg[1:0] subrow_vals_address1;
reg subrow_vals_ce1;
reg[1:0] subrow_col_indices_address0;
reg subrow_col_indices_ce0;
reg[1:0] subrow_col_indices_address1;
reg subrow_col_indices_ce1;
reg[1:0] mult_enables_address0;
reg mult_enables_ce0;
reg[1:0] mult_enables_address1;
reg mult_enables_ce1;
reg[4:0] init_vector_address0;
reg init_vector_ce0;
reg[4:0] init_vector_address1;
reg init_vector_ce1;

(* fsm_encoding = "none" *) reg   [13:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_state14_pp0_stage13_iter0;
wire    ap_block_state28_pp0_stage13_iter1;
wire    ap_block_state42_pp0_stage13_iter2;
wire    ap_block_pp0_stage13_subdone;
reg   [4:0] storage_address0;
reg    storage_ce0;
reg    storage_we0;
reg   [31:0] storage_d0;
wire   [31:0] storage_q0;
reg   [4:0] storage_address1;
reg    storage_ce1;
reg    storage_we1;
reg   [31:0] storage_d1;
wire   [31:0] storage_q1;
reg   [0:0] init_read_reg_1655;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state15_pp0_stage0_iter1;
wire    ap_block_state29_pp0_stage0_iter2;
wire    ap_block_state43_pp0_stage0_iter3;
wire    ap_block_pp0_stage0_11001;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state16_pp0_stage1_iter1;
wire    ap_block_state30_pp0_stage1_iter2;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] mult_enables_load_reg_1709;
reg   [0:0] mult_enables_load_reg_1709_pp0_iter1_reg;
reg   [31:0] subrow_vals_load_reg_1714;
reg   [31:0] subrow_col_indices_load_reg_1719;
reg   [0:0] mult_enables_load_1_reg_1724;
reg   [0:0] mult_enables_load_1_reg_1724_pp0_iter1_reg;
reg   [31:0] subrow_vals_load_1_reg_1729;
reg   [31:0] subrow_col_indices_load_1_reg_1734;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state17_pp0_stage2_iter1;
wire    ap_block_state31_pp0_stage2_iter2;
wire    ap_block_pp0_stage2_11001;
reg   [0:0] mult_enables_load_2_reg_1779;
reg   [0:0] mult_enables_load_2_reg_1779_pp0_iter1_reg;
reg   [31:0] subrow_vals_load_2_reg_1784;
reg   [31:0] subrow_col_indices_load_2_reg_1789;
reg   [0:0] mult_enables_load_3_reg_1794;
reg   [0:0] mult_enables_load_3_reg_1794_pp0_iter1_reg;
reg   [31:0] subrow_vals_load_3_reg_1799;
reg   [31:0] subrow_col_indices_load_3_reg_1804;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state18_pp0_stage3_iter1;
wire    ap_block_state32_pp0_stage3_iter2;
wire    ap_block_pp0_stage3_11001;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_state19_pp0_stage4_iter1;
wire    ap_block_state33_pp0_stage4_iter2;
wire    ap_block_pp0_stage4_11001;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_state20_pp0_stage5_iter1;
wire    ap_block_state34_pp0_stage5_iter2;
wire    ap_block_pp0_stage5_11001;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state7_pp0_stage6_iter0;
wire    ap_block_state21_pp0_stage6_iter1;
wire    ap_block_state35_pp0_stage6_iter2;
wire    ap_block_pp0_stage6_11001;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state8_pp0_stage7_iter0;
wire    ap_block_state22_pp0_stage7_iter1;
wire    ap_block_state36_pp0_stage7_iter2;
wire    ap_block_pp0_stage7_11001;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_state9_pp0_stage8_iter0;
wire    ap_block_state23_pp0_stage8_iter1;
wire    ap_block_state37_pp0_stage8_iter2;
wire    ap_block_pp0_stage8_11001;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_state10_pp0_stage9_iter0;
wire    ap_block_state24_pp0_stage9_iter1;
wire    ap_block_state38_pp0_stage9_iter2;
wire    ap_block_pp0_stage9_11001;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_state11_pp0_stage10_iter0;
wire    ap_block_state25_pp0_stage10_iter1;
wire    ap_block_state39_pp0_stage10_iter2;
wire    ap_block_pp0_stage10_11001;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_state12_pp0_stage11_iter0;
wire    ap_block_state26_pp0_stage11_iter1;
wire    ap_block_state40_pp0_stage11_iter2;
wire    ap_block_pp0_stage11_11001;
reg   [31:0] label_r_read_reg_1894;
wire    ap_block_pp0_stage13_11001;
reg   [31:0] label_r_read_reg_1894_pp0_iter1_reg;
reg   [31:0] storage_load_reg_1909;
reg   [31:0] storage_load_1_reg_1914;
reg   [31:0] storage_load_2_reg_1939;
reg   [31:0] storage_load_3_reg_1944;
wire   [31:0] x_fu_1627_p3;
reg   [31:0] x_reg_1959;
wire   [31:0] select_ln20_1_fu_1634_p3;
reg   [31:0] select_ln20_1_reg_1964;
wire   [31:0] select_ln20_2_fu_1641_p3;
reg   [31:0] select_ln20_2_reg_1969;
wire   [31:0] select_ln20_3_fu_1648_p3;
reg   [31:0] select_ln20_3_reg_1974;
wire   [31:0] grp_fu_602_p2;
reg   [31:0] tmp_reg_1979;
wire   [31:0] grp_fu_604_p2;
reg   [31:0] tmp1_reg_1984;
wire   [31:0] grp_fu_610_p2;
reg   [31:0] x_1_reg_1989;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage0_subdone;
wire    grp_reduce_fu_1452_ap_start;
wire    grp_reduce_fu_1452_ap_done;
wire    grp_reduce_fu_1452_ap_idle;
wire    grp_reduce_fu_1452_ap_ready;
wire   [31:0] grp_reduce_fu_1452_out_r;
wire    grp_reduce_fu_1452_out_r_ap_vld;
reg    grp_reduce_fu_1452_ap_start_reg;
wire    ap_block_pp0_stage0;
wire    ap_block_pp0_stage2;
wire    ap_block_pp0_stage6;
wire    ap_block_pp0_stage8;
wire    ap_block_pp0_stage3;
wire    ap_block_pp0_stage13;
wire    ap_block_pp0_stage9;
wire    ap_block_pp0_stage1;
wire    ap_block_pp0_stage4;
wire    ap_block_pp0_stage5;
wire    ap_block_pp0_stage7;
wire    ap_block_pp0_stage10;
wire    ap_block_pp0_stage11;
wire   [63:0] zext_ln21_fu_1595_p1;
wire   [63:0] zext_ln21_1_fu_1599_p1;
wire   [63:0] zext_ln21_2_fu_1603_p1;
wire   [63:0] zext_ln21_3_fu_1607_p1;
wire   [31:0] bitcast_ln9_fu_1480_p1;
wire   [31:0] bitcast_ln9_1_fu_1485_p1;
wire   [31:0] bitcast_ln9_2_fu_1490_p1;
wire   [31:0] bitcast_ln9_3_fu_1495_p1;
wire   [31:0] bitcast_ln9_4_fu_1500_p1;
wire   [31:0] bitcast_ln9_5_fu_1505_p1;
wire   [31:0] bitcast_ln9_6_fu_1510_p1;
wire   [31:0] bitcast_ln9_7_fu_1515_p1;
wire   [31:0] bitcast_ln9_8_fu_1520_p1;
wire   [31:0] bitcast_ln9_9_fu_1525_p1;
wire   [31:0] bitcast_ln9_10_fu_1530_p1;
wire   [31:0] bitcast_ln9_11_fu_1535_p1;
wire   [31:0] bitcast_ln9_12_fu_1540_p1;
wire   [31:0] bitcast_ln9_13_fu_1545_p1;
wire   [31:0] bitcast_ln9_14_fu_1550_p1;
wire   [31:0] bitcast_ln9_15_fu_1555_p1;
wire   [31:0] bitcast_ln9_16_fu_1560_p1;
wire   [31:0] bitcast_ln9_17_fu_1565_p1;
wire   [31:0] bitcast_ln9_18_fu_1570_p1;
wire   [31:0] bitcast_ln9_19_fu_1575_p1;
wire   [31:0] bitcast_ln9_20_fu_1580_p1;
wire   [31:0] bitcast_ln9_21_fu_1585_p1;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_state13_pp0_stage12_iter0;
wire    ap_block_state27_pp0_stage12_iter1;
wire    ap_block_state41_pp0_stage12_iter2;
wire    ap_block_pp0_stage12_11001;
wire   [31:0] bitcast_ln9_22_fu_1590_p1;
wire    ap_block_pp0_stage12;
wire   [31:0] grp_fu_612_p1;
wire   [31:0] grp_fu_850_p1;
wire   [31:0] grp_fu_871_p1;
wire   [31:0] grp_fu_874_p1;
wire   [31:0] grp_fu_871_p2;
wire   [31:0] grp_fu_612_p2;
wire   [31:0] grp_fu_874_p2;
wire   [31:0] grp_fu_850_p2;
reg   [13:0] ap_NS_fsm;
reg    ap_idle_pp0_0to2;
reg    ap_reset_idle_pp0;
reg    ap_idle_pp0_1to3;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_pp0_stage9_subdone;
wire    ap_block_pp0_stage10_subdone;
wire    ap_block_pp0_stage11_subdone;
wire    ap_block_pp0_stage12_subdone;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 14'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 grp_reduce_fu_1452_ap_start_reg = 1'b0;
end

accelerate_storage_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 23 ),
    .AddressWidth( 5 ))
storage_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(storage_address0),
    .ce0(storage_ce0),
    .we0(storage_we0),
    .d0(storage_d0),
    .q0(storage_q0),
    .address1(storage_address1),
    .ce1(storage_ce1),
    .we1(storage_we1),
    .d1(storage_d1),
    .q1(storage_q1)
);

accelerate_reduce grp_reduce_fu_1452(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_reduce_fu_1452_ap_start),
    .ap_done(grp_reduce_fu_1452_ap_done),
    .ap_idle(grp_reduce_fu_1452_ap_idle),
    .ap_ready(grp_reduce_fu_1452_ap_ready),
    .out_r(grp_reduce_fu_1452_out_r),
    .out_r_ap_vld(grp_reduce_fu_1452_out_r_ap_vld),
    .value_r(x_1_reg_1989),
    .label_r(label_r_read_reg_1894_pp0_iter1_reg)
);

accelerate_fadd_32ns_32ns_32_5_full_dsp_1_x #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_5_full_dsp_1_x_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(x_reg_1959),
    .din1(select_ln20_1_reg_1964),
    .ce(1'b1),
    .dout(grp_fu_602_p2)
);

accelerate_fadd_32ns_32ns_32_5_full_dsp_1_x #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_5_full_dsp_1_x_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln20_2_reg_1969),
    .din1(select_ln20_3_reg_1974),
    .ce(1'b1),
    .dout(grp_fu_604_p2)
);

accelerate_fadd_32ns_32ns_32_5_full_dsp_1_x #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_5_full_dsp_1_x_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp1_reg_1984),
    .din1(tmp_reg_1979),
    .ce(1'b1),
    .dout(grp_fu_610_p2)
);

accelerate_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(storage_load_1_reg_1914),
    .din1(grp_fu_612_p1),
    .ce(1'b1),
    .dout(grp_fu_612_p2)
);

accelerate_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(storage_load_3_reg_1944),
    .din1(grp_fu_850_p1),
    .ce(1'b1),
    .dout(grp_fu_850_p2)
);

accelerate_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(storage_load_reg_1909),
    .din1(grp_fu_871_p1),
    .ce(1'b1),
    .dout(grp_fu_871_p2)
);

accelerate_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(storage_load_2_reg_1939),
    .din1(grp_fu_874_p1),
    .ce(1'b1),
    .dout(grp_fu_874_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage13_subdone) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage13_subdone) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage13_subdone) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_reduce_fu_1452_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            grp_reduce_fu_1452_ap_start_reg <= 1'b1;
        end else if ((grp_reduce_fu_1452_ap_ready == 1'b1)) begin
            grp_reduce_fu_1452_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        init_read_reg_1655 <= init;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        label_r_read_reg_1894 <= label_r;
        label_r_read_reg_1894_pp0_iter1_reg <= label_r_read_reg_1894;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        mult_enables_load_1_reg_1724 <= mult_enables_q0;
        mult_enables_load_reg_1709 <= mult_enables_q1;
        subrow_col_indices_load_1_reg_1734 <= subrow_col_indices_q0;
        subrow_col_indices_load_reg_1719 <= subrow_col_indices_q1;
        subrow_vals_load_1_reg_1729 <= subrow_vals_q0;
        subrow_vals_load_reg_1714 <= subrow_vals_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        mult_enables_load_1_reg_1724_pp0_iter1_reg <= mult_enables_load_1_reg_1724;
        mult_enables_load_reg_1709_pp0_iter1_reg <= mult_enables_load_reg_1709;
        x_1_reg_1989 <= grp_fu_610_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        mult_enables_load_2_reg_1779 <= mult_enables_q1;
        mult_enables_load_3_reg_1794 <= mult_enables_q0;
        subrow_col_indices_load_2_reg_1789 <= subrow_col_indices_q1;
        subrow_col_indices_load_3_reg_1804 <= subrow_col_indices_q0;
        subrow_vals_load_2_reg_1784 <= subrow_vals_q1;
        subrow_vals_load_3_reg_1799 <= subrow_vals_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mult_enables_load_2_reg_1779_pp0_iter1_reg <= mult_enables_load_2_reg_1779;
        mult_enables_load_3_reg_1794_pp0_iter1_reg <= mult_enables_load_3_reg_1794;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        select_ln20_1_reg_1964 <= select_ln20_1_fu_1634_p3;
        x_reg_1959 <= x_fu_1627_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        select_ln20_2_reg_1969 <= select_ln20_2_fu_1641_p3;
        select_ln20_3_reg_1974 <= select_ln20_3_fu_1648_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (mult_enables_load_1_reg_1724 == 1'd1))) begin
        storage_load_1_reg_1914 <= storage_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (mult_enables_load_2_reg_1779 == 1'd1))) begin
        storage_load_2_reg_1939 <= storage_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (mult_enables_load_3_reg_1794 == 1'd1))) begin
        storage_load_3_reg_1944 <= storage_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (mult_enables_load_reg_1709 == 1'd1))) begin
        storage_load_reg_1909 <= storage_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        tmp1_reg_1984 <= grp_fu_604_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        tmp_reg_1979 <= grp_fu_602_p2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_idle_pp0 == 1'b1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to2 = 1'b1;
    end else begin
        ap_idle_pp0_0to2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to3 = 1'b1;
    end else begin
        ap_idle_pp0_1to3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage13_subdone) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_idle_pp0_0to2 == 1'b1) & (ap_start == 1'b0))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            init_vector_address0 = 64'd22;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            init_vector_address0 = 64'd21;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            init_vector_address0 = 64'd19;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            init_vector_address0 = 64'd17;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            init_vector_address0 = 64'd15;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            init_vector_address0 = 64'd13;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            init_vector_address0 = 64'd11;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            init_vector_address0 = 64'd9;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            init_vector_address0 = 64'd7;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            init_vector_address0 = 64'd5;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            init_vector_address0 = 64'd3;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            init_vector_address0 = 64'd1;
        end else begin
            init_vector_address0 = 'bx;
        end
    end else begin
        init_vector_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            init_vector_address1 = 64'd20;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            init_vector_address1 = 64'd18;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            init_vector_address1 = 64'd16;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            init_vector_address1 = 64'd14;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            init_vector_address1 = 64'd12;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            init_vector_address1 = 64'd10;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            init_vector_address1 = 64'd8;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            init_vector_address1 = 64'd6;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            init_vector_address1 = 64'd4;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            init_vector_address1 = 64'd2;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            init_vector_address1 = 64'd0;
        end else begin
            init_vector_address1 = 'bx;
        end
    end else begin
        init_vector_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        init_vector_ce0 = 1'b1;
    end else begin
        init_vector_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        init_vector_ce1 = 1'b1;
    end else begin
        init_vector_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            mult_enables_address0 = 64'd3;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            mult_enables_address0 = 64'd1;
        end else begin
            mult_enables_address0 = 'bx;
        end
    end else begin
        mult_enables_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            mult_enables_address1 = 64'd2;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            mult_enables_address1 = 64'd0;
        end else begin
            mult_enables_address1 = 'bx;
        end
    end else begin
        mult_enables_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        mult_enables_ce0 = 1'b1;
    end else begin
        mult_enables_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        mult_enables_ce1 = 1'b1;
    end else begin
        mult_enables_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        storage_address0 = zext_ln21_3_fu_1607_p1;
    end else if (((1'b0 == ap_block_pp0_stage13) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        storage_address0 = zext_ln21_fu_1595_p1;
    end else if (((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        storage_address0 = 5'd22;
    end else if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        storage_address0 = 5'd21;
    end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        storage_address0 = 5'd19;
    end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        storage_address0 = 5'd17;
    end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        storage_address0 = 5'd15;
    end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        storage_address0 = 5'd13;
    end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        storage_address0 = 5'd11;
    end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        storage_address0 = 5'd9;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        storage_address0 = 5'd7;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        storage_address0 = 5'd5;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        storage_address0 = 5'd3;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        storage_address0 = 5'd1;
    end else begin
        storage_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        storage_address1 = zext_ln21_2_fu_1603_p1;
    end else if (((1'b0 == ap_block_pp0_stage13) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        storage_address1 = zext_ln21_1_fu_1599_p1;
    end else if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        storage_address1 = 5'd20;
    end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        storage_address1 = 5'd18;
    end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        storage_address1 = 5'd16;
    end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        storage_address1 = 5'd14;
    end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        storage_address1 = 5'd12;
    end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        storage_address1 = 5'd10;
    end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        storage_address1 = 5'd8;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        storage_address1 = 5'd6;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        storage_address1 = 5'd4;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        storage_address1 = 5'd2;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        storage_address1 = 5'd0;
    end else begin
        storage_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        storage_ce0 = 1'b1;
    end else begin
        storage_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        storage_ce1 = 1'b1;
    end else begin
        storage_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
            storage_d0 = bitcast_ln9_22_fu_1590_p1;
        end else if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            storage_d0 = bitcast_ln9_21_fu_1585_p1;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            storage_d0 = bitcast_ln9_19_fu_1575_p1;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            storage_d0 = bitcast_ln9_17_fu_1565_p1;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            storage_d0 = bitcast_ln9_15_fu_1555_p1;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            storage_d0 = bitcast_ln9_13_fu_1545_p1;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            storage_d0 = bitcast_ln9_11_fu_1535_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            storage_d0 = bitcast_ln9_9_fu_1525_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            storage_d0 = bitcast_ln9_7_fu_1515_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            storage_d0 = bitcast_ln9_5_fu_1505_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            storage_d0 = bitcast_ln9_3_fu_1495_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            storage_d0 = bitcast_ln9_1_fu_1485_p1;
        end else begin
            storage_d0 = 'bx;
        end
    end else begin
        storage_d0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            storage_d1 = bitcast_ln9_20_fu_1580_p1;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            storage_d1 = bitcast_ln9_18_fu_1570_p1;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            storage_d1 = bitcast_ln9_16_fu_1560_p1;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            storage_d1 = bitcast_ln9_14_fu_1550_p1;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            storage_d1 = bitcast_ln9_12_fu_1540_p1;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            storage_d1 = bitcast_ln9_10_fu_1530_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            storage_d1 = bitcast_ln9_8_fu_1520_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            storage_d1 = bitcast_ln9_6_fu_1510_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            storage_d1 = bitcast_ln9_4_fu_1500_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            storage_d1 = bitcast_ln9_2_fu_1490_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            storage_d1 = bitcast_ln9_fu_1480_p1;
        end else begin
            storage_d1 = 'bx;
        end
    end else begin
        storage_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (init_read_reg_1655 == 1'd1)) | ((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (init_read_reg_1655 == 1'd1)) | ((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (init_read_reg_1655 == 1'd1)) | ((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (init_read_reg_1655 == 1'd1)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (init_read_reg_1655 == 1'd1)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (init_read_reg_1655 == 1'd1)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (init_read_reg_1655 == 1'd1)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (init_read_reg_1655 == 1'd1)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (init_read_reg_1655 == 1'd1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (init_read_reg_1655 == 1'd1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (init_read_reg_1655 == 1'd1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (init_read_reg_1655 == 1'd1)))) begin
        storage_we0 = 1'b1;
    end else begin
        storage_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (init_read_reg_1655 == 1'd1)) | ((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (init_read_reg_1655 == 1'd1)) | ((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (init_read_reg_1655 == 1'd1)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (init_read_reg_1655 == 1'd1)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (init_read_reg_1655 == 1'd1)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (init_read_reg_1655 == 1'd1)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (init_read_reg_1655 == 1'd1)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (init_read_reg_1655 == 1'd1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (init_read_reg_1655 == 1'd1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (init_read_reg_1655 == 1'd1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (init_read_reg_1655 == 1'd1)))) begin
        storage_we1 = 1'b1;
    end else begin
        storage_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            subrow_col_indices_address0 = 64'd3;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            subrow_col_indices_address0 = 64'd1;
        end else begin
            subrow_col_indices_address0 = 'bx;
        end
    end else begin
        subrow_col_indices_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            subrow_col_indices_address1 = 64'd2;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            subrow_col_indices_address1 = 64'd0;
        end else begin
            subrow_col_indices_address1 = 'bx;
        end
    end else begin
        subrow_col_indices_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        subrow_col_indices_ce0 = 1'b1;
    end else begin
        subrow_col_indices_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        subrow_col_indices_ce1 = 1'b1;
    end else begin
        subrow_col_indices_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            subrow_vals_address0 = 64'd3;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            subrow_vals_address0 = 64'd1;
        end else begin
            subrow_vals_address0 = 'bx;
        end
    end else begin
        subrow_vals_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            subrow_vals_address1 = 64'd2;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            subrow_vals_address1 = 64'd0;
        end else begin
            subrow_vals_address1 = 'bx;
        end
    end else begin
        subrow_vals_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        subrow_vals_ce0 = 1'b1;
    end else begin
        subrow_vals_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        subrow_vals_ce1 = 1'b1;
    end else begin
        subrow_vals_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_idle_pp0_1to3 == 1'b1) & (ap_start == 1'b0)) & (ap_reset_idle_pp0 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((ap_reset_idle_pp0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage13_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage7_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage8_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage9_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage10_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage11_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage12_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage13_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage5_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage6_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage7_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage8_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage9_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage10_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage11_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage12_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage13_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_local_block = 1'b0;

assign ap_local_deadlock = 1'b0;

assign bitcast_ln9_10_fu_1530_p1 = init_vector_q1;

assign bitcast_ln9_11_fu_1535_p1 = init_vector_q0;

assign bitcast_ln9_12_fu_1540_p1 = init_vector_q1;

assign bitcast_ln9_13_fu_1545_p1 = init_vector_q0;

assign bitcast_ln9_14_fu_1550_p1 = init_vector_q1;

assign bitcast_ln9_15_fu_1555_p1 = init_vector_q0;

assign bitcast_ln9_16_fu_1560_p1 = init_vector_q1;

assign bitcast_ln9_17_fu_1565_p1 = init_vector_q0;

assign bitcast_ln9_18_fu_1570_p1 = init_vector_q1;

assign bitcast_ln9_19_fu_1575_p1 = init_vector_q0;

assign bitcast_ln9_1_fu_1485_p1 = init_vector_q0;

assign bitcast_ln9_20_fu_1580_p1 = init_vector_q1;

assign bitcast_ln9_21_fu_1585_p1 = init_vector_q0;

assign bitcast_ln9_22_fu_1590_p1 = init_vector_q0;

assign bitcast_ln9_2_fu_1490_p1 = init_vector_q1;

assign bitcast_ln9_3_fu_1495_p1 = init_vector_q0;

assign bitcast_ln9_4_fu_1500_p1 = init_vector_q1;

assign bitcast_ln9_5_fu_1505_p1 = init_vector_q0;

assign bitcast_ln9_6_fu_1510_p1 = init_vector_q1;

assign bitcast_ln9_7_fu_1515_p1 = init_vector_q0;

assign bitcast_ln9_8_fu_1520_p1 = init_vector_q1;

assign bitcast_ln9_9_fu_1525_p1 = init_vector_q0;

assign bitcast_ln9_fu_1480_p1 = init_vector_q1;

assign grp_fu_612_p1 = subrow_vals_load_1_reg_1729;

assign grp_fu_850_p1 = subrow_vals_load_3_reg_1799;

assign grp_fu_871_p1 = subrow_vals_load_reg_1714;

assign grp_fu_874_p1 = subrow_vals_load_2_reg_1784;

assign grp_reduce_fu_1452_ap_start = grp_reduce_fu_1452_ap_start_reg;

assign out_r = grp_reduce_fu_1452_out_r;

assign out_r_ap_vld = grp_reduce_fu_1452_out_r_ap_vld;

assign select_ln20_1_fu_1634_p3 = ((mult_enables_load_1_reg_1724_pp0_iter1_reg[0:0] == 1'b1) ? grp_fu_612_p2 : 32'd0);

assign select_ln20_2_fu_1641_p3 = ((mult_enables_load_2_reg_1779_pp0_iter1_reg[0:0] == 1'b1) ? grp_fu_874_p2 : 32'd0);

assign select_ln20_3_fu_1648_p3 = ((mult_enables_load_3_reg_1794_pp0_iter1_reg[0:0] == 1'b1) ? grp_fu_850_p2 : 32'd0);

assign x_fu_1627_p3 = ((mult_enables_load_reg_1709_pp0_iter1_reg[0:0] == 1'b1) ? grp_fu_871_p2 : 32'd0);

assign zext_ln21_1_fu_1599_p1 = subrow_col_indices_load_1_reg_1734;

assign zext_ln21_2_fu_1603_p1 = subrow_col_indices_load_2_reg_1789;

assign zext_ln21_3_fu_1607_p1 = subrow_col_indices_load_3_reg_1804;

assign zext_ln21_fu_1595_p1 = subrow_col_indices_load_reg_1719;

endmodule //accelerate
