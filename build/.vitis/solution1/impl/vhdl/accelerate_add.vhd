-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity accelerate_add is
port (
    ap_ready : OUT STD_LOGIC;
    this_buffer_value_offset : IN STD_LOGIC_VECTOR (0 downto 0);
    this_buffer_label_offset : IN STD_LOGIC_VECTOR (0 downto 0);
    this_num_items_read_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    this_num_items_read : IN STD_LOGIC_VECTOR (31 downto 0);
    this_valid_read : IN STD_LOGIC;
    reducer_circuit_levels_buffer_value_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    reducer_circuit_levels_buffer_value_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    reducer_circuit_levels_buffer_label_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    reducer_circuit_levels_buffer_label_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    reducer_circuit_levels_buffer_value_1_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    reducer_circuit_levels_buffer_value_0_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of accelerate_add is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv31_1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_logic_0 : STD_LOGIC := '0';

attribute shreg_extract : string;
    signal or_ln22_1_fu_214_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln22_1_fu_202_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln22_fu_190_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln19_fu_102_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_110_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal select_ln15_1_fu_134_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln15_fu_94_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln12_1_fu_154_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln16_fu_166_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln12_2_fu_178_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln19_fu_120_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln19_fu_184_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln22_fu_196_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln12_fu_148_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln22_fu_208_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln16_fu_160_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln15_fu_142_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln16_1_fu_172_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln16_fu_220_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln16_1_fu_228_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln22_fu_236_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln19_fu_252_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln19_1_fu_258_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln12_3_fu_264_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln12_fu_270_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln22_2_fu_276_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln19_1_fu_288_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln12_fu_296_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln16_2_fu_304_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln16_3_fu_312_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln22_2_fu_320_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln22_4_fu_336_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln22_3_fu_282_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln31_fu_350_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln22_1_fu_244_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln22_3_fu_328_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln31_fu_350_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln31_1_fu_358_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln31_2_fu_366_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln22_4_fu_342_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_ce_reg : STD_LOGIC;


begin



    add_ln15_fu_142_p2 <= std_logic_vector(unsigned(select_ln15_1_fu_134_p3) + unsigned(select_ln15_fu_94_p3));
    and_ln12_fu_270_p2 <= (icmp_ln12_3_fu_264_p2 and and_ln19_1_fu_258_p2);
    and_ln16_1_fu_172_p2 <= (xor_ln16_fu_166_p2 and icmp_ln12_1_fu_154_p2);
    and_ln16_fu_160_p2 <= (this_buffer_label_offset and icmp_ln12_1_fu_154_p2);
    and_ln19_1_fu_258_p2 <= (xor_ln19_fu_252_p2 and icmp_ln12_2_fu_178_p2);
    and_ln19_fu_184_p2 <= (icmp_ln19_fu_120_p2 and icmp_ln12_2_fu_178_p2);
    and_ln22_1_fu_202_p2 <= (xor_ln22_fu_196_p2 and and_ln19_fu_184_p2);
    and_ln22_fu_190_p2 <= (this_buffer_value_offset and and_ln19_fu_184_p2);
    ap_ready <= ap_const_logic_1;
    ap_return_0 <= select_ln31_fu_350_p3;
    ap_return_1 <= select_ln31_1_fu_358_p3;
    ap_return_2 <= select_ln31_2_fu_366_p3;
    ap_return_3 <= select_ln22_4_fu_342_p3;
    icmp_ln12_1_fu_154_p2 <= "1" when (this_num_items_read = ap_const_lv32_2) else "0";
    icmp_ln12_2_fu_178_p2 <= "1" when (this_num_items_read = ap_const_lv32_1) else "0";
    icmp_ln12_3_fu_264_p2 <= "0" when (this_num_items_read = ap_const_lv32_0) else "1";
    icmp_ln12_fu_148_p2 <= "1" when (this_num_items_read = ap_const_lv32_0) else "0";
    icmp_ln19_fu_120_p2 <= "1" when (signed(tmp_fu_110_p4) < signed(ap_const_lv31_1)) else "0";
    or_ln22_1_fu_214_p2 <= (or_ln22_fu_208_p2 or icmp_ln12_1_fu_154_p2);
    or_ln22_2_fu_276_p2 <= (and_ln19_fu_184_p2 or and_ln12_fu_270_p2);
    or_ln22_3_fu_282_p2 <= (or_ln22_2_fu_276_p2 or icmp_ln12_1_fu_154_p2);
    or_ln22_4_fu_336_p2 <= (icmp_ln12_1_fu_154_p2 or and_ln19_fu_184_p2);
    or_ln22_fu_208_p2 <= (icmp_ln12_fu_148_p2 or and_ln19_fu_184_p2);
    select_ln12_fu_296_p3 <= 
        ap_const_lv32_0 when (icmp_ln12_fu_148_p2(0) = '1') else 
        select_ln19_1_fu_288_p3;
    select_ln15_1_fu_134_p3 <= 
        reducer_circuit_levels_buffer_value_1_1 when (this_buffer_value_offset(0) = '1') else 
        reducer_circuit_levels_buffer_value_0_1;
    select_ln15_fu_94_p3 <= 
        reducer_circuit_levels_buffer_value_1_0 when (this_buffer_value_offset(0) = '1') else 
        reducer_circuit_levels_buffer_value_0_0;
    select_ln16_1_fu_228_p3 <= 
        add_ln15_fu_142_p2 when (and_ln16_1_fu_172_p2(0) = '1') else 
        select_ln16_fu_220_p3;
    select_ln16_2_fu_304_p3 <= 
        reducer_circuit_levels_buffer_label_1_0 when (and_ln16_fu_160_p2(0) = '1') else 
        select_ln12_fu_296_p3;
    select_ln16_3_fu_312_p3 <= 
        reducer_circuit_levels_buffer_label_0_0 when (and_ln16_1_fu_172_p2(0) = '1') else 
        select_ln16_2_fu_304_p3;
    select_ln16_fu_220_p3 <= 
        add_ln15_fu_142_p2 when (and_ln16_fu_160_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln19_1_fu_288_p3 <= 
        select_ln19_fu_102_p3 when (and_ln19_1_fu_258_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln19_fu_102_p3 <= 
        reducer_circuit_levels_buffer_label_1_0 when (this_buffer_label_offset(0) = '1') else 
        reducer_circuit_levels_buffer_label_0_0;
    select_ln22_1_fu_244_p3 <= 
        reducer_circuit_levels_buffer_value_0_0 when (and_ln22_1_fu_202_p2(0) = '1') else 
        select_ln22_fu_236_p3;
    select_ln22_2_fu_320_p3 <= 
        select_ln19_fu_102_p3 when (and_ln22_fu_190_p2(0) = '1') else 
        select_ln16_3_fu_312_p3;
    select_ln22_3_fu_328_p3 <= 
        select_ln19_fu_102_p3 when (and_ln22_1_fu_202_p2(0) = '1') else 
        select_ln22_2_fu_320_p3;
    select_ln22_4_fu_342_p3 <= 
        ap_const_lv32_0 when (or_ln22_4_fu_336_p2(0) = '1') else 
        this_num_items_read_2;
    select_ln22_fu_236_p3 <= 
        reducer_circuit_levels_buffer_value_1_0 when (and_ln22_fu_190_p2(0) = '1') else 
        select_ln16_1_fu_228_p3;
    select_ln31_1_fu_358_p3 <= 
        select_ln22_1_fu_244_p3 when (or_ln22_1_fu_214_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln31_2_fu_366_p3 <= 
        select_ln22_3_fu_328_p3 when (or_ln22_1_fu_214_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln31_fu_350_p2 <= (0=>this_valid_read, others=>'-');
    select_ln31_fu_350_p3 <= 
        or_ln22_3_fu_282_p2 when (or_ln22_1_fu_214_p2(0) = '1') else 
        select_ln31_fu_350_p2;
    tmp_fu_110_p4 <= select_ln19_fu_102_p3(31 downto 1);
    xor_ln16_fu_166_p2 <= (this_buffer_label_offset xor ap_const_lv1_1);
    xor_ln19_fu_252_p2 <= (icmp_ln19_fu_120_p2 xor ap_const_lv1_1);
    xor_ln22_fu_196_p2 <= (this_buffer_value_offset xor ap_const_lv1_1);
end behav;
