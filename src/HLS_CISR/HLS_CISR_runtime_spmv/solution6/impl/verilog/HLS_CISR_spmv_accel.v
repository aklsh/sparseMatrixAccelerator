// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="HLS_CISR_spmv_accel_HLS_CISR_spmv_accel,hls_ip_2020_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=12.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.024000,HLS_SYN_LAT=28,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1290,HLS_SYN_LUT=2010,HLS_VERSION=2020_2}" *)

module HLS_CISR_spmv_accel (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        cmd_start,
        inp_vec_address0,
        inp_vec_ce0,
        inp_vec_q0,
        slot_data_arr_address0,
        slot_data_arr_ce0,
        slot_data_arr_q0,
        slot_arr_row_len_address0,
        slot_arr_row_len_ce0,
        slot_arr_row_len_q0,
        output_vec_address0,
        output_vec_ce0,
        output_vec_we0,
        output_vec_d0
);

parameter    ap_ST_fsm_state1 = 23'd1;
parameter    ap_ST_fsm_state2 = 23'd2;
parameter    ap_ST_fsm_state3 = 23'd4;
parameter    ap_ST_fsm_state4 = 23'd8;
parameter    ap_ST_fsm_state5 = 23'd16;
parameter    ap_ST_fsm_state6 = 23'd32;
parameter    ap_ST_fsm_state7 = 23'd64;
parameter    ap_ST_fsm_pp1_stage0 = 23'd128;
parameter    ap_ST_fsm_state10 = 23'd256;
parameter    ap_ST_fsm_state11 = 23'd512;
parameter    ap_ST_fsm_state12 = 23'd1024;
parameter    ap_ST_fsm_state13 = 23'd2048;
parameter    ap_ST_fsm_state14 = 23'd4096;
parameter    ap_ST_fsm_state15 = 23'd8192;
parameter    ap_ST_fsm_state16 = 23'd16384;
parameter    ap_ST_fsm_state17 = 23'd32768;
parameter    ap_ST_fsm_state18 = 23'd65536;
parameter    ap_ST_fsm_state19 = 23'd131072;
parameter    ap_ST_fsm_state20 = 23'd262144;
parameter    ap_ST_fsm_state21 = 23'd524288;
parameter    ap_ST_fsm_state22 = 23'd1048576;
parameter    ap_ST_fsm_state23 = 23'd2097152;
parameter    ap_ST_fsm_state24 = 23'd4194304;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [0:0] cmd_start;
output  [2:0] inp_vec_address0;
output   inp_vec_ce0;
input  [31:0] inp_vec_q0;
output  [1:0] slot_data_arr_address0;
output   slot_data_arr_ce0;
input  [63:0] slot_data_arr_q0;
output  [1:0] slot_arr_row_len_address0;
output   slot_arr_row_len_ce0;
input  [31:0] slot_arr_row_len_q0;
output  [2:0] output_vec_address0;
output   output_vec_ce0;
output   output_vec_we0;
output  [31:0] output_vec_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[2:0] inp_vec_address0;
reg inp_vec_ce0;
reg[1:0] slot_data_arr_address0;
reg slot_data_arr_ce0;
reg[1:0] slot_arr_row_len_address0;
reg slot_arr_row_len_ce0;
reg[2:0] output_vec_address0;
reg output_vec_ce0;
reg output_vec_we0;
reg[31:0] output_vec_d0;

(* fsm_encoding = "none" *) reg   [22:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] max_row_id;
reg   [2:0] row_len_slot_arr_address0;
reg    row_len_slot_arr_ce0;
reg    row_len_slot_arr_we0;
reg   [31:0] row_len_slot_arr_d0;
wire   [31:0] row_len_slot_arr_q0;
reg   [2:0] row_len_slot_arr_address1;
reg    row_len_slot_arr_ce1;
reg    row_len_slot_arr_we1;
reg   [31:0] row_len_slot_arr_d1;
reg   [31:0] slot_counter_0;
reg   [31:0] slot_counter_1;
reg   [31:0] slot_counter_2;
reg   [31:0] slot_counter_3;
reg   [31:0] slot_row_counter_0;
reg   [31:0] slot_row_counter_1;
reg   [31:0] slot_row_counter_2;
reg   [31:0] slot_row_counter_3;
reg   [31:0] slot_row_len_id_0;
reg   [31:0] slot_row_len_id_1;
reg   [31:0] slot_row_len_id_2;
reg   [31:0] slot_row_len_id_3;
reg   [31:0] slot_res_arr_0;
reg   [31:0] slot_res_arr_1;
reg   [31:0] slot_res_arr_2;
reg   [31:0] slot_res_arr_3;
reg   [2:0] slot_row_id_0;
reg   [2:0] slot_row_id_1;
reg   [2:0] slot_row_id_2;
reg   [2:0] slot_row_id_3;
reg   [2:0] slot_id2_reg_376;
wire   [31:0] grp_fu_387_p2;
reg   [31:0] reg_451;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state23;
wire   [0:0] cmd_start_read_read_fu_134_p2;
wire   [2:0] add_ln26_fu_461_p2;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire   [2:0] add_ln68_fu_715_p2;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_state8_pp1_stage0_iter0;
wire    ap_block_state9_pp1_stage0_iter1;
wire    ap_block_pp1_stage0_11001;
wire   [0:0] icmp_ln68_fu_721_p2;
wire   [1:0] trunc_ln86_fu_727_p1;
reg   [1:0] trunc_ln86_reg_1176;
wire   [0:0] icmp_ln80_fu_751_p2;
reg   [0:0] icmp_ln80_reg_1180;
wire    ap_CS_fsm_state10;
wire   [31:0] trunc_ln107_fu_948_p1;
reg   [31:0] trunc_ln107_reg_1194;
wire    ap_CS_fsm_state11;
wire   [31:0] matrix_val_fu_957_p1;
wire    ap_CS_fsm_state12;
wire   [31:0] bitcast_ln111_fu_961_p1;
wire   [31:0] trunc_ln107_1_fu_966_p1;
reg   [31:0] trunc_ln107_1_reg_1219;
wire   [31:0] matrix_val_1_fu_975_p1;
wire    ap_CS_fsm_state13;
wire   [31:0] bitcast_ln111_1_fu_979_p1;
wire   [31:0] trunc_ln107_2_fu_984_p1;
reg   [31:0] trunc_ln107_2_reg_1244;
wire   [31:0] matrix_val_2_fu_993_p1;
wire    ap_CS_fsm_state14;
wire   [31:0] bitcast_ln111_2_fu_997_p1;
wire   [31:0] trunc_ln107_3_fu_1002_p1;
reg   [31:0] trunc_ln107_3_reg_1269;
wire   [31:0] grp_fu_391_p2;
reg   [31:0] mul_i_reg_1279;
wire    ap_CS_fsm_state15;
wire   [31:0] matrix_val_3_fu_1011_p1;
wire   [31:0] bitcast_ln111_3_fu_1015_p1;
reg   [31:0] mul_1_i_reg_1297;
wire    ap_CS_fsm_state16;
reg   [31:0] mul_2_i_reg_1305;
wire    ap_CS_fsm_state17;
reg   [31:0] mul_3_i_reg_1313;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state7;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state8;
reg    ap_enable_reg_pp1_iter1;
reg   [2:0] slot_id_reg_365;
wire   [0:0] icmp_ln26_fu_467_p2;
wire   [63:0] zext_ln37_fu_481_p1;
wire   [63:0] tmp_3_fu_492_p3;
wire   [63:0] zext_ln58_fu_605_p1;
wire   [0:0] grp_fu_419_p2;
wire   [63:0] zext_ln58_1_fu_636_p1;
wire   [63:0] zext_ln58_2_fu_667_p1;
wire   [63:0] zext_ln58_3_fu_698_p1;
wire   [63:0] zext_ln86_fu_797_p1;
wire    ap_block_pp1_stage0;
wire   [63:0] zext_ln111_fu_952_p1;
wire   [63:0] zext_ln111_1_fu_970_p1;
wire   [63:0] zext_ln111_2_fu_988_p1;
wire   [63:0] zext_ln111_3_fu_1006_p1;
wire   [63:0] zext_ln131_fu_1050_p1;
wire   [63:0] zext_ln131_1_fu_1070_p1;
wire   [63:0] zext_ln131_2_fu_1090_p1;
wire   [63:0] zext_ln131_3_fu_1110_p1;
wire    ap_CS_fsm_state24;
wire   [31:0] add_ln92_fu_864_p2;
wire   [31:0] add_ln59_fu_610_p2;
wire   [1:0] trunc_ln29_fu_501_p1;
wire   [31:0] add_ln59_1_fu_641_p2;
wire   [31:0] add_ln59_2_fu_672_p2;
wire   [31:0] add_ln59_3_fu_703_p2;
wire   [31:0] add_ln115_fu_900_p2;
reg   [31:0] ap_sig_allocacmp_slot_row_counter_0_load_1;
reg   [31:0] grp_load_fu_425_p1;
wire   [31:0] add_ln115_1_fu_912_p2;
reg   [31:0] ap_sig_allocacmp_slot_row_counter_1_load_1;
reg   [31:0] grp_load_fu_429_p1;
wire   [31:0] add_ln115_2_fu_924_p2;
reg   [31:0] ap_sig_allocacmp_slot_row_counter_2_load_1;
reg   [31:0] grp_load_fu_433_p1;
wire   [31:0] add_ln115_3_fu_936_p2;
reg   [31:0] ap_sig_allocacmp_slot_row_counter_3_load_1;
reg   [31:0] grp_load_fu_437_p1;
wire   [31:0] add_ln87_fu_802_p2;
wire    ap_CS_fsm_state19;
wire   [2:0] trunc_ln91_fu_836_p1;
wire   [31:0] bitcast_ln131_fu_1055_p1;
wire   [31:0] bitcast_ln131_1_fu_1075_p1;
wire   [31:0] bitcast_ln131_2_fu_1095_p1;
wire   [31:0] bitcast_ln131_3_fu_1115_p1;
reg   [31:0] grp_fu_387_p0;
reg   [31:0] grp_fu_387_p1;
reg   [31:0] grp_fu_391_p0;
reg   [31:0] grp_fu_391_p1;
wire   [3:0] tmp_2_fu_473_p3;
wire   [3:0] or_ln37_fu_486_p2;
wire   [2:0] trunc_ln58_fu_626_p1;
wire   [2:0] add_ln58_fu_630_p2;
wire   [2:0] trunc_ln58_1_fu_657_p1;
wire   [2:0] xor_ln58_fu_661_p2;
wire   [2:0] trunc_ln58_2_fu_688_p1;
wire   [2:0] add_ln58_1_fu_692_p2;
wire   [31:0] tmp_fu_737_p6;
wire   [31:0] tmp_1_fu_773_p6;
wire   [2:0] shl_ln68_fu_731_p2;
wire   [2:0] trunc_ln86_1_fu_787_p1;
wire   [2:0] add_ln86_fu_791_p2;
wire   [2:0] grp_fu_441_p4;
reg   [22:0] ap_NS_fsm;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 23'd1;
#0 max_row_id = 32'd0;
#0 slot_counter_0 = 32'd0;
#0 slot_counter_1 = 32'd0;
#0 slot_counter_2 = 32'd0;
#0 slot_counter_3 = 32'd0;
#0 slot_row_counter_0 = 32'd0;
#0 slot_row_counter_1 = 32'd0;
#0 slot_row_counter_2 = 32'd0;
#0 slot_row_counter_3 = 32'd0;
#0 slot_row_len_id_0 = 32'd0;
#0 slot_row_len_id_1 = 32'd0;
#0 slot_row_len_id_2 = 32'd0;
#0 slot_row_len_id_3 = 32'd0;
#0 slot_res_arr_0 = 32'd0;
#0 slot_res_arr_1 = 32'd0;
#0 slot_res_arr_2 = 32'd0;
#0 slot_res_arr_3 = 32'd0;
#0 slot_row_id_0 = 3'd0;
#0 slot_row_id_1 = 3'd0;
#0 slot_row_id_2 = 3'd0;
#0 slot_row_id_3 = 3'd0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
end

HLS_CISR_spmv_accel_row_len_slot_arr #(
    .DataWidth( 32 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
row_len_slot_arr_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(row_len_slot_arr_address0),
    .ce0(row_len_slot_arr_ce0),
    .we0(row_len_slot_arr_we0),
    .d0(row_len_slot_arr_d0),
    .q0(row_len_slot_arr_q0),
    .address1(row_len_slot_arr_address1),
    .ce1(row_len_slot_arr_ce1),
    .we1(row_len_slot_arr_we1),
    .d1(row_len_slot_arr_d1)
);

HLS_CISR_spmv_accel_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_5_full_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_387_p0),
    .din1(grp_fu_387_p1),
    .ce(1'b1),
    .dout(grp_fu_387_p2)
);

HLS_CISR_spmv_accel_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_391_p0),
    .din1(grp_fu_391_p1),
    .ce(1'b1),
    .dout(grp_fu_391_p2)
);

HLS_CISR_spmv_accel_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U3(
    .din0(grp_load_fu_425_p1),
    .din1(grp_load_fu_429_p1),
    .din2(grp_load_fu_433_p1),
    .din3(grp_load_fu_437_p1),
    .din4(trunc_ln86_fu_727_p1),
    .dout(tmp_fu_737_p6)
);

HLS_CISR_spmv_accel_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U4(
    .din0(slot_row_len_id_0),
    .din1(slot_row_len_id_1),
    .din2(slot_row_len_id_2),
    .din3(slot_row_len_id_3),
    .din4(trunc_ln86_fu_727_p1),
    .dout(tmp_1_fu_773_p6)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state8) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state8) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state8);
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (cmd_start_read_read_fu_134_p2 == 1'd1))) begin
        max_row_id <= 32'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln80_fu_751_p2 == 1'd1) & (icmp_ln68_fu_721_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        max_row_id <= add_ln92_fu_864_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_fu_501_p1 == 2'd0) & (icmp_ln26_fu_467_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        slot_counter_0 <= 32'd0;
    end else if (((grp_fu_419_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        slot_counter_0 <= add_ln59_fu_610_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_fu_501_p1 == 2'd1) & (icmp_ln26_fu_467_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        slot_counter_1 <= 32'd0;
    end else if (((grp_fu_419_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        slot_counter_1 <= add_ln59_1_fu_641_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_fu_501_p1 == 2'd2) & (icmp_ln26_fu_467_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        slot_counter_2 <= 32'd0;
    end else if (((grp_fu_419_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        slot_counter_2 <= add_ln59_2_fu_672_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_fu_501_p1 == 2'd3) & (icmp_ln26_fu_467_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        slot_counter_3 <= 32'd0;
    end else if (((grp_fu_419_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        slot_counter_3 <= add_ln59_3_fu_703_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        slot_id2_reg_376 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln68_fu_721_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        slot_id2_reg_376 <= add_ln68_fu_715_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (cmd_start_read_read_fu_134_p2 == 1'd1))) begin
        slot_id_reg_365 <= 3'd0;
    end else if (((icmp_ln26_fu_467_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        slot_id_reg_365 <= add_ln26_fu_461_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((trunc_ln29_fu_501_p1 == 2'd0) & (icmp_ln26_fu_467_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln80_fu_751_p2 == 1'd1) & (trunc_ln86_fu_727_p1 == 2'd0) & (icmp_ln68_fu_721_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
        slot_res_arr_0 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        slot_res_arr_0 <= reg_451;
    end
end

always @ (posedge ap_clk) begin
    if ((((trunc_ln29_fu_501_p1 == 2'd1) & (icmp_ln26_fu_467_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln80_fu_751_p2 == 1'd1) & (trunc_ln86_fu_727_p1 == 2'd1) & (icmp_ln68_fu_721_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
        slot_res_arr_1 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        slot_res_arr_1 <= reg_451;
    end
end

always @ (posedge ap_clk) begin
    if ((((trunc_ln29_fu_501_p1 == 2'd2) & (icmp_ln26_fu_467_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln80_fu_751_p2 == 1'd1) & (trunc_ln86_fu_727_p1 == 2'd2) & (icmp_ln68_fu_721_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
        slot_res_arr_2 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        slot_res_arr_2 <= reg_451;
    end
end

always @ (posedge ap_clk) begin
    if ((((trunc_ln29_fu_501_p1 == 2'd3) & (icmp_ln26_fu_467_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln80_fu_751_p2 == 1'd1) & (trunc_ln86_fu_727_p1 == 2'd3) & (icmp_ln68_fu_721_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
        slot_res_arr_3 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        slot_res_arr_3 <= reg_451;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_fu_501_p1 == 2'd0) & (icmp_ln26_fu_467_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        slot_row_counter_0 <= 32'd0;
    end else if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln80_reg_1180 == 1'd1) & (trunc_ln86_reg_1176 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        slot_row_counter_0 <= row_len_slot_arr_q0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        slot_row_counter_0 <= add_ln115_fu_900_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_fu_501_p1 == 2'd1) & (icmp_ln26_fu_467_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        slot_row_counter_1 <= 32'd0;
    end else if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln80_reg_1180 == 1'd1) & (trunc_ln86_reg_1176 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        slot_row_counter_1 <= row_len_slot_arr_q0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        slot_row_counter_1 <= add_ln115_1_fu_912_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_fu_501_p1 == 2'd2) & (icmp_ln26_fu_467_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        slot_row_counter_2 <= 32'd0;
    end else if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln80_reg_1180 == 1'd1) & (trunc_ln86_reg_1176 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        slot_row_counter_2 <= row_len_slot_arr_q0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        slot_row_counter_2 <= add_ln115_2_fu_924_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_fu_501_p1 == 2'd3) & (icmp_ln26_fu_467_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        slot_row_counter_3 <= 32'd0;
    end else if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln80_reg_1180 == 1'd1) & (trunc_ln86_reg_1176 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        slot_row_counter_3 <= row_len_slot_arr_q0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        slot_row_counter_3 <= add_ln115_3_fu_936_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_fu_501_p1 == 2'd0) & (icmp_ln26_fu_467_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        slot_row_id_0 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln80_fu_751_p2 == 1'd1) & (trunc_ln86_fu_727_p1 == 2'd0) & (icmp_ln68_fu_721_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        slot_row_id_0 <= trunc_ln91_fu_836_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_fu_501_p1 == 2'd1) & (icmp_ln26_fu_467_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        slot_row_id_1 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln80_fu_751_p2 == 1'd1) & (trunc_ln86_fu_727_p1 == 2'd1) & (icmp_ln68_fu_721_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        slot_row_id_1 <= trunc_ln91_fu_836_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_fu_501_p1 == 2'd2) & (icmp_ln26_fu_467_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        slot_row_id_2 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln80_fu_751_p2 == 1'd1) & (trunc_ln86_fu_727_p1 == 2'd2) & (icmp_ln68_fu_721_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        slot_row_id_2 <= trunc_ln91_fu_836_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_fu_501_p1 == 2'd3) & (icmp_ln26_fu_467_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        slot_row_id_3 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln80_fu_751_p2 == 1'd1) & (trunc_ln86_fu_727_p1 == 2'd3) & (icmp_ln68_fu_721_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        slot_row_id_3 <= trunc_ln91_fu_836_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_fu_501_p1 == 2'd0) & (icmp_ln26_fu_467_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        slot_row_len_id_0 <= 32'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln80_fu_751_p2 == 1'd1) & (trunc_ln86_fu_727_p1 == 2'd0) & (icmp_ln68_fu_721_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        slot_row_len_id_0 <= add_ln87_fu_802_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_fu_501_p1 == 2'd1) & (icmp_ln26_fu_467_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        slot_row_len_id_1 <= 32'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln80_fu_751_p2 == 1'd1) & (trunc_ln86_fu_727_p1 == 2'd1) & (icmp_ln68_fu_721_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        slot_row_len_id_1 <= add_ln87_fu_802_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_fu_501_p1 == 2'd2) & (icmp_ln26_fu_467_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        slot_row_len_id_2 <= 32'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln80_fu_751_p2 == 1'd1) & (trunc_ln86_fu_727_p1 == 2'd2) & (icmp_ln68_fu_721_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        slot_row_len_id_2 <= add_ln87_fu_802_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_fu_501_p1 == 2'd3) & (icmp_ln26_fu_467_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        slot_row_len_id_3 <= 32'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln80_fu_751_p2 == 1'd1) & (trunc_ln86_fu_727_p1 == 2'd3) & (icmp_ln68_fu_721_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        slot_row_len_id_3 <= add_ln87_fu_802_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln68_fu_721_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        icmp_ln80_reg_1180 <= icmp_ln80_fu_751_p2;
        trunc_ln86_reg_1176 <= trunc_ln86_fu_727_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        mul_1_i_reg_1297 <= grp_fu_391_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        mul_2_i_reg_1305 <= grp_fu_391_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        mul_3_i_reg_1313 <= grp_fu_391_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        mul_i_reg_1279 <= grp_fu_391_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20))) begin
        reg_451 <= grp_fu_387_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        trunc_ln107_1_reg_1219 <= trunc_ln107_1_fu_966_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        trunc_ln107_2_reg_1244 <= trunc_ln107_2_fu_984_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        trunc_ln107_3_reg_1269 <= trunc_ln107_3_fu_1002_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        trunc_ln107_reg_1194 <= trunc_ln107_fu_948_p1;
    end
end

always @ (*) begin
    if ((icmp_ln68_fu_721_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state8 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state8 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln80_reg_1180 == 1'd1) & (trunc_ln86_reg_1176 == 2'd0) & (1'b0 == ap_block_pp1_stage0))) begin
        ap_sig_allocacmp_slot_row_counter_0_load_1 = row_len_slot_arr_q0;
    end else begin
        ap_sig_allocacmp_slot_row_counter_0_load_1 = slot_row_counter_0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln80_reg_1180 == 1'd1) & (trunc_ln86_reg_1176 == 2'd1) & (1'b0 == ap_block_pp1_stage0))) begin
        ap_sig_allocacmp_slot_row_counter_1_load_1 = row_len_slot_arr_q0;
    end else begin
        ap_sig_allocacmp_slot_row_counter_1_load_1 = slot_row_counter_1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln80_reg_1180 == 1'd1) & (trunc_ln86_reg_1176 == 2'd2) & (1'b0 == ap_block_pp1_stage0))) begin
        ap_sig_allocacmp_slot_row_counter_2_load_1 = row_len_slot_arr_q0;
    end else begin
        ap_sig_allocacmp_slot_row_counter_2_load_1 = slot_row_counter_2;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln80_reg_1180 == 1'd1) & (trunc_ln86_reg_1176 == 2'd3) & (1'b0 == ap_block_pp1_stage0))) begin
        ap_sig_allocacmp_slot_row_counter_3_load_1 = row_len_slot_arr_q0;
    end else begin
        ap_sig_allocacmp_slot_row_counter_3_load_1 = slot_row_counter_3;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_387_p0 = slot_res_arr_3;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_387_p0 = slot_res_arr_2;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_387_p0 = slot_res_arr_1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_387_p0 = slot_res_arr_0;
    end else begin
        grp_fu_387_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_387_p1 = mul_3_i_reg_1313;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_387_p1 = mul_2_i_reg_1305;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_387_p1 = mul_1_i_reg_1297;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_387_p1 = mul_i_reg_1279;
    end else begin
        grp_fu_387_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_391_p0 = matrix_val_3_fu_1011_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_391_p0 = matrix_val_2_fu_993_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_391_p0 = matrix_val_1_fu_975_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_391_p0 = matrix_val_fu_957_p1;
    end else begin
        grp_fu_391_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_391_p1 = bitcast_ln111_3_fu_1015_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_391_p1 = bitcast_ln111_2_fu_997_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_391_p1 = bitcast_ln111_1_fu_979_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_391_p1 = bitcast_ln111_fu_961_p1;
    end else begin
        grp_fu_391_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_load_fu_425_p1 = slot_row_counter_0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln68_fu_721_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        grp_load_fu_425_p1 = ap_sig_allocacmp_slot_row_counter_0_load_1;
    end else begin
        grp_load_fu_425_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_load_fu_429_p1 = slot_row_counter_1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln68_fu_721_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        grp_load_fu_429_p1 = ap_sig_allocacmp_slot_row_counter_1_load_1;
    end else begin
        grp_load_fu_429_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_load_fu_433_p1 = slot_row_counter_2;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln68_fu_721_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        grp_load_fu_433_p1 = ap_sig_allocacmp_slot_row_counter_2_load_1;
    end else begin
        grp_load_fu_433_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_load_fu_437_p1 = slot_row_counter_3;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln68_fu_721_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        grp_load_fu_437_p1 = ap_sig_allocacmp_slot_row_counter_3_load_1;
    end else begin
        grp_load_fu_437_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        inp_vec_address0 = zext_ln111_3_fu_1006_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        inp_vec_address0 = zext_ln111_2_fu_988_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        inp_vec_address0 = zext_ln111_1_fu_970_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        inp_vec_address0 = zext_ln111_fu_952_p1;
    end else begin
        inp_vec_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11))) begin
        inp_vec_ce0 = 1'b1;
    end else begin
        inp_vec_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        output_vec_address0 = zext_ln131_3_fu_1110_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        output_vec_address0 = zext_ln131_2_fu_1090_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        output_vec_address0 = zext_ln131_1_fu_1070_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        output_vec_address0 = zext_ln131_fu_1050_p1;
    end else begin
        output_vec_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21))) begin
        output_vec_ce0 = 1'b1;
    end else begin
        output_vec_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        output_vec_d0 = bitcast_ln131_3_fu_1115_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        output_vec_d0 = bitcast_ln131_2_fu_1095_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        output_vec_d0 = bitcast_ln131_1_fu_1075_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        output_vec_d0 = bitcast_ln131_fu_1055_p1;
    end else begin
        output_vec_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21))) begin
        output_vec_we0 = 1'b1;
    end else begin
        output_vec_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        row_len_slot_arr_address0 = zext_ln86_fu_797_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        row_len_slot_arr_address0 = zext_ln58_2_fu_667_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        row_len_slot_arr_address0 = zext_ln58_fu_605_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        row_len_slot_arr_address0 = tmp_3_fu_492_p3;
    end else begin
        row_len_slot_arr_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        row_len_slot_arr_address1 = zext_ln58_3_fu_698_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        row_len_slot_arr_address1 = zext_ln58_1_fu_636_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        row_len_slot_arr_address1 = zext_ln37_fu_481_p1;
    end else begin
        row_len_slot_arr_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
        row_len_slot_arr_ce0 = 1'b1;
    end else begin
        row_len_slot_arr_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state2))) begin
        row_len_slot_arr_ce1 = 1'b1;
    end else begin
        row_len_slot_arr_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4))) begin
        row_len_slot_arr_d0 = slot_arr_row_len_q0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        row_len_slot_arr_d0 = 32'd0;
    end else begin
        row_len_slot_arr_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
        row_len_slot_arr_d1 = slot_arr_row_len_q0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        row_len_slot_arr_d1 = 32'd0;
    end else begin
        row_len_slot_arr_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((grp_fu_419_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6)) | ((grp_fu_419_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4)) | ((icmp_ln26_fu_467_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        row_len_slot_arr_we0 = 1'b1;
    end else begin
        row_len_slot_arr_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((grp_fu_419_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)) | ((grp_fu_419_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5)) | ((icmp_ln26_fu_467_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        row_len_slot_arr_we1 = 1'b1;
    end else begin
        row_len_slot_arr_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        slot_arr_row_len_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        slot_arr_row_len_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        slot_arr_row_len_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        slot_arr_row_len_address0 = 64'd0;
    end else begin
        slot_arr_row_len_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        slot_arr_row_len_ce0 = 1'b1;
    end else begin
        slot_arr_row_len_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        slot_data_arr_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        slot_data_arr_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        slot_data_arr_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        slot_data_arr_address0 = 64'd0;
    end else begin
        slot_data_arr_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        slot_data_arr_ce0 = 1'b1;
    end else begin
        slot_data_arr_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (cmd_start_read_read_fu_134_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (cmd_start_read_read_fu_134_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln26_fu_467_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((icmp_ln68_fu_721_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((icmp_ln68_fu_721_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln115_1_fu_912_p2 = ($signed(grp_load_fu_429_p1) + $signed(32'd4294967295));

assign add_ln115_2_fu_924_p2 = ($signed(grp_load_fu_433_p1) + $signed(32'd4294967295));

assign add_ln115_3_fu_936_p2 = ($signed(grp_load_fu_437_p1) + $signed(32'd4294967295));

assign add_ln115_fu_900_p2 = ($signed(grp_load_fu_425_p1) + $signed(32'd4294967295));

assign add_ln26_fu_461_p2 = (slot_id_reg_365 + 3'd1);

assign add_ln58_1_fu_692_p2 = ($signed(trunc_ln58_2_fu_688_p1) + $signed(3'd6));

assign add_ln58_fu_630_p2 = (trunc_ln58_fu_626_p1 + 3'd2);

assign add_ln59_1_fu_641_p2 = (slot_counter_1 + 32'd1);

assign add_ln59_2_fu_672_p2 = (slot_counter_2 + 32'd1);

assign add_ln59_3_fu_703_p2 = (slot_counter_3 + 32'd1);

assign add_ln59_fu_610_p2 = (slot_counter_0 + 32'd1);

assign add_ln68_fu_715_p2 = (slot_id2_reg_376 + 3'd1);

assign add_ln86_fu_791_p2 = (shl_ln68_fu_731_p2 + trunc_ln86_1_fu_787_p1);

assign add_ln87_fu_802_p2 = (tmp_1_fu_773_p6 + 32'd1);

assign add_ln92_fu_864_p2 = (max_row_id + 32'd1);

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state8_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign bitcast_ln111_1_fu_979_p1 = inp_vec_q0;

assign bitcast_ln111_2_fu_997_p1 = inp_vec_q0;

assign bitcast_ln111_3_fu_1015_p1 = inp_vec_q0;

assign bitcast_ln111_fu_961_p1 = inp_vec_q0;

assign bitcast_ln131_1_fu_1075_p1 = reg_451;

assign bitcast_ln131_2_fu_1095_p1 = reg_451;

assign bitcast_ln131_3_fu_1115_p1 = reg_451;

assign bitcast_ln131_fu_1055_p1 = reg_451;

assign cmd_start_read_read_fu_134_p2 = cmd_start;

assign grp_fu_419_p2 = ((slot_arr_row_len_q0 == 32'd4294967295) ? 1'b1 : 1'b0);

assign grp_fu_441_p4 = {{slot_data_arr_q0[34:32]}};

assign icmp_ln26_fu_467_p2 = ((slot_id_reg_365 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln68_fu_721_p2 = ((slot_id2_reg_376 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln80_fu_751_p2 = ((tmp_fu_737_p6 == 32'd0) ? 1'b1 : 1'b0);

assign matrix_val_1_fu_975_p1 = trunc_ln107_1_reg_1219;

assign matrix_val_2_fu_993_p1 = trunc_ln107_2_reg_1244;

assign matrix_val_3_fu_1011_p1 = trunc_ln107_3_reg_1269;

assign matrix_val_fu_957_p1 = trunc_ln107_reg_1194;

assign or_ln37_fu_486_p2 = (tmp_2_fu_473_p3 | 4'd1);

assign shl_ln68_fu_731_p2 = slot_id2_reg_376 << 3'd1;

assign tmp_2_fu_473_p3 = {{slot_id_reg_365}, {1'd0}};

assign tmp_3_fu_492_p3 = {{60'd0}, {or_ln37_fu_486_p2}};

assign trunc_ln107_1_fu_966_p1 = slot_data_arr_q0[31:0];

assign trunc_ln107_2_fu_984_p1 = slot_data_arr_q0[31:0];

assign trunc_ln107_3_fu_1002_p1 = slot_data_arr_q0[31:0];

assign trunc_ln107_fu_948_p1 = slot_data_arr_q0[31:0];

assign trunc_ln29_fu_501_p1 = slot_id_reg_365[1:0];

assign trunc_ln58_1_fu_657_p1 = slot_counter_2[2:0];

assign trunc_ln58_2_fu_688_p1 = slot_counter_3[2:0];

assign trunc_ln58_fu_626_p1 = slot_counter_1[2:0];

assign trunc_ln86_1_fu_787_p1 = tmp_1_fu_773_p6[2:0];

assign trunc_ln86_fu_727_p1 = slot_id2_reg_376[1:0];

assign trunc_ln91_fu_836_p1 = max_row_id[2:0];

assign xor_ln58_fu_661_p2 = (trunc_ln58_1_fu_657_p1 ^ 3'd4);

assign zext_ln111_1_fu_970_p1 = grp_fu_441_p4;

assign zext_ln111_2_fu_988_p1 = grp_fu_441_p4;

assign zext_ln111_3_fu_1006_p1 = grp_fu_441_p4;

assign zext_ln111_fu_952_p1 = grp_fu_441_p4;

assign zext_ln131_1_fu_1070_p1 = slot_row_id_1;

assign zext_ln131_2_fu_1090_p1 = slot_row_id_2;

assign zext_ln131_3_fu_1110_p1 = slot_row_id_3;

assign zext_ln131_fu_1050_p1 = slot_row_id_0;

assign zext_ln37_fu_481_p1 = tmp_2_fu_473_p3;

assign zext_ln58_1_fu_636_p1 = add_ln58_fu_630_p2;

assign zext_ln58_2_fu_667_p1 = xor_ln58_fu_661_p2;

assign zext_ln58_3_fu_698_p1 = add_ln58_1_fu_692_p2;

assign zext_ln58_fu_605_p1 = slot_counter_0;

assign zext_ln86_fu_797_p1 = add_ln86_fu_791_p2;

endmodule //HLS_CISR_spmv_accel
