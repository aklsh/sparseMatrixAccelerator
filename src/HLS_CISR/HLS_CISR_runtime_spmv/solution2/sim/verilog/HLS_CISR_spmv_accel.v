// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="HLS_CISR_spmv_accel_HLS_CISR_spmv_accel,hls_ip_2020_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.256000,HLS_SYN_LAT=32,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1367,HLS_SYN_LUT=1907,HLS_VERSION=2020_2}" *)

module HLS_CISR_spmv_accel (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        cmd_start,
        inp_vec_address0,
        inp_vec_ce0,
        inp_vec_q0,
        slot_data_arr_address0,
        slot_data_arr_ce0,
        slot_data_arr_q0,
        slot_arr_row_len_address0,
        slot_arr_row_len_ce0,
        slot_arr_row_len_q0,
        output_vec_address0,
        output_vec_ce0,
        output_vec_we0,
        output_vec_d0
);

parameter    ap_ST_fsm_state1 = 22'd1;
parameter    ap_ST_fsm_state2 = 22'd2;
parameter    ap_ST_fsm_state3 = 22'd4;
parameter    ap_ST_fsm_pp1_stage0 = 22'd8;
parameter    ap_ST_fsm_state7 = 22'd16;
parameter    ap_ST_fsm_pp2_stage0 = 22'd32;
parameter    ap_ST_fsm_state10 = 22'd64;
parameter    ap_ST_fsm_state11 = 22'd128;
parameter    ap_ST_fsm_state12 = 22'd256;
parameter    ap_ST_fsm_state13 = 22'd512;
parameter    ap_ST_fsm_state14 = 22'd1024;
parameter    ap_ST_fsm_state15 = 22'd2048;
parameter    ap_ST_fsm_state16 = 22'd4096;
parameter    ap_ST_fsm_state17 = 22'd8192;
parameter    ap_ST_fsm_state18 = 22'd16384;
parameter    ap_ST_fsm_state19 = 22'd32768;
parameter    ap_ST_fsm_state20 = 22'd65536;
parameter    ap_ST_fsm_state21 = 22'd131072;
parameter    ap_ST_fsm_state22 = 22'd262144;
parameter    ap_ST_fsm_state23 = 22'd524288;
parameter    ap_ST_fsm_state24 = 22'd1048576;
parameter    ap_ST_fsm_state25 = 22'd2097152;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [0:0] cmd_start;
output  [2:0] inp_vec_address0;
output   inp_vec_ce0;
input  [31:0] inp_vec_q0;
output  [1:0] slot_data_arr_address0;
output   slot_data_arr_ce0;
input  [63:0] slot_data_arr_q0;
output  [1:0] slot_arr_row_len_address0;
output   slot_arr_row_len_ce0;
input  [31:0] slot_arr_row_len_q0;
output  [2:0] output_vec_address0;
output   output_vec_ce0;
output   output_vec_we0;
output  [31:0] output_vec_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[2:0] inp_vec_address0;
reg inp_vec_ce0;
reg[1:0] slot_data_arr_address0;
reg slot_data_arr_ce0;
reg slot_arr_row_len_ce0;
reg[2:0] output_vec_address0;
reg output_vec_ce0;
reg output_vec_we0;
reg[31:0] output_vec_d0;

(* fsm_encoding = "none" *) reg   [21:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] max_row_id;
reg   [2:0] row_len_slot_arr_address0;
reg    row_len_slot_arr_ce0;
reg    row_len_slot_arr_we0;
reg   [31:0] row_len_slot_arr_d0;
reg   [2:0] row_len_slot_arr_address1;
reg    row_len_slot_arr_ce1;
reg    row_len_slot_arr_we1;
wire   [31:0] row_len_slot_arr_q1;
reg   [31:0] slot_counter_0;
reg   [31:0] slot_counter_1;
reg   [31:0] slot_counter_2;
reg   [31:0] slot_counter_3;
reg   [31:0] slot_row_counter_0;
reg   [31:0] slot_row_counter_1;
reg   [31:0] slot_row_counter_2;
reg   [31:0] slot_row_counter_3;
reg   [31:0] slot_row_len_id_0;
reg   [31:0] slot_row_len_id_1;
reg   [31:0] slot_row_len_id_2;
reg   [31:0] slot_row_len_id_3;
reg   [31:0] slot_res_arr_0;
reg   [31:0] slot_res_arr_1;
reg   [31:0] slot_res_arr_2;
reg   [31:0] slot_res_arr_3;
reg   [2:0] slot_row_id_0;
reg   [2:0] slot_row_id_1;
reg   [2:0] slot_row_id_2;
reg   [2:0] slot_row_id_3;
reg   [2:0] slot_id1_reg_326;
reg   [2:0] slot_id2_reg_337;
reg   [31:0] reg_406;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
wire   [31:0] grp_fu_348_p2;
reg   [31:0] reg_410;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state24;
wire   [0:0] cmd_start_read_read_fu_138_p2;
wire   [2:0] add_ln25_fu_420_p2;
wire    ap_CS_fsm_state2;
wire   [2:0] add_ln49_fu_560_p2;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_state4_pp1_stage0_iter0;
wire    ap_block_state5_pp1_stage0_iter1;
wire    ap_block_state6_pp1_stage0_iter2;
wire    ap_block_pp1_stage0_11001;
wire   [0:0] icmp_ln49_fu_566_p2;
wire   [1:0] trunc_ln58_fu_577_p1;
reg   [1:0] trunc_ln58_reg_1124;
wire   [2:0] shl_ln49_fu_581_p2;
reg   [2:0] shl_ln49_reg_1129;
reg   [31:0] slot_arr_row_len_load_reg_1139;
wire   [0:0] icmp_ln55_fu_620_p2;
reg   [0:0] icmp_ln55_reg_1144;
wire   [2:0] add_ln58_fu_656_p2;
reg   [2:0] add_ln58_reg_1148;
wire   [2:0] add_ln68_fu_695_p2;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter0;
wire    ap_block_state8_pp2_stage0_iter0;
wire    ap_block_state9_pp2_stage0_iter1;
wire    ap_block_pp2_stage0_11001;
wire   [0:0] icmp_ln68_fu_701_p2;
wire   [1:0] trunc_ln86_fu_707_p1;
reg   [1:0] trunc_ln86_reg_1162;
wire   [0:0] icmp_ln80_fu_731_p2;
reg   [0:0] icmp_ln80_reg_1166;
wire    ap_CS_fsm_state10;
wire   [31:0] trunc_ln106_fu_928_p1;
reg   [31:0] trunc_ln106_reg_1180;
wire    ap_CS_fsm_state11;
wire   [31:0] trunc_ln106_1_fu_937_p1;
reg   [31:0] trunc_ln106_1_reg_1195;
wire   [31:0] matrix_val_fu_946_p1;
wire   [31:0] bitcast_ln110_fu_950_p1;
wire   [31:0] trunc_ln106_2_fu_955_p1;
reg   [31:0] trunc_ln106_2_reg_1220;
wire   [31:0] matrix_val_1_fu_964_p1;
wire   [31:0] bitcast_ln110_1_fu_968_p1;
wire   [31:0] trunc_ln106_3_fu_973_p1;
reg   [31:0] trunc_ln106_3_reg_1245;
wire   [31:0] matrix_val_2_fu_982_p1;
wire   [31:0] bitcast_ln110_2_fu_986_p1;
wire   [31:0] grp_fu_352_p2;
reg   [31:0] mul_i_reg_1265;
wire    ap_CS_fsm_state16;
wire   [31:0] matrix_val_3_fu_991_p1;
wire   [31:0] bitcast_ln110_3_fu_995_p1;
reg   [31:0] mul_1_i_reg_1283;
wire    ap_CS_fsm_state17;
reg   [31:0] mul_2_i_reg_1291;
wire    ap_CS_fsm_state18;
reg   [31:0] mul_3_i_reg_1299;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state3;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state4;
reg    ap_enable_reg_pp1_iter1;
reg    ap_enable_reg_pp1_iter2;
wire    ap_CS_fsm_state7;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state8;
reg    ap_enable_reg_pp2_iter1;
reg   [2:0] slot_id_reg_315;
wire   [0:0] icmp_ln25_fu_426_p2;
wire   [63:0] zext_ln37_fu_440_p1;
wire   [63:0] tmp_3_fu_451_p3;
wire   [63:0] slot_id1_cast_fu_572_p1;
wire    ap_block_pp1_stage0;
wire   [63:0] zext_ln58_fu_691_p1;
wire   [63:0] zext_ln86_fu_777_p1;
wire    ap_block_pp2_stage0;
wire   [63:0] zext_ln110_fu_932_p1;
wire   [63:0] zext_ln110_1_fu_941_p1;
wire   [63:0] zext_ln110_2_fu_959_p1;
wire   [63:0] zext_ln110_3_fu_977_p1;
wire   [63:0] zext_ln127_fu_1030_p1;
wire   [63:0] zext_ln127_1_fu_1050_p1;
wire   [63:0] zext_ln127_2_fu_1070_p1;
wire   [63:0] zext_ln127_3_fu_1090_p1;
wire    ap_CS_fsm_state25;
wire   [31:0] add_ln91_fu_844_p2;
wire   [31:0] add_ln59_fu_661_p2;
wire   [1:0] trunc_ln29_fu_460_p1;
wire   [31:0] add_ln113_fu_880_p2;
reg   [31:0] ap_sig_allocacmp_slot_row_counter_0_load_1;
reg   [31:0] grp_load_fu_380_p1;
wire   [31:0] add_ln113_1_fu_892_p2;
reg   [31:0] ap_sig_allocacmp_slot_row_counter_1_load_1;
reg   [31:0] grp_load_fu_384_p1;
wire   [31:0] add_ln113_2_fu_904_p2;
reg   [31:0] ap_sig_allocacmp_slot_row_counter_2_load_1;
reg   [31:0] grp_load_fu_388_p1;
wire   [31:0] add_ln113_3_fu_916_p2;
reg   [31:0] ap_sig_allocacmp_slot_row_counter_3_load_1;
reg   [31:0] grp_load_fu_392_p1;
wire   [31:0] add_ln87_fu_782_p2;
wire    ap_CS_fsm_state20;
wire   [2:0] trunc_ln90_fu_816_p1;
wire   [31:0] bitcast_ln127_fu_1035_p1;
wire   [31:0] bitcast_ln127_1_fu_1055_p1;
wire   [31:0] bitcast_ln127_2_fu_1075_p1;
wire   [31:0] bitcast_ln127_3_fu_1095_p1;
reg   [31:0] grp_fu_348_p0;
reg   [31:0] grp_fu_348_p1;
reg   [31:0] grp_fu_352_p0;
reg   [31:0] grp_fu_352_p1;
wire   [3:0] tmp_2_fu_432_p3;
wire   [3:0] or_ln37_fu_445_p2;
wire   [31:0] slot_row_count_fu_603_p6;
wire   [0:0] trunc_ln53_fu_616_p1;
wire   [2:0] p_and_f_cast_fu_634_p3;
wire   [0:0] tmp_4_fu_626_p3;
wire   [2:0] sub_ln58_fu_642_p2;
wire   [2:0] select_ln58_fu_648_p3;
wire   [31:0] tmp_fu_717_p6;
wire   [31:0] tmp_1_fu_753_p6;
wire   [2:0] shl_ln68_fu_711_p2;
wire   [2:0] trunc_ln86_1_fu_767_p1;
wire   [2:0] add_ln86_fu_771_p2;
wire   [2:0] grp_fu_396_p4;
reg   [21:0] ap_NS_fsm;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 22'd1;
#0 max_row_id = 32'd0;
#0 slot_counter_0 = 32'd0;
#0 slot_counter_1 = 32'd0;
#0 slot_counter_2 = 32'd0;
#0 slot_counter_3 = 32'd0;
#0 slot_row_counter_0 = 32'd0;
#0 slot_row_counter_1 = 32'd0;
#0 slot_row_counter_2 = 32'd0;
#0 slot_row_counter_3 = 32'd0;
#0 slot_row_len_id_0 = 32'd0;
#0 slot_row_len_id_1 = 32'd0;
#0 slot_row_len_id_2 = 32'd0;
#0 slot_row_len_id_3 = 32'd0;
#0 slot_res_arr_0 = 32'd0;
#0 slot_res_arr_1 = 32'd0;
#0 slot_res_arr_2 = 32'd0;
#0 slot_res_arr_3 = 32'd0;
#0 slot_row_id_0 = 3'd0;
#0 slot_row_id_1 = 3'd0;
#0 slot_row_id_2 = 3'd0;
#0 slot_row_id_3 = 3'd0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
end

HLS_CISR_spmv_accel_row_len_slot_arr #(
    .DataWidth( 32 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
row_len_slot_arr_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(row_len_slot_arr_address0),
    .ce0(row_len_slot_arr_ce0),
    .we0(row_len_slot_arr_we0),
    .d0(row_len_slot_arr_d0),
    .address1(row_len_slot_arr_address1),
    .ce1(row_len_slot_arr_ce1),
    .we1(row_len_slot_arr_we1),
    .d1(32'd0),
    .q1(row_len_slot_arr_q1)
);

HLS_CISR_spmv_accel_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_5_full_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_348_p0),
    .din1(grp_fu_348_p1),
    .ce(1'b1),
    .dout(grp_fu_348_p2)
);

HLS_CISR_spmv_accel_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_352_p0),
    .din1(grp_fu_352_p1),
    .ce(1'b1),
    .dout(grp_fu_352_p2)
);

HLS_CISR_spmv_accel_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U3(
    .din0(slot_counter_0),
    .din1(slot_counter_1),
    .din2(slot_counter_2),
    .din3(slot_counter_3),
    .din4(trunc_ln58_reg_1124),
    .dout(slot_row_count_fu_603_p6)
);

HLS_CISR_spmv_accel_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U4(
    .din0(grp_load_fu_380_p1),
    .din1(grp_load_fu_384_p1),
    .din2(grp_load_fu_388_p1),
    .din3(grp_load_fu_392_p1),
    .din4(trunc_ln86_fu_707_p1),
    .dout(tmp_fu_717_p6)
);

HLS_CISR_spmv_accel_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U5(
    .din0(slot_row_len_id_0),
    .din1(slot_row_len_id_1),
    .din2(slot_row_len_id_2),
    .din3(slot_row_len_id_3),
    .din4(trunc_ln86_fu_707_p1),
    .dout(tmp_1_fu_753_p6)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state4) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state4)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state4);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_enable_reg_pp1_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp2_exit_iter0_state8) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp2_exit_iter0_state8) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
            ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state8);
        end else if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (cmd_start_read_read_fu_138_p2 == 1'd1))) begin
        max_row_id <= 32'd0;
    end else if (((icmp_ln80_fu_731_p2 == 1'd1) & (icmp_ln68_fu_701_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        max_row_id <= add_ln91_fu_844_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_fu_460_p1 == 2'd0) & (icmp_ln25_fu_426_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        slot_counter_0 <= 32'd0;
    end else if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln55_fu_620_p2 == 1'd0) & (trunc_ln58_reg_1124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        slot_counter_0 <= add_ln59_fu_661_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_fu_460_p1 == 2'd1) & (icmp_ln25_fu_426_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        slot_counter_1 <= 32'd0;
    end else if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln55_fu_620_p2 == 1'd0) & (trunc_ln58_reg_1124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        slot_counter_1 <= add_ln59_fu_661_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_fu_460_p1 == 2'd2) & (icmp_ln25_fu_426_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        slot_counter_2 <= 32'd0;
    end else if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln55_fu_620_p2 == 1'd0) & (trunc_ln58_reg_1124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        slot_counter_2 <= add_ln59_fu_661_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_fu_460_p1 == 2'd3) & (icmp_ln25_fu_426_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        slot_counter_3 <= 32'd0;
    end else if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln55_fu_620_p2 == 1'd0) & (trunc_ln58_reg_1124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        slot_counter_3 <= add_ln59_fu_661_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        slot_id1_reg_326 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln49_fu_566_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        slot_id1_reg_326 <= add_ln49_fu_560_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        slot_id2_reg_337 <= 3'd0;
    end else if (((icmp_ln68_fu_701_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        slot_id2_reg_337 <= add_ln68_fu_695_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (cmd_start_read_read_fu_138_p2 == 1'd1))) begin
        slot_id_reg_315 <= 3'd0;
    end else if (((icmp_ln25_fu_426_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        slot_id_reg_315 <= add_ln25_fu_420_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((trunc_ln29_fu_460_p1 == 2'd0) & (icmp_ln25_fu_426_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((icmp_ln80_fu_731_p2 == 1'd1) & (trunc_ln86_fu_707_p1 == 2'd0) & (icmp_ln68_fu_701_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001)))) begin
        slot_res_arr_0 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        slot_res_arr_0 <= reg_410;
    end
end

always @ (posedge ap_clk) begin
    if ((((trunc_ln29_fu_460_p1 == 2'd1) & (icmp_ln25_fu_426_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((icmp_ln80_fu_731_p2 == 1'd1) & (trunc_ln86_fu_707_p1 == 2'd1) & (icmp_ln68_fu_701_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001)))) begin
        slot_res_arr_1 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        slot_res_arr_1 <= reg_410;
    end
end

always @ (posedge ap_clk) begin
    if ((((trunc_ln29_fu_460_p1 == 2'd2) & (icmp_ln25_fu_426_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((icmp_ln80_fu_731_p2 == 1'd1) & (trunc_ln86_fu_707_p1 == 2'd2) & (icmp_ln68_fu_701_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001)))) begin
        slot_res_arr_2 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        slot_res_arr_2 <= reg_410;
    end
end

always @ (posedge ap_clk) begin
    if ((((trunc_ln29_fu_460_p1 == 2'd3) & (icmp_ln25_fu_426_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((icmp_ln80_fu_731_p2 == 1'd1) & (trunc_ln86_fu_707_p1 == 2'd3) & (icmp_ln68_fu_701_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001)))) begin
        slot_res_arr_3 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        slot_res_arr_3 <= reg_410;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_fu_460_p1 == 2'd0) & (icmp_ln25_fu_426_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        slot_row_counter_0 <= 32'd0;
    end else if (((ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln80_reg_1166 == 1'd1) & (trunc_ln86_reg_1162 == 2'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        slot_row_counter_0 <= row_len_slot_arr_q1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        slot_row_counter_0 <= add_ln113_fu_880_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_fu_460_p1 == 2'd1) & (icmp_ln25_fu_426_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        slot_row_counter_1 <= 32'd0;
    end else if (((ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln80_reg_1166 == 1'd1) & (trunc_ln86_reg_1162 == 2'd1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        slot_row_counter_1 <= row_len_slot_arr_q1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        slot_row_counter_1 <= add_ln113_1_fu_892_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_fu_460_p1 == 2'd2) & (icmp_ln25_fu_426_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        slot_row_counter_2 <= 32'd0;
    end else if (((ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln80_reg_1166 == 1'd1) & (trunc_ln86_reg_1162 == 2'd2) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        slot_row_counter_2 <= row_len_slot_arr_q1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        slot_row_counter_2 <= add_ln113_2_fu_904_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_fu_460_p1 == 2'd3) & (icmp_ln25_fu_426_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        slot_row_counter_3 <= 32'd0;
    end else if (((ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln80_reg_1166 == 1'd1) & (trunc_ln86_reg_1162 == 2'd3) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        slot_row_counter_3 <= row_len_slot_arr_q1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        slot_row_counter_3 <= add_ln113_3_fu_916_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_fu_460_p1 == 2'd0) & (icmp_ln25_fu_426_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        slot_row_id_0 <= 3'd0;
    end else if (((icmp_ln80_fu_731_p2 == 1'd1) & (trunc_ln86_fu_707_p1 == 2'd0) & (icmp_ln68_fu_701_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        slot_row_id_0 <= trunc_ln90_fu_816_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_fu_460_p1 == 2'd1) & (icmp_ln25_fu_426_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        slot_row_id_1 <= 3'd0;
    end else if (((icmp_ln80_fu_731_p2 == 1'd1) & (trunc_ln86_fu_707_p1 == 2'd1) & (icmp_ln68_fu_701_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        slot_row_id_1 <= trunc_ln90_fu_816_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_fu_460_p1 == 2'd2) & (icmp_ln25_fu_426_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        slot_row_id_2 <= 3'd0;
    end else if (((icmp_ln80_fu_731_p2 == 1'd1) & (trunc_ln86_fu_707_p1 == 2'd2) & (icmp_ln68_fu_701_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        slot_row_id_2 <= trunc_ln90_fu_816_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_fu_460_p1 == 2'd3) & (icmp_ln25_fu_426_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        slot_row_id_3 <= 3'd0;
    end else if (((icmp_ln80_fu_731_p2 == 1'd1) & (trunc_ln86_fu_707_p1 == 2'd3) & (icmp_ln68_fu_701_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        slot_row_id_3 <= trunc_ln90_fu_816_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_fu_460_p1 == 2'd0) & (icmp_ln25_fu_426_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        slot_row_len_id_0 <= 32'd0;
    end else if (((icmp_ln80_fu_731_p2 == 1'd1) & (trunc_ln86_fu_707_p1 == 2'd0) & (icmp_ln68_fu_701_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        slot_row_len_id_0 <= add_ln87_fu_782_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_fu_460_p1 == 2'd1) & (icmp_ln25_fu_426_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        slot_row_len_id_1 <= 32'd0;
    end else if (((icmp_ln80_fu_731_p2 == 1'd1) & (trunc_ln86_fu_707_p1 == 2'd1) & (icmp_ln68_fu_701_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        slot_row_len_id_1 <= add_ln87_fu_782_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_fu_460_p1 == 2'd2) & (icmp_ln25_fu_426_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        slot_row_len_id_2 <= 32'd0;
    end else if (((icmp_ln80_fu_731_p2 == 1'd1) & (trunc_ln86_fu_707_p1 == 2'd2) & (icmp_ln68_fu_701_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        slot_row_len_id_2 <= add_ln87_fu_782_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_fu_460_p1 == 2'd3) & (icmp_ln25_fu_426_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        slot_row_len_id_3 <= 32'd0;
    end else if (((icmp_ln80_fu_731_p2 == 1'd1) & (trunc_ln86_fu_707_p1 == 2'd3) & (icmp_ln68_fu_701_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        slot_row_len_id_3 <= add_ln87_fu_782_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln55_fu_620_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        add_ln58_reg_1148 <= add_ln58_fu_656_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        icmp_ln55_reg_1144 <= icmp_ln55_fu_620_p2;
        slot_arr_row_len_load_reg_1139 <= slot_arr_row_len_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln68_fu_701_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        icmp_ln80_reg_1166 <= icmp_ln80_fu_731_p2;
        trunc_ln86_reg_1162 <= trunc_ln86_fu_707_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        mul_1_i_reg_1283 <= grp_fu_352_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        mul_2_i_reg_1291 <= grp_fu_352_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        mul_3_i_reg_1299 <= grp_fu_352_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        mul_i_reg_1265 <= grp_fu_352_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12))) begin
        reg_406 <= inp_vec_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21))) begin
        reg_410 <= grp_fu_348_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln49_fu_566_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        shl_ln49_reg_1129[2 : 1] <= shl_ln49_fu_581_p2[2 : 1];
        trunc_ln58_reg_1124 <= trunc_ln58_fu_577_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        trunc_ln106_1_reg_1195 <= trunc_ln106_1_fu_937_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        trunc_ln106_2_reg_1220 <= trunc_ln106_2_fu_955_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        trunc_ln106_3_reg_1245 <= trunc_ln106_3_fu_973_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        trunc_ln106_reg_1180 <= trunc_ln106_fu_928_p1;
    end
end

always @ (*) begin
    if ((icmp_ln49_fu_566_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state4 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state4 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln68_fu_701_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state8 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state8 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln80_reg_1166 == 1'd1) & (trunc_ln86_reg_1162 == 2'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        ap_sig_allocacmp_slot_row_counter_0_load_1 = row_len_slot_arr_q1;
    end else begin
        ap_sig_allocacmp_slot_row_counter_0_load_1 = slot_row_counter_0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln80_reg_1166 == 1'd1) & (trunc_ln86_reg_1162 == 2'd1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        ap_sig_allocacmp_slot_row_counter_1_load_1 = row_len_slot_arr_q1;
    end else begin
        ap_sig_allocacmp_slot_row_counter_1_load_1 = slot_row_counter_1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln80_reg_1166 == 1'd1) & (trunc_ln86_reg_1162 == 2'd2) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        ap_sig_allocacmp_slot_row_counter_2_load_1 = row_len_slot_arr_q1;
    end else begin
        ap_sig_allocacmp_slot_row_counter_2_load_1 = slot_row_counter_2;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln80_reg_1166 == 1'd1) & (trunc_ln86_reg_1162 == 2'd3) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        ap_sig_allocacmp_slot_row_counter_3_load_1 = row_len_slot_arr_q1;
    end else begin
        ap_sig_allocacmp_slot_row_counter_3_load_1 = slot_row_counter_3;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_348_p0 = slot_res_arr_3;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_348_p0 = slot_res_arr_2;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_348_p0 = slot_res_arr_1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_348_p0 = slot_res_arr_0;
    end else begin
        grp_fu_348_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_348_p1 = mul_3_i_reg_1299;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_348_p1 = mul_2_i_reg_1291;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_348_p1 = mul_1_i_reg_1283;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_348_p1 = mul_i_reg_1265;
    end else begin
        grp_fu_348_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_352_p0 = matrix_val_3_fu_991_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_352_p0 = matrix_val_2_fu_982_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_352_p0 = matrix_val_1_fu_964_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_352_p0 = matrix_val_fu_946_p1;
    end else begin
        grp_fu_352_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_352_p1 = bitcast_ln110_3_fu_995_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_352_p1 = bitcast_ln110_2_fu_986_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_352_p1 = bitcast_ln110_1_fu_968_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_352_p1 = bitcast_ln110_fu_950_p1;
    end else begin
        grp_fu_352_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_load_fu_380_p1 = slot_row_counter_0;
    end else if (((icmp_ln68_fu_701_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        grp_load_fu_380_p1 = ap_sig_allocacmp_slot_row_counter_0_load_1;
    end else begin
        grp_load_fu_380_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_load_fu_384_p1 = slot_row_counter_1;
    end else if (((icmp_ln68_fu_701_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        grp_load_fu_384_p1 = ap_sig_allocacmp_slot_row_counter_1_load_1;
    end else begin
        grp_load_fu_384_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_load_fu_388_p1 = slot_row_counter_2;
    end else if (((icmp_ln68_fu_701_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        grp_load_fu_388_p1 = ap_sig_allocacmp_slot_row_counter_2_load_1;
    end else begin
        grp_load_fu_388_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_load_fu_392_p1 = slot_row_counter_3;
    end else if (((icmp_ln68_fu_701_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        grp_load_fu_392_p1 = ap_sig_allocacmp_slot_row_counter_3_load_1;
    end else begin
        grp_load_fu_392_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        inp_vec_address0 = zext_ln110_3_fu_977_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        inp_vec_address0 = zext_ln110_2_fu_959_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        inp_vec_address0 = zext_ln110_1_fu_941_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        inp_vec_address0 = zext_ln110_fu_932_p1;
    end else begin
        inp_vec_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12))) begin
        inp_vec_ce0 = 1'b1;
    end else begin
        inp_vec_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        output_vec_address0 = zext_ln127_3_fu_1090_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        output_vec_address0 = zext_ln127_2_fu_1070_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        output_vec_address0 = zext_ln127_1_fu_1050_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        output_vec_address0 = zext_ln127_fu_1030_p1;
    end else begin
        output_vec_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22))) begin
        output_vec_ce0 = 1'b1;
    end else begin
        output_vec_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        output_vec_d0 = bitcast_ln127_3_fu_1095_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        output_vec_d0 = bitcast_ln127_2_fu_1075_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        output_vec_d0 = bitcast_ln127_1_fu_1055_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        output_vec_d0 = bitcast_ln127_fu_1035_p1;
    end else begin
        output_vec_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22))) begin
        output_vec_we0 = 1'b1;
    end else begin
        output_vec_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        row_len_slot_arr_address0 = zext_ln58_fu_691_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        row_len_slot_arr_address0 = tmp_3_fu_451_p3;
    end else begin
        row_len_slot_arr_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        row_len_slot_arr_address1 = zext_ln86_fu_777_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        row_len_slot_arr_address1 = zext_ln37_fu_440_p1;
    end else begin
        row_len_slot_arr_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        row_len_slot_arr_ce0 = 1'b1;
    end else begin
        row_len_slot_arr_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001)))) begin
        row_len_slot_arr_ce1 = 1'b1;
    end else begin
        row_len_slot_arr_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        row_len_slot_arr_d0 = slot_arr_row_len_load_reg_1139;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        row_len_slot_arr_d0 = 32'd0;
    end else begin
        row_len_slot_arr_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln55_reg_1144 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001)) | ((icmp_ln25_fu_426_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        row_len_slot_arr_we0 = 1'b1;
    end else begin
        row_len_slot_arr_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln25_fu_426_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        row_len_slot_arr_we1 = 1'b1;
    end else begin
        row_len_slot_arr_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        slot_arr_row_len_ce0 = 1'b1;
    end else begin
        slot_arr_row_len_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        slot_data_arr_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        slot_data_arr_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        slot_data_arr_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        slot_data_arr_address0 = 64'd0;
    end else begin
        slot_data_arr_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12))) begin
        slot_data_arr_ce0 = 1'b1;
    end else begin
        slot_data_arr_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (cmd_start_read_read_fu_138_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (cmd_start_read_read_fu_138_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln25_fu_426_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_enable_reg_pp1_iter1 == 1'b0) & (icmp_ln49_fu_566_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1)) & ~((ap_enable_reg_pp1_iter2 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter2 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone)) | ((ap_enable_reg_pp1_iter1 == 1'b0) & (icmp_ln49_fu_566_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if (~((icmp_ln68_fu_701_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((icmp_ln68_fu_701_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln113_1_fu_892_p2 = ($signed(grp_load_fu_384_p1) + $signed(32'd4294967295));

assign add_ln113_2_fu_904_p2 = ($signed(grp_load_fu_388_p1) + $signed(32'd4294967295));

assign add_ln113_3_fu_916_p2 = ($signed(grp_load_fu_392_p1) + $signed(32'd4294967295));

assign add_ln113_fu_880_p2 = ($signed(grp_load_fu_380_p1) + $signed(32'd4294967295));

assign add_ln25_fu_420_p2 = (slot_id_reg_315 + 3'd1);

assign add_ln49_fu_560_p2 = (slot_id1_reg_326 + 3'd1);

assign add_ln58_fu_656_p2 = (shl_ln49_reg_1129 + select_ln58_fu_648_p3);

assign add_ln59_fu_661_p2 = (slot_row_count_fu_603_p6 + 32'd1);

assign add_ln68_fu_695_p2 = (slot_id2_reg_337 + 3'd1);

assign add_ln86_fu_771_p2 = (shl_ln68_fu_711_p2 + trunc_ln86_1_fu_767_p1);

assign add_ln87_fu_782_p2 = (tmp_1_fu_753_p6 + 32'd1);

assign add_ln91_fu_844_p2 = (max_row_id + 32'd1);

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd4];

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state4_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign bitcast_ln110_1_fu_968_p1 = reg_406;

assign bitcast_ln110_2_fu_986_p1 = reg_406;

assign bitcast_ln110_3_fu_995_p1 = reg_406;

assign bitcast_ln110_fu_950_p1 = reg_406;

assign bitcast_ln127_1_fu_1055_p1 = reg_410;

assign bitcast_ln127_2_fu_1075_p1 = reg_410;

assign bitcast_ln127_3_fu_1095_p1 = reg_410;

assign bitcast_ln127_fu_1035_p1 = reg_410;

assign cmd_start_read_read_fu_138_p2 = cmd_start;

assign grp_fu_396_p4 = {{slot_data_arr_q0[34:32]}};

assign icmp_ln25_fu_426_p2 = ((slot_id_reg_315 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln49_fu_566_p2 = ((slot_id1_reg_326 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln55_fu_620_p2 = ((slot_arr_row_len_q0 == 32'd4294967295) ? 1'b1 : 1'b0);

assign icmp_ln68_fu_701_p2 = ((slot_id2_reg_337 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln80_fu_731_p2 = ((tmp_fu_717_p6 == 32'd0) ? 1'b1 : 1'b0);

assign matrix_val_1_fu_964_p1 = trunc_ln106_1_reg_1195;

assign matrix_val_2_fu_982_p1 = trunc_ln106_2_reg_1220;

assign matrix_val_3_fu_991_p1 = trunc_ln106_3_reg_1245;

assign matrix_val_fu_946_p1 = trunc_ln106_reg_1180;

assign or_ln37_fu_445_p2 = (tmp_2_fu_432_p3 | 4'd1);

assign p_and_f_cast_fu_634_p3 = {{2'd0}, {trunc_ln53_fu_616_p1}};

assign select_ln58_fu_648_p3 = ((tmp_4_fu_626_p3[0:0] == 1'b1) ? sub_ln58_fu_642_p2 : p_and_f_cast_fu_634_p3);

assign shl_ln49_fu_581_p2 = slot_id1_reg_326 << 3'd1;

assign shl_ln68_fu_711_p2 = slot_id2_reg_337 << 3'd1;

assign slot_arr_row_len_address0 = slot_id1_cast_fu_572_p1;

assign slot_id1_cast_fu_572_p1 = slot_id1_reg_326;

assign sub_ln58_fu_642_p2 = (3'd0 - p_and_f_cast_fu_634_p3);

assign tmp_2_fu_432_p3 = {{slot_id_reg_315}, {1'd0}};

assign tmp_3_fu_451_p3 = {{60'd0}, {or_ln37_fu_445_p2}};

assign tmp_4_fu_626_p3 = slot_row_count_fu_603_p6[32'd31];

assign trunc_ln106_1_fu_937_p1 = slot_data_arr_q0[31:0];

assign trunc_ln106_2_fu_955_p1 = slot_data_arr_q0[31:0];

assign trunc_ln106_3_fu_973_p1 = slot_data_arr_q0[31:0];

assign trunc_ln106_fu_928_p1 = slot_data_arr_q0[31:0];

assign trunc_ln29_fu_460_p1 = slot_id_reg_315[1:0];

assign trunc_ln53_fu_616_p1 = slot_row_count_fu_603_p6[0:0];

assign trunc_ln58_fu_577_p1 = slot_id1_reg_326[1:0];

assign trunc_ln86_1_fu_767_p1 = tmp_1_fu_753_p6[2:0];

assign trunc_ln86_fu_707_p1 = slot_id2_reg_337[1:0];

assign trunc_ln90_fu_816_p1 = max_row_id[2:0];

assign zext_ln110_1_fu_941_p1 = grp_fu_396_p4;

assign zext_ln110_2_fu_959_p1 = grp_fu_396_p4;

assign zext_ln110_3_fu_977_p1 = grp_fu_396_p4;

assign zext_ln110_fu_932_p1 = grp_fu_396_p4;

assign zext_ln127_1_fu_1050_p1 = slot_row_id_1;

assign zext_ln127_2_fu_1070_p1 = slot_row_id_2;

assign zext_ln127_3_fu_1090_p1 = slot_row_id_3;

assign zext_ln127_fu_1030_p1 = slot_row_id_0;

assign zext_ln37_fu_440_p1 = tmp_2_fu_432_p3;

assign zext_ln58_fu_691_p1 = add_ln58_reg_1148;

assign zext_ln86_fu_777_p1 = add_ln86_fu_771_p2;

always @ (posedge ap_clk) begin
    shl_ln49_reg_1129[0] <= 1'b0;
end

endmodule //HLS_CISR_spmv_accel
