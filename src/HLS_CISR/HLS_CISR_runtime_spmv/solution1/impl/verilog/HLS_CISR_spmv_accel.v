// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="HLS_CISR_spmv_accel_HLS_CISR_spmv_accel,hls_ip_2020_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.599600,HLS_SYN_LAT=41,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=964,HLS_SYN_LUT=1558,HLS_VERSION=2020_2}" *)

module HLS_CISR_spmv_accel (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        cmd_start,
        inp_vec,
        slot_data_arr,
        slot_arr_row_len,
        output_vec_i,
        output_vec_o,
        output_vec_o_ap_vld
);

parameter    ap_ST_fsm_state1 = 16'd1;
parameter    ap_ST_fsm_state2 = 16'd2;
parameter    ap_ST_fsm_state3 = 16'd4;
parameter    ap_ST_fsm_state4 = 16'd8;
parameter    ap_ST_fsm_state5 = 16'd16;
parameter    ap_ST_fsm_pp2_stage0 = 16'd32;
parameter    ap_ST_fsm_state8 = 16'd64;
parameter    ap_ST_fsm_state9 = 16'd128;
parameter    ap_ST_fsm_state10 = 16'd256;
parameter    ap_ST_fsm_state11 = 16'd512;
parameter    ap_ST_fsm_pp3_stage0 = 16'd1024;
parameter    ap_ST_fsm_pp3_stage1 = 16'd2048;
parameter    ap_ST_fsm_pp3_stage2 = 16'd4096;
parameter    ap_ST_fsm_pp3_stage3 = 16'd8192;
parameter    ap_ST_fsm_pp3_stage4 = 16'd16384;
parameter    ap_ST_fsm_state18 = 16'd32768;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [0:0] cmd_start;
input  [31:0] inp_vec;
input  [63:0] slot_data_arr;
input  [31:0] slot_arr_row_len;
input  [31:0] output_vec_i;
output  [31:0] output_vec_o;
output   output_vec_o_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[31:0] output_vec_o;
reg output_vec_o_ap_vld;

(* fsm_encoding = "none" *) reg   [15:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] max_row_id;
reg   [1:0] slot_row_id_address0;
reg    slot_row_id_ce0;
reg    slot_row_id_we0;
reg   [31:0] slot_row_id_d0;
reg   [2:0] row_len_slot_arr_address0;
reg    row_len_slot_arr_ce0;
reg    row_len_slot_arr_we0;
reg   [31:0] row_len_slot_arr_d0;
reg   [2:0] row_len_slot_arr_address1;
reg    row_len_slot_arr_ce1;
reg    row_len_slot_arr_we1;
wire   [31:0] row_len_slot_arr_q1;
reg   [31:0] slot_counter_0;
reg   [31:0] slot_counter_1;
reg   [31:0] slot_counter_2;
reg   [31:0] slot_counter_3;
reg   [31:0] slot_row_counter_0;
reg   [31:0] slot_row_counter_1;
reg   [31:0] slot_row_counter_2;
reg   [31:0] slot_row_counter_3;
reg   [31:0] slot_row_len_id_0;
reg   [31:0] slot_row_len_id_1;
reg   [31:0] slot_row_len_id_2;
reg   [31:0] slot_row_len_id_3;
reg   [2:0] slot_id2_reg_234;
reg   [2:0] slot_id3_reg_245;
wire   [0:0] cmd_start_read_read_fu_110_p2;
wire   [2:0] add_ln53_fu_286_p2;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln75_fu_407_p2;
reg   [0:0] icmp_ln75_reg_777;
wire   [2:0] add_ln70_fu_413_p2;
wire    ap_CS_fsm_state4;
wire   [2:0] add_ln87_fu_510_p2;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter0;
wire    ap_block_state6_pp2_stage0_iter0;
wire    ap_block_state7_pp2_stage0_iter1;
wire    ap_block_pp2_stage0_11001;
wire   [0:0] icmp_ln87_fu_516_p2;
wire   [1:0] trunc_ln96_fu_527_p1;
reg   [1:0] trunc_ln96_reg_801;
wire   [0:0] icmp_ln93_fu_551_p2;
reg   [0:0] icmp_ln93_reg_805;
wire    ap_CS_fsm_state8;
wire   [31:0] grp_fu_260_p2;
reg   [31:0] mul_reg_824;
wire    ap_CS_fsm_state11;
wire   [2:0] add_ln114_fu_687_p2;
reg   [2:0] add_ln114_reg_829;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter0;
wire    ap_block_state12_pp3_stage0_iter0;
wire    ap_block_state17_pp3_stage0_iter1;
wire    ap_block_pp3_stage0_11001;
wire   [0:0] icmp_ln114_fu_693_p2;
reg   [0:0] icmp_ln114_reg_834;
wire    ap_CS_fsm_pp3_stage1;
wire    ap_block_state13_pp3_stage1_iter0;
wire    ap_block_pp3_stage1_11001;
wire    ap_CS_fsm_state5;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state6;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state12;
reg    ap_enable_reg_pp3_iter1;
wire    ap_block_state16_pp3_stage4_iter0;
wire    ap_block_pp3_stage4_subdone;
wire    ap_CS_fsm_pp3_stage4;
reg   [2:0] slot_id_reg_212;
wire   [0:0] icmp_ln53_fu_292_p2;
reg   [2:0] slot_id_1_reg_223;
wire   [0:0] icmp_ln70_fu_419_p2;
reg   [2:0] ap_phi_mux_slot_id3_phi_fu_249_p4;
wire    ap_block_pp3_stage0;
wire   [63:0] zext_ln62_fu_311_p1;
wire   [63:0] tmp_4_fu_322_p3;
wire   [63:0] slot_id_cast_fu_298_p1;
wire   [63:0] zext_ln78_fu_475_p1;
wire   [63:0] zext_ln96_fu_597_p1;
wire    ap_block_pp2_stage0;
wire   [63:0] slot_id2_cast_fu_522_p1;
wire   [31:0] add_ln101_fu_637_p2;
wire   [31:0] add_ln79_fu_480_p2;
wire   [1:0] trunc_ln78_fu_425_p1;
wire   [1:0] trunc_ln55_fu_331_p1;
wire   [31:0] add_ln127_fu_717_p2;
wire   [1:0] trunc_ln127_fu_699_p1;
reg   [31:0] ap_sig_allocacmp_slot_row_counter_0_load;
reg   [31:0] grp_load_fu_264_p1;
reg   [31:0] ap_sig_allocacmp_slot_row_counter_1_load;
reg   [31:0] grp_load_fu_268_p1;
reg   [31:0] ap_sig_allocacmp_slot_row_counter_2_load;
reg   [31:0] grp_load_fu_272_p1;
reg   [31:0] ap_sig_allocacmp_slot_row_counter_3_load;
reg   [31:0] grp_load_fu_276_p1;
wire   [31:0] add_ln97_fu_602_p2;
wire   [31:0] bitcast_ln126_2_fu_752_p1;
wire    ap_block_pp3_stage0_01001;
wire   [31:0] grp_fu_256_p0;
wire    ap_block_pp3_stage1;
wire   [31:0] grp_fu_260_p0;
wire   [31:0] grp_fu_260_p1;
wire   [3:0] tmp_3_fu_303_p3;
wire   [3:0] or_ln62_fu_316_p2;
wire   [1:0] slot_row_count_fu_451_p5;
wire   [31:0] slot_row_count_fu_451_p6;
wire   [2:0] shl_ln70_fu_429_p2;
wire   [2:0] trunc_ln78_1_fu_465_p1;
wire   [2:0] add_ln78_fu_469_p2;
wire   [31:0] tmp_fu_537_p6;
wire   [31:0] tmp_1_fu_573_p6;
wire   [2:0] shl_ln87_fu_531_p2;
wire   [2:0] trunc_ln96_1_fu_587_p1;
wire   [2:0] add_ln96_fu_591_p2;
wire   [31:0] trunc_ln118_fu_673_p1;
wire   [1:0] tmp_2_fu_703_p5;
wire   [31:0] tmp_2_fu_703_p6;
wire   [31:0] grp_fu_256_p2;
wire    ap_CS_fsm_state18;
reg   [15:0] ap_NS_fsm;
wire    ap_block_pp3_stage1_subdone;
wire    ap_block_state14_pp3_stage2_iter0;
wire    ap_block_pp3_stage2_subdone;
wire    ap_block_pp3_stage2_11001;
wire    ap_block_state15_pp3_stage3_iter0;
wire    ap_block_pp3_stage3_subdone;
wire    ap_block_pp3_stage3_11001;
wire    ap_block_pp3_stage4_11001;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 16'd1;
#0 max_row_id = 32'd0;
#0 slot_counter_0 = 32'd0;
#0 slot_counter_1 = 32'd0;
#0 slot_counter_2 = 32'd0;
#0 slot_counter_3 = 32'd0;
#0 slot_row_counter_0 = 32'd0;
#0 slot_row_counter_1 = 32'd0;
#0 slot_row_counter_2 = 32'd0;
#0 slot_row_counter_3 = 32'd0;
#0 slot_row_len_id_0 = 32'd0;
#0 slot_row_len_id_1 = 32'd0;
#0 slot_row_len_id_2 = 32'd0;
#0 slot_row_len_id_3 = 32'd0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
end

HLS_CISR_spmv_accel_slot_row_id #(
    .DataWidth( 32 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
slot_row_id_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(slot_row_id_address0),
    .ce0(slot_row_id_ce0),
    .we0(slot_row_id_we0),
    .d0(slot_row_id_d0)
);

HLS_CISR_spmv_accel_row_len_slot_arr #(
    .DataWidth( 32 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
row_len_slot_arr_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(row_len_slot_arr_address0),
    .ce0(row_len_slot_arr_ce0),
    .we0(row_len_slot_arr_we0),
    .d0(row_len_slot_arr_d0),
    .address1(row_len_slot_arr_address1),
    .ce1(row_len_slot_arr_ce1),
    .we1(row_len_slot_arr_we1),
    .d1(32'd0),
    .q1(row_len_slot_arr_q1)
);

HLS_CISR_spmv_accel_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_5_full_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_256_p0),
    .din1(mul_reg_824),
    .ce(1'b1),
    .dout(grp_fu_256_p2)
);

HLS_CISR_spmv_accel_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_260_p0),
    .din1(grp_fu_260_p1),
    .ce(1'b1),
    .dout(grp_fu_260_p2)
);

HLS_CISR_spmv_accel_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U3(
    .din0(slot_counter_0),
    .din1(slot_counter_1),
    .din2(slot_counter_2),
    .din3(slot_counter_3),
    .din4(slot_row_count_fu_451_p5),
    .dout(slot_row_count_fu_451_p6)
);

HLS_CISR_spmv_accel_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U4(
    .din0(grp_load_fu_264_p1),
    .din1(grp_load_fu_268_p1),
    .din2(grp_load_fu_272_p1),
    .din3(grp_load_fu_276_p1),
    .din4(trunc_ln96_fu_527_p1),
    .dout(tmp_fu_537_p6)
);

HLS_CISR_spmv_accel_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U5(
    .din0(slot_row_len_id_0),
    .din1(slot_row_len_id_1),
    .din2(slot_row_len_id_2),
    .din3(slot_row_len_id_3),
    .din4(trunc_ln96_fu_527_p1),
    .dout(tmp_1_fu_573_p6)
);

HLS_CISR_spmv_accel_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U6(
    .din0(grp_load_fu_264_p1),
    .din1(grp_load_fu_268_p1),
    .din2(grp_load_fu_272_p1),
    .din3(grp_load_fu_276_p1),
    .din4(tmp_2_fu_703_p5),
    .dout(tmp_2_fu_703_p6)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp2_exit_iter0_state6) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state5)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp2_exit_iter0_state6) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
            ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state6);
        end else if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if ((1'b1 == ap_CS_fsm_state5)) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp3_exit_iter0_state12) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state11)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp3_stage4) & (1'b0 == ap_block_pp3_stage4_subdone)) | ((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone)))) begin
            ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
        end else if ((1'b1 == ap_CS_fsm_state11)) begin
            ap_enable_reg_pp3_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((cmd_start_read_read_fu_110_p2 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        max_row_id <= 32'd0;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln93_fu_551_p2 == 1'd1) & (icmp_ln87_fu_516_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        max_row_id <= add_ln101_fu_637_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln55_fu_331_p1 == 2'd0) & (icmp_ln53_fu_292_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        slot_counter_0 <= 32'd0;
    end else if (((trunc_ln78_fu_425_p1 == 2'd0) & (icmp_ln70_fu_419_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln75_reg_777 == 1'd0))) begin
        slot_counter_0 <= add_ln79_fu_480_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln55_fu_331_p1 == 2'd1) & (icmp_ln53_fu_292_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        slot_counter_1 <= 32'd0;
    end else if (((trunc_ln78_fu_425_p1 == 2'd1) & (icmp_ln70_fu_419_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln75_reg_777 == 1'd0))) begin
        slot_counter_1 <= add_ln79_fu_480_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln55_fu_331_p1 == 2'd2) & (icmp_ln53_fu_292_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        slot_counter_2 <= 32'd0;
    end else if (((trunc_ln78_fu_425_p1 == 2'd2) & (icmp_ln70_fu_419_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln75_reg_777 == 1'd0))) begin
        slot_counter_2 <= add_ln79_fu_480_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln55_fu_331_p1 == 2'd3) & (icmp_ln53_fu_292_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        slot_counter_3 <= 32'd0;
    end else if (((trunc_ln78_fu_425_p1 == 2'd3) & (icmp_ln70_fu_419_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln75_reg_777 == 1'd0))) begin
        slot_counter_3 <= add_ln79_fu_480_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        slot_id2_reg_234 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln87_fu_516_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        slot_id2_reg_234 <= add_ln87_fu_510_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        slot_id3_reg_245 <= 3'd0;
    end else if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln114_reg_834 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        slot_id3_reg_245 <= add_ln114_reg_829;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln70_fu_419_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        slot_id_1_reg_223 <= add_ln70_fu_413_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        slot_id_1_reg_223 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((cmd_start_read_read_fu_110_p2 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        slot_id_reg_212 <= 3'd0;
    end else if (((icmp_ln53_fu_292_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        slot_id_reg_212 <= add_ln53_fu_286_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln55_fu_331_p1 == 2'd0) & (icmp_ln53_fu_292_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        slot_row_counter_0 <= 32'd0;
    end else if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln93_reg_805 == 1'd1) & (trunc_ln96_reg_801 == 2'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        slot_row_counter_0 <= row_len_slot_arr_q1;
    end else if (((trunc_ln127_fu_699_p1 == 2'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln114_fu_693_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        slot_row_counter_0 <= add_ln127_fu_717_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln55_fu_331_p1 == 2'd1) & (icmp_ln53_fu_292_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        slot_row_counter_1 <= 32'd0;
    end else if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln93_reg_805 == 1'd1) & (trunc_ln96_reg_801 == 2'd1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        slot_row_counter_1 <= row_len_slot_arr_q1;
    end else if (((trunc_ln127_fu_699_p1 == 2'd1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln114_fu_693_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        slot_row_counter_1 <= add_ln127_fu_717_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln55_fu_331_p1 == 2'd2) & (icmp_ln53_fu_292_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        slot_row_counter_2 <= 32'd0;
    end else if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln93_reg_805 == 1'd1) & (trunc_ln96_reg_801 == 2'd2) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        slot_row_counter_2 <= row_len_slot_arr_q1;
    end else if (((trunc_ln127_fu_699_p1 == 2'd2) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln114_fu_693_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        slot_row_counter_2 <= add_ln127_fu_717_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln55_fu_331_p1 == 2'd3) & (icmp_ln53_fu_292_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        slot_row_counter_3 <= 32'd0;
    end else if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln93_reg_805 == 1'd1) & (trunc_ln96_reg_801 == 2'd3) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        slot_row_counter_3 <= row_len_slot_arr_q1;
    end else if (((trunc_ln127_fu_699_p1 == 2'd3) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln114_fu_693_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        slot_row_counter_3 <= add_ln127_fu_717_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln55_fu_331_p1 == 2'd0) & (icmp_ln53_fu_292_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        slot_row_len_id_0 <= 32'd0;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln93_fu_551_p2 == 1'd1) & (trunc_ln96_fu_527_p1 == 2'd0) & (icmp_ln87_fu_516_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        slot_row_len_id_0 <= add_ln97_fu_602_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln55_fu_331_p1 == 2'd1) & (icmp_ln53_fu_292_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        slot_row_len_id_1 <= 32'd0;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln93_fu_551_p2 == 1'd1) & (trunc_ln96_fu_527_p1 == 2'd1) & (icmp_ln87_fu_516_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        slot_row_len_id_1 <= add_ln97_fu_602_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln55_fu_331_p1 == 2'd2) & (icmp_ln53_fu_292_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        slot_row_len_id_2 <= 32'd0;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln93_fu_551_p2 == 1'd1) & (trunc_ln96_fu_527_p1 == 2'd2) & (icmp_ln87_fu_516_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        slot_row_len_id_2 <= add_ln97_fu_602_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln55_fu_331_p1 == 2'd3) & (icmp_ln53_fu_292_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        slot_row_len_id_3 <= 32'd0;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln93_fu_551_p2 == 1'd1) & (trunc_ln96_fu_527_p1 == 2'd3) & (icmp_ln87_fu_516_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        slot_row_len_id_3 <= add_ln97_fu_602_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        add_ln114_reg_829 <= add_ln114_fu_687_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        icmp_ln114_reg_834 <= icmp_ln114_fu_693_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        icmp_ln75_reg_777 <= icmp_ln75_fu_407_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln87_fu_516_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        icmp_ln93_reg_805 <= icmp_ln93_fu_551_p2;
        trunc_ln96_reg_801 <= trunc_ln96_fu_527_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        mul_reg_824 <= grp_fu_260_p2;
    end
end

always @ (*) begin
    if ((icmp_ln87_fu_516_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state6 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state6 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln114_fu_693_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state12 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state12 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln114_reg_834 == 1'd0) & (1'b0 == ap_block_pp3_stage0))) begin
        ap_phi_mux_slot_id3_phi_fu_249_p4 = add_ln114_reg_829;
    end else begin
        ap_phi_mux_slot_id3_phi_fu_249_p4 = slot_id3_reg_245;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln93_reg_805 == 1'd1) & (trunc_ln96_reg_801 == 2'd0) & (1'b0 == ap_block_pp2_stage0))) begin
        ap_sig_allocacmp_slot_row_counter_0_load = row_len_slot_arr_q1;
    end else begin
        ap_sig_allocacmp_slot_row_counter_0_load = slot_row_counter_0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln93_reg_805 == 1'd1) & (trunc_ln96_reg_801 == 2'd1) & (1'b0 == ap_block_pp2_stage0))) begin
        ap_sig_allocacmp_slot_row_counter_1_load = row_len_slot_arr_q1;
    end else begin
        ap_sig_allocacmp_slot_row_counter_1_load = slot_row_counter_1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln93_reg_805 == 1'd1) & (trunc_ln96_reg_801 == 2'd2) & (1'b0 == ap_block_pp2_stage0))) begin
        ap_sig_allocacmp_slot_row_counter_2_load = row_len_slot_arr_q1;
    end else begin
        ap_sig_allocacmp_slot_row_counter_2_load = slot_row_counter_2;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln93_reg_805 == 1'd1) & (trunc_ln96_reg_801 == 2'd3) & (1'b0 == ap_block_pp2_stage0))) begin
        ap_sig_allocacmp_slot_row_counter_3_load = row_len_slot_arr_q1;
    end else begin
        ap_sig_allocacmp_slot_row_counter_3_load = slot_row_counter_3;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln114_fu_693_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        grp_load_fu_264_p1 = slot_row_counter_0;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln87_fu_516_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        grp_load_fu_264_p1 = ap_sig_allocacmp_slot_row_counter_0_load;
    end else begin
        grp_load_fu_264_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln114_fu_693_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        grp_load_fu_268_p1 = slot_row_counter_1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln87_fu_516_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        grp_load_fu_268_p1 = ap_sig_allocacmp_slot_row_counter_1_load;
    end else begin
        grp_load_fu_268_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln114_fu_693_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        grp_load_fu_272_p1 = slot_row_counter_2;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln87_fu_516_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        grp_load_fu_272_p1 = ap_sig_allocacmp_slot_row_counter_2_load;
    end else begin
        grp_load_fu_272_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln114_fu_693_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        grp_load_fu_276_p1 = slot_row_counter_3;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln87_fu_516_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        grp_load_fu_276_p1 = ap_sig_allocacmp_slot_row_counter_3_load;
    end else begin
        grp_load_fu_276_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_01001))) begin
        output_vec_o = bitcast_ln126_2_fu_752_p1;
    end else begin
        output_vec_o = output_vec_i;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        output_vec_o_ap_vld = 1'b1;
    end else begin
        output_vec_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        row_len_slot_arr_address0 = zext_ln78_fu_475_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        row_len_slot_arr_address0 = tmp_4_fu_322_p3;
    end else begin
        row_len_slot_arr_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        row_len_slot_arr_address1 = zext_ln96_fu_597_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        row_len_slot_arr_address1 = zext_ln62_fu_311_p1;
    end else begin
        row_len_slot_arr_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state4))) begin
        row_len_slot_arr_ce0 = 1'b1;
    end else begin
        row_len_slot_arr_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1)))) begin
        row_len_slot_arr_ce1 = 1'b1;
    end else begin
        row_len_slot_arr_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        row_len_slot_arr_d0 = slot_arr_row_len;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        row_len_slot_arr_d0 = 32'd0;
    end else begin
        row_len_slot_arr_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln70_fu_419_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln75_reg_777 == 1'd0)) | ((icmp_ln53_fu_292_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        row_len_slot_arr_we0 = 1'b1;
    end else begin
        row_len_slot_arr_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln53_fu_292_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        row_len_slot_arr_we1 = 1'b1;
    end else begin
        row_len_slot_arr_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        slot_row_id_address0 = slot_id2_cast_fu_522_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        slot_row_id_address0 = slot_id_cast_fu_298_p1;
    end else begin
        slot_row_id_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1)))) begin
        slot_row_id_ce0 = 1'b1;
    end else begin
        slot_row_id_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        slot_row_id_d0 = max_row_id;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        slot_row_id_d0 = 32'd0;
    end else begin
        slot_row_id_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln53_fu_292_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln93_fu_551_p2 == 1'd1) & (icmp_ln87_fu_516_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1)))) begin
        slot_row_id_we0 = 1'b1;
    end else begin
        slot_row_id_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((cmd_start_read_read_fu_110_p2 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if (((cmd_start_read_read_fu_110_p2 == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln53_fu_292_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((icmp_ln70_fu_419_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if (~((icmp_ln87_fu_516_p2 == 1'd1) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((icmp_ln87_fu_516_p2 == 1'd1) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((icmp_ln114_fu_693_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone)) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage1;
            end else if (((icmp_ln114_fu_693_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_pp3_stage1 : begin
            if ((1'b0 == ap_block_pp3_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage1;
            end
        end
        ap_ST_fsm_pp3_stage2 : begin
            if ((1'b0 == ap_block_pp3_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage2;
            end
        end
        ap_ST_fsm_pp3_stage3 : begin
            if ((1'b0 == ap_block_pp3_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage3;
            end
        end
        ap_ST_fsm_pp3_stage4 : begin
            if ((1'b0 == ap_block_pp3_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage4;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln101_fu_637_p2 = (max_row_id + 32'd1);

assign add_ln114_fu_687_p2 = (ap_phi_mux_slot_id3_phi_fu_249_p4 + 3'd1);

assign add_ln127_fu_717_p2 = ($signed(tmp_2_fu_703_p6) + $signed(32'd4294967295));

assign add_ln53_fu_286_p2 = (slot_id_reg_212 + 3'd1);

assign add_ln70_fu_413_p2 = (slot_id_1_reg_223 + 3'd1);

assign add_ln78_fu_469_p2 = (shl_ln70_fu_429_p2 + trunc_ln78_1_fu_465_p1);

assign add_ln79_fu_480_p2 = (slot_row_count_fu_451_p6 + 32'd1);

assign add_ln87_fu_510_p2 = (slot_id2_reg_234 + 3'd1);

assign add_ln96_fu_591_p2 = (shl_ln87_fu_531_p2 + trunc_ln96_1_fu_587_p1);

assign add_ln97_fu_602_p2 = (tmp_1_fu_573_p6 + 32'd1);

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp3_stage1 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp3_stage4 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd6];

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_state12_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp3_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp3_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp3_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp3_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign bitcast_ln126_2_fu_752_p1 = grp_fu_256_p2;

assign cmd_start_read_read_fu_110_p2 = cmd_start;

assign grp_fu_256_p0 = output_vec_i;

assign grp_fu_260_p0 = trunc_ln118_fu_673_p1;

assign grp_fu_260_p1 = inp_vec;

assign icmp_ln114_fu_693_p2 = ((ap_phi_mux_slot_id3_phi_fu_249_p4 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln53_fu_292_p2 = ((slot_id_reg_212 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln70_fu_419_p2 = ((slot_id_1_reg_223 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln75_fu_407_p2 = ((slot_arr_row_len == 32'd4294967295) ? 1'b1 : 1'b0);

assign icmp_ln87_fu_516_p2 = ((slot_id2_reg_234 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln93_fu_551_p2 = ((tmp_fu_537_p6 == 32'd0) ? 1'b1 : 1'b0);

assign or_ln62_fu_316_p2 = (tmp_3_fu_303_p3 | 4'd1);

assign shl_ln70_fu_429_p2 = slot_id_1_reg_223 << 3'd1;

assign shl_ln87_fu_531_p2 = slot_id2_reg_234 << 3'd1;

assign slot_id2_cast_fu_522_p1 = slot_id2_reg_234;

assign slot_id_cast_fu_298_p1 = slot_id_reg_212;

assign slot_row_count_fu_451_p5 = slot_id_1_reg_223[1:0];

assign tmp_2_fu_703_p5 = ap_phi_mux_slot_id3_phi_fu_249_p4[1:0];

assign tmp_3_fu_303_p3 = {{slot_id_reg_212}, {1'd0}};

assign tmp_4_fu_322_p3 = {{60'd0}, {or_ln62_fu_316_p2}};

assign trunc_ln118_fu_673_p1 = slot_data_arr[31:0];

assign trunc_ln127_fu_699_p1 = ap_phi_mux_slot_id3_phi_fu_249_p4[1:0];

assign trunc_ln55_fu_331_p1 = slot_id_reg_212[1:0];

assign trunc_ln78_1_fu_465_p1 = slot_row_count_fu_451_p6[2:0];

assign trunc_ln78_fu_425_p1 = slot_id_1_reg_223[1:0];

assign trunc_ln96_1_fu_587_p1 = tmp_1_fu_573_p6[2:0];

assign trunc_ln96_fu_527_p1 = slot_id2_reg_234[1:0];

assign zext_ln62_fu_311_p1 = tmp_3_fu_303_p3;

assign zext_ln78_fu_475_p1 = add_ln78_fu_469_p2;

assign zext_ln96_fu_597_p1 = add_ln96_fu_591_p2;

endmodule //HLS_CISR_spmv_accel
