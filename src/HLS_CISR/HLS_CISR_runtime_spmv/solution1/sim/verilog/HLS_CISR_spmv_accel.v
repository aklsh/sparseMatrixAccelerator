// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="HLS_CISR_spmv_accel_HLS_CISR_spmv_accel,hls_ip_2020_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.256000,HLS_SYN_LAT=27,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1713,HLS_SYN_LUT=2355,HLS_VERSION=2020_2}" *)

module HLS_CISR_spmv_accel (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        cmd_start,
        inp_vec_address0,
        inp_vec_ce0,
        inp_vec_q0,
        slot_data_arr_address0,
        slot_data_arr_ce0,
        slot_data_arr_q0,
        slot_arr_row_len_address0,
        slot_arr_row_len_ce0,
        slot_arr_row_len_q0,
        output_vec_address0,
        output_vec_ce0,
        output_vec_we0,
        output_vec_d0
);

parameter    ap_ST_fsm_state1 = 26'd1;
parameter    ap_ST_fsm_state2 = 26'd2;
parameter    ap_ST_fsm_state3 = 26'd4;
parameter    ap_ST_fsm_state4 = 26'd8;
parameter    ap_ST_fsm_state5 = 26'd16;
parameter    ap_ST_fsm_state6 = 26'd32;
parameter    ap_ST_fsm_state7 = 26'd64;
parameter    ap_ST_fsm_state8 = 26'd128;
parameter    ap_ST_fsm_state9 = 26'd256;
parameter    ap_ST_fsm_state10 = 26'd512;
parameter    ap_ST_fsm_state11 = 26'd1024;
parameter    ap_ST_fsm_state12 = 26'd2048;
parameter    ap_ST_fsm_state13 = 26'd4096;
parameter    ap_ST_fsm_state14 = 26'd8192;
parameter    ap_ST_fsm_state15 = 26'd16384;
parameter    ap_ST_fsm_state16 = 26'd32768;
parameter    ap_ST_fsm_state17 = 26'd65536;
parameter    ap_ST_fsm_state18 = 26'd131072;
parameter    ap_ST_fsm_state19 = 26'd262144;
parameter    ap_ST_fsm_state20 = 26'd524288;
parameter    ap_ST_fsm_state21 = 26'd1048576;
parameter    ap_ST_fsm_state22 = 26'd2097152;
parameter    ap_ST_fsm_state23 = 26'd4194304;
parameter    ap_ST_fsm_state24 = 26'd8388608;
parameter    ap_ST_fsm_state25 = 26'd16777216;
parameter    ap_ST_fsm_state26 = 26'd33554432;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [0:0] cmd_start;
output  [2:0] inp_vec_address0;
output   inp_vec_ce0;
input  [31:0] inp_vec_q0;
output  [1:0] slot_data_arr_address0;
output   slot_data_arr_ce0;
input  [63:0] slot_data_arr_q0;
output  [1:0] slot_arr_row_len_address0;
output   slot_arr_row_len_ce0;
input  [31:0] slot_arr_row_len_q0;
output  [2:0] output_vec_address0;
output   output_vec_ce0;
output   output_vec_we0;
output  [31:0] output_vec_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[2:0] inp_vec_address0;
reg inp_vec_ce0;
reg[1:0] slot_data_arr_address0;
reg slot_data_arr_ce0;
reg[1:0] slot_arr_row_len_address0;
reg slot_arr_row_len_ce0;
reg[2:0] output_vec_address0;
reg output_vec_ce0;
reg output_vec_we0;
reg[31:0] output_vec_d0;

(* fsm_encoding = "none" *) reg   [25:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] max_row_id;
reg   [2:0] row_len_slot_arr_address0;
reg    row_len_slot_arr_ce0;
reg    row_len_slot_arr_we0;
reg   [31:0] row_len_slot_arr_d0;
wire   [31:0] row_len_slot_arr_q0;
reg   [2:0] row_len_slot_arr_address1;
reg    row_len_slot_arr_ce1;
reg    row_len_slot_arr_we1;
reg   [31:0] row_len_slot_arr_d1;
wire   [31:0] row_len_slot_arr_q1;
reg   [31:0] slot_counter_0;
reg   [31:0] slot_counter_1;
reg   [31:0] slot_counter_2;
reg   [31:0] slot_counter_3;
reg   [31:0] slot_row_counter_0;
reg   [31:0] slot_res_arr_0;
reg   [31:0] slot_row_len_id_0;
reg   [2:0] slot_row_id_0;
reg   [31:0] slot_row_counter_1;
reg   [31:0] slot_res_arr_1;
reg   [31:0] slot_row_len_id_1;
reg   [2:0] slot_row_id_1;
reg   [31:0] slot_row_counter_2;
reg   [31:0] slot_res_arr_2;
reg   [31:0] slot_row_len_id_2;
reg   [2:0] slot_row_id_2;
reg   [31:0] slot_row_counter_3;
reg   [31:0] slot_res_arr_3;
reg   [31:0] slot_row_len_id_3;
reg   [2:0] slot_row_id_3;
reg   [31:0] reg_640;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state16;
wire   [31:0] grp_fu_592_p2;
reg   [31:0] reg_644;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state25;
wire   [0:0] cmd_start_read_read_fu_132_p2;
wire   [2:0] add_ln26_fu_652_p2;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire   [2:0] trunc_ln53_fu_792_p1;
reg   [2:0] trunc_ln53_reg_1378;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire   [0:0] icmp_ln80_fu_914_p2;
reg   [0:0] icmp_ln80_reg_1413;
wire    ap_CS_fsm_state7;
wire   [0:0] icmp_ln80_1_fu_962_p2;
reg   [0:0] icmp_ln80_1_reg_1425;
wire    ap_CS_fsm_state8;
wire   [0:0] icmp_ln80_2_fu_1021_p2;
reg   [0:0] icmp_ln80_2_reg_1437;
wire    ap_CS_fsm_state9;
wire   [0:0] icmp_ln80_3_fu_1080_p2;
reg   [0:0] icmp_ln80_3_reg_1449;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire   [31:0] add_ln92_3_fu_1123_p2;
wire   [31:0] trunc_ln107_fu_1165_p1;
reg   [31:0] trunc_ln107_reg_1473;
wire    ap_CS_fsm_state12;
wire   [31:0] trunc_ln107_1_fu_1186_p1;
reg   [31:0] trunc_ln107_1_reg_1488;
wire   [31:0] matrix_val_fu_1195_p1;
wire   [31:0] bitcast_ln111_fu_1199_p1;
wire   [31:0] trunc_ln107_2_fu_1204_p1;
reg   [31:0] trunc_ln107_2_reg_1513;
wire   [31:0] matrix_val_1_fu_1213_p1;
wire   [31:0] bitcast_ln111_1_fu_1217_p1;
wire   [31:0] trunc_ln107_3_fu_1222_p1;
reg   [31:0] trunc_ln107_3_reg_1538;
wire   [31:0] matrix_val_2_fu_1231_p1;
wire   [31:0] bitcast_ln111_2_fu_1235_p1;
wire   [31:0] grp_fu_596_p2;
reg   [31:0] mul_i_reg_1558;
wire    ap_CS_fsm_state17;
wire   [31:0] matrix_val_3_fu_1240_p1;
wire   [31:0] bitcast_ln111_3_fu_1244_p1;
reg   [31:0] mul_1_i_reg_1576;
wire    ap_CS_fsm_state18;
reg   [31:0] mul_2_i_reg_1584;
wire    ap_CS_fsm_state19;
reg   [31:0] mul_3_i_reg_1592;
wire    ap_CS_fsm_state20;
reg   [2:0] slot_id_reg_387;
wire   [0:0] icmp_ln26_fu_658_p2;
reg   [0:0] max_row_id_flag_0_reg_398;
reg   [31:0] max_row_id_loc_0_reg_412;
reg   [0:0] ap_phi_mux_max_row_id_flag_1_phi_fu_427_p4;
reg   [0:0] max_row_id_flag_1_reg_424;
wire   [31:0] add_ln92_fu_946_p2;
reg   [31:0] ap_phi_mux_max_row_id_new_1_phi_fu_440_p4;
reg   [31:0] max_row_id_new_1_reg_436;
reg   [31:0] ap_phi_mux_max_row_id_loc_1_phi_fu_451_p4;
reg   [31:0] max_row_id_loc_1_reg_448;
reg   [31:0] empty_15_reg_459;
reg   [0:0] ap_phi_mux_max_row_id_flag_2_phi_fu_473_p4;
reg   [0:0] max_row_id_flag_2_reg_470;
wire   [31:0] add_ln92_1_fu_1005_p2;
reg   [31:0] ap_phi_mux_max_row_id_new_2_phi_fu_485_p4;
reg   [31:0] max_row_id_new_2_reg_482;
reg   [31:0] ap_phi_mux_max_row_id_loc_2_phi_fu_496_p4;
reg   [31:0] max_row_id_loc_2_reg_493;
reg   [31:0] empty_16_reg_504;
reg   [0:0] ap_phi_mux_max_row_id_flag_3_phi_fu_518_p4;
reg   [0:0] max_row_id_flag_3_reg_515;
wire   [31:0] add_ln92_2_fu_1064_p2;
reg   [31:0] ap_phi_mux_max_row_id_new_3_phi_fu_530_p4;
reg   [31:0] max_row_id_new_3_reg_527;
reg   [31:0] ap_phi_mux_max_row_id_loc_3_phi_fu_541_p4;
reg   [31:0] max_row_id_loc_3_reg_538;
reg   [31:0] empty_17_reg_549;
reg   [31:0] max_row_id_new_4_reg_560;
reg   [31:0] empty_18_reg_571;
wire   [0:0] ap_phi_mux_max_row_id_flag_4_phi_fu_584_p4;
reg   [0:0] max_row_id_flag_4_reg_580;
wire   [63:0] zext_ln37_fu_672_p1;
wire   [63:0] tmp_1_fu_683_p3;
wire   [63:0] zext_ln58_fu_800_p1;
wire   [0:0] grp_fu_624_p2;
wire   [63:0] zext_ln58_1_fu_831_p1;
wire   [63:0] zext_ln58_2_fu_862_p1;
wire   [63:0] zext_ln58_3_fu_893_p1;
wire   [63:0] zext_ln86_fu_924_p1;
wire   [63:0] zext_ln86_1_fu_982_p1;
wire   [63:0] zext_ln86_2_fu_1041_p1;
wire   [63:0] zext_ln86_3_fu_1100_p1;
wire   [63:0] zext_ln111_fu_1169_p1;
wire   [63:0] zext_ln111_1_fu_1190_p1;
wire   [63:0] zext_ln111_2_fu_1208_p1;
wire   [63:0] zext_ln111_3_fu_1226_p1;
wire   [63:0] zext_ln131_fu_1279_p1;
wire   [63:0] zext_ln131_1_fu_1299_p1;
wire   [63:0] zext_ln131_2_fu_1319_p1;
wire   [63:0] zext_ln131_3_fu_1339_p1;
wire    ap_CS_fsm_state26;
wire   [31:0] add_ln59_fu_805_p2;
wire   [1:0] trunc_ln29_fu_692_p1;
wire   [31:0] add_ln59_1_fu_836_p2;
wire   [31:0] add_ln59_2_fu_867_p2;
wire   [31:0] add_ln59_3_fu_898_p2;
wire   [31:0] add_ln115_fu_1129_p2;
wire   [31:0] add_ln87_fu_929_p2;
wire   [31:0] add_ln115_1_fu_1141_p2;
wire   [31:0] add_ln87_1_fu_987_p2;
wire   [2:0] trunc_ln80_fu_954_p1;
wire   [31:0] add_ln115_2_fu_1153_p2;
wire   [31:0] add_ln87_2_fu_1046_p2;
wire   [2:0] trunc_ln80_1_fu_1013_p1;
wire   [31:0] add_ln115_3_fu_1174_p2;
wire    ap_CS_fsm_state21;
wire   [31:0] add_ln87_3_fu_1105_p2;
wire   [2:0] trunc_ln80_2_fu_1072_p1;
wire   [31:0] bitcast_ln131_fu_1284_p1;
wire   [31:0] bitcast_ln131_1_fu_1304_p1;
wire   [31:0] bitcast_ln131_2_fu_1324_p1;
wire   [31:0] bitcast_ln131_3_fu_1344_p1;
reg   [31:0] grp_fu_592_p0;
reg   [31:0] grp_fu_592_p1;
reg   [31:0] grp_fu_596_p0;
reg   [31:0] grp_fu_596_p1;
wire   [3:0] tmp_fu_664_p3;
wire   [3:0] or_ln37_fu_677_p2;
wire   [2:0] trunc_ln58_fu_821_p1;
wire   [2:0] add_ln58_fu_825_p2;
wire   [2:0] trunc_ln58_1_fu_852_p1;
wire   [2:0] xor_ln58_fu_856_p2;
wire   [2:0] trunc_ln58_2_fu_883_p1;
wire   [2:0] add_ln58_1_fu_887_p2;
wire   [2:0] trunc_ln86_fu_972_p1;
wire   [2:0] add_ln86_fu_976_p2;
wire   [2:0] trunc_ln86_1_fu_1031_p1;
wire   [2:0] xor_ln86_fu_1035_p2;
wire   [2:0] trunc_ln86_2_fu_1090_p1;
wire   [2:0] add_ln86_1_fu_1094_p2;
wire   [2:0] grp_fu_630_p4;
reg   [25:0] ap_NS_fsm;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 26'd1;
#0 max_row_id = 32'd0;
#0 slot_counter_0 = 32'd0;
#0 slot_counter_1 = 32'd0;
#0 slot_counter_2 = 32'd0;
#0 slot_counter_3 = 32'd0;
#0 slot_row_counter_0 = 32'd0;
#0 slot_res_arr_0 = 32'd0;
#0 slot_row_len_id_0 = 32'd0;
#0 slot_row_id_0 = 3'd0;
#0 slot_row_counter_1 = 32'd0;
#0 slot_res_arr_1 = 32'd0;
#0 slot_row_len_id_1 = 32'd0;
#0 slot_row_id_1 = 3'd0;
#0 slot_row_counter_2 = 32'd0;
#0 slot_res_arr_2 = 32'd0;
#0 slot_row_len_id_2 = 32'd0;
#0 slot_row_id_2 = 3'd0;
#0 slot_row_counter_3 = 32'd0;
#0 slot_res_arr_3 = 32'd0;
#0 slot_row_len_id_3 = 32'd0;
#0 slot_row_id_3 = 3'd0;
end

HLS_CISR_spmv_accel_row_len_slot_arr #(
    .DataWidth( 32 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
row_len_slot_arr_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(row_len_slot_arr_address0),
    .ce0(row_len_slot_arr_ce0),
    .we0(row_len_slot_arr_we0),
    .d0(row_len_slot_arr_d0),
    .q0(row_len_slot_arr_q0),
    .address1(row_len_slot_arr_address1),
    .ce1(row_len_slot_arr_ce1),
    .we1(row_len_slot_arr_we1),
    .d1(row_len_slot_arr_d1),
    .q1(row_len_slot_arr_q1)
);

HLS_CISR_spmv_accel_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_5_full_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_592_p0),
    .din1(grp_fu_592_p1),
    .ce(1'b1),
    .dout(grp_fu_592_p2)
);

HLS_CISR_spmv_accel_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_596_p0),
    .din1(grp_fu_596_p1),
    .ce(1'b1),
    .dout(grp_fu_596_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln80_fu_914_p2 == 1'd0))) begin
        empty_15_reg_459 <= slot_row_counter_0;
    end else if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln80_reg_1413 == 1'd1))) begin
        empty_15_reg_459 <= row_len_slot_arr_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln80_1_fu_962_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        empty_16_reg_504 <= slot_row_counter_1;
    end else if (((icmp_ln80_1_reg_1425 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        empty_16_reg_504 <= row_len_slot_arr_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln80_2_fu_1021_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        empty_17_reg_549 <= slot_row_counter_2;
    end else if (((icmp_ln80_2_reg_1437 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        empty_17_reg_549 <= row_len_slot_arr_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln80_3_fu_1080_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        empty_18_reg_571 <= slot_row_counter_3;
    end else if (((icmp_ln80_3_reg_1449 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
        empty_18_reg_571 <= row_len_slot_arr_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (cmd_start_read_read_fu_132_p2 == 1'd1))) begin
        max_row_id_flag_0_reg_398 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (cmd_start_read_read_fu_132_p2 == 1'd0))) begin
        max_row_id_flag_0_reg_398 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln80_fu_914_p2 == 1'd0))) begin
        max_row_id_flag_1_reg_424 <= max_row_id_flag_0_reg_398;
    end else if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln80_reg_1413 == 1'd1))) begin
        max_row_id_flag_1_reg_424 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln80_1_fu_962_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        max_row_id_flag_2_reg_470 <= ap_phi_mux_max_row_id_flag_1_phi_fu_427_p4;
    end else if (((icmp_ln80_1_reg_1425 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        max_row_id_flag_2_reg_470 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln80_2_fu_1021_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        max_row_id_flag_3_reg_515 <= ap_phi_mux_max_row_id_flag_2_phi_fu_473_p4;
    end else if (((icmp_ln80_2_reg_1437 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        max_row_id_flag_3_reg_515 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln80_3_fu_1080_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        max_row_id_flag_4_reg_580 <= ap_phi_mux_max_row_id_flag_3_phi_fu_518_p4;
    end else if (((icmp_ln80_3_reg_1449 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
        max_row_id_flag_4_reg_580 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (cmd_start_read_read_fu_132_p2 == 1'd1))) begin
        max_row_id_loc_0_reg_412 <= 32'd0;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (cmd_start_read_read_fu_132_p2 == 1'd0))) begin
        max_row_id_loc_0_reg_412 <= max_row_id;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln80_fu_914_p2 == 1'd0))) begin
        max_row_id_loc_1_reg_448 <= max_row_id_loc_0_reg_412;
    end else if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln80_reg_1413 == 1'd1))) begin
        max_row_id_loc_1_reg_448 <= add_ln92_fu_946_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln80_1_fu_962_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        max_row_id_loc_2_reg_493 <= ap_phi_mux_max_row_id_loc_1_phi_fu_451_p4;
    end else if (((icmp_ln80_1_reg_1425 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        max_row_id_loc_2_reg_493 <= add_ln92_1_fu_1005_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln80_2_fu_1021_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        max_row_id_loc_3_reg_538 <= ap_phi_mux_max_row_id_loc_2_phi_fu_496_p4;
    end else if (((icmp_ln80_2_reg_1437 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        max_row_id_loc_3_reg_538 <= add_ln92_2_fu_1064_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln80_fu_914_p2 == 1'd0))) begin
        max_row_id_new_1_reg_436 <= 32'd0;
    end else if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln80_reg_1413 == 1'd1))) begin
        max_row_id_new_1_reg_436 <= add_ln92_fu_946_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln80_1_fu_962_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        max_row_id_new_2_reg_482 <= ap_phi_mux_max_row_id_new_1_phi_fu_440_p4;
    end else if (((icmp_ln80_1_reg_1425 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        max_row_id_new_2_reg_482 <= add_ln92_1_fu_1005_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln80_2_fu_1021_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        max_row_id_new_3_reg_527 <= ap_phi_mux_max_row_id_new_2_phi_fu_485_p4;
    end else if (((icmp_ln80_2_reg_1437 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        max_row_id_new_3_reg_527 <= add_ln92_2_fu_1064_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln80_3_fu_1080_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        max_row_id_new_4_reg_560 <= ap_phi_mux_max_row_id_new_3_phi_fu_530_p4;
    end else if (((icmp_ln80_3_reg_1449 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
        max_row_id_new_4_reg_560 <= add_ln92_3_fu_1123_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_fu_692_p1 == 2'd0) & (icmp_ln26_fu_658_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        slot_counter_0 <= 32'd0;
    end else if (((grp_fu_624_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        slot_counter_0 <= add_ln59_fu_805_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_fu_692_p1 == 2'd1) & (icmp_ln26_fu_658_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        slot_counter_1 <= 32'd0;
    end else if (((grp_fu_624_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        slot_counter_1 <= add_ln59_1_fu_836_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_fu_692_p1 == 2'd2) & (icmp_ln26_fu_658_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        slot_counter_2 <= 32'd0;
    end else if (((grp_fu_624_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        slot_counter_2 <= add_ln59_2_fu_867_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_fu_692_p1 == 2'd3) & (icmp_ln26_fu_658_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        slot_counter_3 <= 32'd0;
    end else if (((grp_fu_624_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        slot_counter_3 <= add_ln59_3_fu_898_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (cmd_start_read_read_fu_132_p2 == 1'd1))) begin
        slot_id_reg_387 <= 3'd0;
    end else if (((icmp_ln26_fu_658_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        slot_id_reg_387 <= add_ln26_fu_652_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((trunc_ln29_fu_692_p1 == 2'd0) & (icmp_ln26_fu_658_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((1'b1 == ap_CS_fsm_state7) & (icmp_ln80_fu_914_p2 == 1'd1)))) begin
        slot_res_arr_0 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        slot_res_arr_0 <= reg_644;
    end
end

always @ (posedge ap_clk) begin
    if ((((trunc_ln29_fu_692_p1 == 2'd1) & (icmp_ln26_fu_658_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((icmp_ln80_1_fu_962_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8)))) begin
        slot_res_arr_1 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        slot_res_arr_1 <= reg_644;
    end
end

always @ (posedge ap_clk) begin
    if ((((trunc_ln29_fu_692_p1 == 2'd2) & (icmp_ln26_fu_658_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((icmp_ln80_2_fu_1021_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9)))) begin
        slot_res_arr_2 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        slot_res_arr_2 <= reg_644;
    end
end

always @ (posedge ap_clk) begin
    if ((((trunc_ln29_fu_692_p1 == 2'd3) & (icmp_ln26_fu_658_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((icmp_ln80_3_fu_1080_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)))) begin
        slot_res_arr_3 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        slot_res_arr_3 <= reg_644;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_fu_692_p1 == 2'd0) & (icmp_ln26_fu_658_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        slot_row_counter_0 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        slot_row_counter_0 <= add_ln115_fu_1129_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_fu_692_p1 == 2'd1) & (icmp_ln26_fu_658_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        slot_row_counter_1 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        slot_row_counter_1 <= add_ln115_1_fu_1141_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_fu_692_p1 == 2'd2) & (icmp_ln26_fu_658_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        slot_row_counter_2 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        slot_row_counter_2 <= add_ln115_2_fu_1153_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_fu_692_p1 == 2'd3) & (icmp_ln26_fu_658_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        slot_row_counter_3 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        slot_row_counter_3 <= add_ln115_3_fu_1174_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_fu_692_p1 == 2'd0) & (icmp_ln26_fu_658_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        slot_row_id_0 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln80_fu_914_p2 == 1'd1))) begin
        slot_row_id_0 <= trunc_ln53_reg_1378;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_fu_692_p1 == 2'd1) & (icmp_ln26_fu_658_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        slot_row_id_1 <= 3'd0;
    end else if (((icmp_ln80_1_fu_962_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        slot_row_id_1 <= trunc_ln80_fu_954_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_fu_692_p1 == 2'd2) & (icmp_ln26_fu_658_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        slot_row_id_2 <= 3'd0;
    end else if (((icmp_ln80_2_fu_1021_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        slot_row_id_2 <= trunc_ln80_1_fu_1013_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_fu_692_p1 == 2'd3) & (icmp_ln26_fu_658_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        slot_row_id_3 <= 3'd0;
    end else if (((icmp_ln80_3_fu_1080_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        slot_row_id_3 <= trunc_ln80_2_fu_1072_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_fu_692_p1 == 2'd0) & (icmp_ln26_fu_658_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        slot_row_len_id_0 <= 32'd0;
    end else if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln80_fu_914_p2 == 1'd1))) begin
        slot_row_len_id_0 <= add_ln87_fu_929_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_fu_692_p1 == 2'd1) & (icmp_ln26_fu_658_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        slot_row_len_id_1 <= 32'd0;
    end else if (((icmp_ln80_1_fu_962_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        slot_row_len_id_1 <= add_ln87_1_fu_987_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_fu_692_p1 == 2'd2) & (icmp_ln26_fu_658_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        slot_row_len_id_2 <= 32'd0;
    end else if (((icmp_ln80_2_fu_1021_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        slot_row_len_id_2 <= add_ln87_2_fu_1046_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_fu_692_p1 == 2'd3) & (icmp_ln26_fu_658_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        slot_row_len_id_3 <= 32'd0;
    end else if (((icmp_ln80_3_fu_1080_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        slot_row_len_id_3 <= add_ln87_3_fu_1105_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        icmp_ln80_1_reg_1425 <= icmp_ln80_1_fu_962_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        icmp_ln80_2_reg_1437 <= icmp_ln80_2_fu_1021_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        icmp_ln80_3_reg_1449 <= icmp_ln80_3_fu_1080_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        icmp_ln80_reg_1413 <= icmp_ln80_fu_914_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_max_row_id_flag_4_phi_fu_584_p4 == 1'd1) & (1'b1 == ap_CS_fsm_state26))) begin
        max_row_id <= max_row_id_new_4_reg_560;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        mul_1_i_reg_1576 <= grp_fu_596_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        mul_2_i_reg_1584 <= grp_fu_596_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        mul_3_i_reg_1592 <= grp_fu_596_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        mul_i_reg_1558 <= grp_fu_596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        reg_640 <= inp_vec_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22))) begin
        reg_644 <= grp_fu_592_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        trunc_ln107_1_reg_1488 <= trunc_ln107_1_fu_1186_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        trunc_ln107_2_reg_1513 <= trunc_ln107_2_fu_1204_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        trunc_ln107_3_reg_1538 <= trunc_ln107_3_fu_1222_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        trunc_ln107_reg_1473 <= trunc_ln107_fu_1165_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        trunc_ln53_reg_1378 <= trunc_ln53_fu_792_p1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln80_reg_1413 == 1'd1))) begin
        ap_phi_mux_max_row_id_flag_1_phi_fu_427_p4 = 1'd1;
    end else begin
        ap_phi_mux_max_row_id_flag_1_phi_fu_427_p4 = max_row_id_flag_1_reg_424;
    end
end

always @ (*) begin
    if (((icmp_ln80_1_reg_1425 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        ap_phi_mux_max_row_id_flag_2_phi_fu_473_p4 = 1'd1;
    end else begin
        ap_phi_mux_max_row_id_flag_2_phi_fu_473_p4 = max_row_id_flag_2_reg_470;
    end
end

always @ (*) begin
    if (((icmp_ln80_2_reg_1437 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        ap_phi_mux_max_row_id_flag_3_phi_fu_518_p4 = 1'd1;
    end else begin
        ap_phi_mux_max_row_id_flag_3_phi_fu_518_p4 = max_row_id_flag_3_reg_515;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln80_reg_1413 == 1'd1))) begin
        ap_phi_mux_max_row_id_loc_1_phi_fu_451_p4 = add_ln92_fu_946_p2;
    end else begin
        ap_phi_mux_max_row_id_loc_1_phi_fu_451_p4 = max_row_id_loc_1_reg_448;
    end
end

always @ (*) begin
    if (((icmp_ln80_1_reg_1425 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        ap_phi_mux_max_row_id_loc_2_phi_fu_496_p4 = add_ln92_1_fu_1005_p2;
    end else begin
        ap_phi_mux_max_row_id_loc_2_phi_fu_496_p4 = max_row_id_loc_2_reg_493;
    end
end

always @ (*) begin
    if (((icmp_ln80_2_reg_1437 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        ap_phi_mux_max_row_id_loc_3_phi_fu_541_p4 = add_ln92_2_fu_1064_p2;
    end else begin
        ap_phi_mux_max_row_id_loc_3_phi_fu_541_p4 = max_row_id_loc_3_reg_538;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln80_reg_1413 == 1'd1))) begin
        ap_phi_mux_max_row_id_new_1_phi_fu_440_p4 = add_ln92_fu_946_p2;
    end else begin
        ap_phi_mux_max_row_id_new_1_phi_fu_440_p4 = max_row_id_new_1_reg_436;
    end
end

always @ (*) begin
    if (((icmp_ln80_1_reg_1425 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        ap_phi_mux_max_row_id_new_2_phi_fu_485_p4 = add_ln92_1_fu_1005_p2;
    end else begin
        ap_phi_mux_max_row_id_new_2_phi_fu_485_p4 = max_row_id_new_2_reg_482;
    end
end

always @ (*) begin
    if (((icmp_ln80_2_reg_1437 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        ap_phi_mux_max_row_id_new_3_phi_fu_530_p4 = add_ln92_2_fu_1064_p2;
    end else begin
        ap_phi_mux_max_row_id_new_3_phi_fu_530_p4 = max_row_id_new_3_reg_527;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_592_p0 = slot_res_arr_3;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_592_p0 = slot_res_arr_2;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_592_p0 = slot_res_arr_1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_592_p0 = slot_res_arr_0;
    end else begin
        grp_fu_592_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_592_p1 = mul_3_i_reg_1592;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_592_p1 = mul_2_i_reg_1584;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_592_p1 = mul_1_i_reg_1576;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_592_p1 = mul_i_reg_1558;
    end else begin
        grp_fu_592_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_596_p0 = matrix_val_3_fu_1240_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_596_p0 = matrix_val_2_fu_1231_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_596_p0 = matrix_val_1_fu_1213_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_596_p0 = matrix_val_fu_1195_p1;
    end else begin
        grp_fu_596_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_596_p1 = bitcast_ln111_3_fu_1244_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_596_p1 = bitcast_ln111_2_fu_1235_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_596_p1 = bitcast_ln111_1_fu_1217_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_596_p1 = bitcast_ln111_fu_1199_p1;
    end else begin
        grp_fu_596_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        inp_vec_address0 = zext_ln111_3_fu_1226_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        inp_vec_address0 = zext_ln111_2_fu_1208_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        inp_vec_address0 = zext_ln111_1_fu_1190_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        inp_vec_address0 = zext_ln111_fu_1169_p1;
    end else begin
        inp_vec_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        inp_vec_ce0 = 1'b1;
    end else begin
        inp_vec_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        output_vec_address0 = zext_ln131_3_fu_1339_p1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        output_vec_address0 = zext_ln131_2_fu_1319_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        output_vec_address0 = zext_ln131_1_fu_1299_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        output_vec_address0 = zext_ln131_fu_1279_p1;
    end else begin
        output_vec_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23))) begin
        output_vec_ce0 = 1'b1;
    end else begin
        output_vec_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        output_vec_d0 = bitcast_ln131_3_fu_1344_p1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        output_vec_d0 = bitcast_ln131_2_fu_1324_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        output_vec_d0 = bitcast_ln131_1_fu_1304_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        output_vec_d0 = bitcast_ln131_fu_1284_p1;
    end else begin
        output_vec_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23))) begin
        output_vec_we0 = 1'b1;
    end else begin
        output_vec_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        row_len_slot_arr_address0 = zext_ln86_2_fu_1041_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        row_len_slot_arr_address0 = zext_ln86_fu_924_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        row_len_slot_arr_address0 = zext_ln58_2_fu_862_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        row_len_slot_arr_address0 = zext_ln58_fu_800_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        row_len_slot_arr_address0 = tmp_1_fu_683_p3;
    end else begin
        row_len_slot_arr_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        row_len_slot_arr_address1 = zext_ln86_3_fu_1100_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        row_len_slot_arr_address1 = zext_ln86_1_fu_982_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        row_len_slot_arr_address1 = zext_ln58_3_fu_893_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        row_len_slot_arr_address1 = zext_ln58_1_fu_831_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        row_len_slot_arr_address1 = zext_ln37_fu_672_p1;
    end else begin
        row_len_slot_arr_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2))) begin
        row_len_slot_arr_ce0 = 1'b1;
    end else begin
        row_len_slot_arr_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state2))) begin
        row_len_slot_arr_ce1 = 1'b1;
    end else begin
        row_len_slot_arr_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4))) begin
        row_len_slot_arr_d0 = slot_arr_row_len_q0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        row_len_slot_arr_d0 = 32'd0;
    end else begin
        row_len_slot_arr_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
        row_len_slot_arr_d1 = slot_arr_row_len_q0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        row_len_slot_arr_d1 = 32'd0;
    end else begin
        row_len_slot_arr_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((grp_fu_624_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6)) | ((grp_fu_624_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4)) | ((icmp_ln26_fu_658_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        row_len_slot_arr_we0 = 1'b1;
    end else begin
        row_len_slot_arr_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((grp_fu_624_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)) | ((grp_fu_624_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5)) | ((icmp_ln26_fu_658_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        row_len_slot_arr_we1 = 1'b1;
    end else begin
        row_len_slot_arr_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        slot_arr_row_len_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        slot_arr_row_len_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        slot_arr_row_len_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        slot_arr_row_len_address0 = 64'd0;
    end else begin
        slot_arr_row_len_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        slot_arr_row_len_ce0 = 1'b1;
    end else begin
        slot_arr_row_len_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        slot_data_arr_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        slot_data_arr_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        slot_data_arr_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        slot_data_arr_address0 = 64'd0;
    end else begin
        slot_data_arr_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        slot_data_arr_ce0 = 1'b1;
    end else begin
        slot_data_arr_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (cmd_start_read_read_fu_132_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (cmd_start_read_read_fu_132_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln26_fu_658_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln115_1_fu_1141_p2 = ($signed(empty_16_reg_504) + $signed(32'd4294967295));

assign add_ln115_2_fu_1153_p2 = ($signed(empty_17_reg_549) + $signed(32'd4294967295));

assign add_ln115_3_fu_1174_p2 = ($signed(empty_18_reg_571) + $signed(32'd4294967295));

assign add_ln115_fu_1129_p2 = ($signed(empty_15_reg_459) + $signed(32'd4294967295));

assign add_ln26_fu_652_p2 = (slot_id_reg_387 + 3'd1);

assign add_ln58_1_fu_887_p2 = ($signed(trunc_ln58_2_fu_883_p1) + $signed(3'd6));

assign add_ln58_fu_825_p2 = (trunc_ln58_fu_821_p1 + 3'd2);

assign add_ln59_1_fu_836_p2 = (slot_counter_1 + 32'd1);

assign add_ln59_2_fu_867_p2 = (slot_counter_2 + 32'd1);

assign add_ln59_3_fu_898_p2 = (slot_counter_3 + 32'd1);

assign add_ln59_fu_805_p2 = (slot_counter_0 + 32'd1);

assign add_ln86_1_fu_1094_p2 = ($signed(trunc_ln86_2_fu_1090_p1) + $signed(3'd6));

assign add_ln86_fu_976_p2 = (trunc_ln86_fu_972_p1 + 3'd2);

assign add_ln87_1_fu_987_p2 = (slot_row_len_id_1 + 32'd1);

assign add_ln87_2_fu_1046_p2 = (slot_row_len_id_2 + 32'd1);

assign add_ln87_3_fu_1105_p2 = (slot_row_len_id_3 + 32'd1);

assign add_ln87_fu_929_p2 = (slot_row_len_id_0 + 32'd1);

assign add_ln92_1_fu_1005_p2 = (max_row_id_loc_1_reg_448 + 32'd1);

assign add_ln92_2_fu_1064_p2 = (max_row_id_loc_2_reg_493 + 32'd1);

assign add_ln92_3_fu_1123_p2 = (max_row_id_loc_3_reg_538 + 32'd1);

assign add_ln92_fu_946_p2 = (max_row_id_loc_0_reg_412 + 32'd1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_phi_mux_max_row_id_flag_4_phi_fu_584_p4 = max_row_id_flag_4_reg_580;

assign bitcast_ln111_1_fu_1217_p1 = reg_640;

assign bitcast_ln111_2_fu_1235_p1 = reg_640;

assign bitcast_ln111_3_fu_1244_p1 = reg_640;

assign bitcast_ln111_fu_1199_p1 = reg_640;

assign bitcast_ln131_1_fu_1304_p1 = reg_644;

assign bitcast_ln131_2_fu_1324_p1 = reg_644;

assign bitcast_ln131_3_fu_1344_p1 = reg_644;

assign bitcast_ln131_fu_1284_p1 = reg_644;

assign cmd_start_read_read_fu_132_p2 = cmd_start;

assign grp_fu_624_p2 = ((slot_arr_row_len_q0 == 32'd4294967295) ? 1'b1 : 1'b0);

assign grp_fu_630_p4 = {{slot_data_arr_q0[34:32]}};

assign icmp_ln26_fu_658_p2 = ((slot_id_reg_387 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln80_1_fu_962_p2 = ((slot_row_counter_1 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln80_2_fu_1021_p2 = ((slot_row_counter_2 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln80_3_fu_1080_p2 = ((slot_row_counter_3 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln80_fu_914_p2 = ((slot_row_counter_0 == 32'd0) ? 1'b1 : 1'b0);

assign matrix_val_1_fu_1213_p1 = trunc_ln107_1_reg_1488;

assign matrix_val_2_fu_1231_p1 = trunc_ln107_2_reg_1513;

assign matrix_val_3_fu_1240_p1 = trunc_ln107_3_reg_1538;

assign matrix_val_fu_1195_p1 = trunc_ln107_reg_1473;

assign or_ln37_fu_677_p2 = (tmp_fu_664_p3 | 4'd1);

assign tmp_1_fu_683_p3 = {{60'd0}, {or_ln37_fu_677_p2}};

assign tmp_fu_664_p3 = {{slot_id_reg_387}, {1'd0}};

assign trunc_ln107_1_fu_1186_p1 = slot_data_arr_q0[31:0];

assign trunc_ln107_2_fu_1204_p1 = slot_data_arr_q0[31:0];

assign trunc_ln107_3_fu_1222_p1 = slot_data_arr_q0[31:0];

assign trunc_ln107_fu_1165_p1 = slot_data_arr_q0[31:0];

assign trunc_ln29_fu_692_p1 = slot_id_reg_387[1:0];

assign trunc_ln53_fu_792_p1 = max_row_id_loc_0_reg_412[2:0];

assign trunc_ln58_1_fu_852_p1 = slot_counter_2[2:0];

assign trunc_ln58_2_fu_883_p1 = slot_counter_3[2:0];

assign trunc_ln58_fu_821_p1 = slot_counter_1[2:0];

assign trunc_ln80_1_fu_1013_p1 = ap_phi_mux_max_row_id_loc_2_phi_fu_496_p4[2:0];

assign trunc_ln80_2_fu_1072_p1 = ap_phi_mux_max_row_id_loc_3_phi_fu_541_p4[2:0];

assign trunc_ln80_fu_954_p1 = ap_phi_mux_max_row_id_loc_1_phi_fu_451_p4[2:0];

assign trunc_ln86_1_fu_1031_p1 = slot_row_len_id_2[2:0];

assign trunc_ln86_2_fu_1090_p1 = slot_row_len_id_3[2:0];

assign trunc_ln86_fu_972_p1 = slot_row_len_id_1[2:0];

assign xor_ln58_fu_856_p2 = (trunc_ln58_1_fu_852_p1 ^ 3'd4);

assign xor_ln86_fu_1035_p2 = (trunc_ln86_1_fu_1031_p1 ^ 3'd4);

assign zext_ln111_1_fu_1190_p1 = grp_fu_630_p4;

assign zext_ln111_2_fu_1208_p1 = grp_fu_630_p4;

assign zext_ln111_3_fu_1226_p1 = grp_fu_630_p4;

assign zext_ln111_fu_1169_p1 = grp_fu_630_p4;

assign zext_ln131_1_fu_1299_p1 = slot_row_id_1;

assign zext_ln131_2_fu_1319_p1 = slot_row_id_2;

assign zext_ln131_3_fu_1339_p1 = slot_row_id_3;

assign zext_ln131_fu_1279_p1 = slot_row_id_0;

assign zext_ln37_fu_672_p1 = tmp_fu_664_p3;

assign zext_ln58_1_fu_831_p1 = add_ln58_fu_825_p2;

assign zext_ln58_2_fu_862_p1 = xor_ln58_fu_856_p2;

assign zext_ln58_3_fu_893_p1 = add_ln58_1_fu_887_p2;

assign zext_ln58_fu_800_p1 = slot_counter_0;

assign zext_ln86_1_fu_982_p1 = add_ln86_fu_976_p2;

assign zext_ln86_2_fu_1041_p1 = xor_ln86_fu_1035_p2;

assign zext_ln86_3_fu_1100_p1 = add_ln86_1_fu_1094_p2;

assign zext_ln86_fu_924_p1 = slot_row_len_id_0;

endmodule //HLS_CISR_spmv_accel
