// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module accelerate_add (
        ap_ready,
        this_buffer_value_offset,
        this_buffer_label_offset,
        this_num_items_read_2,
        this_num_items_read,
        this_valid_read,
        reducer_circuit_levels_buffer_value_0_0,
        reducer_circuit_levels_buffer_value_1_0,
        reducer_circuit_levels_buffer_label_0_0,
        reducer_circuit_levels_buffer_label_1_0,
        reducer_circuit_levels_buffer_value_1_1,
        reducer_circuit_levels_buffer_value_0_1,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3
);


output   ap_ready;
input  [0:0] this_buffer_value_offset;
input  [0:0] this_buffer_label_offset;
input  [31:0] this_num_items_read_2;
input  [31:0] this_num_items_read;
input   this_valid_read;
input  [31:0] reducer_circuit_levels_buffer_value_0_0;
input  [31:0] reducer_circuit_levels_buffer_value_1_0;
input  [31:0] reducer_circuit_levels_buffer_label_0_0;
input  [31:0] reducer_circuit_levels_buffer_label_1_0;
input  [31:0] reducer_circuit_levels_buffer_value_1_1;
input  [31:0] reducer_circuit_levels_buffer_value_0_1;
output  [0:0] ap_return_0;
output  [31:0] ap_return_1;
output  [31:0] ap_return_2;
output  [31:0] ap_return_3;

wire   [0:0] or_ln22_1_fu_214_p2;
wire   [0:0] and_ln22_1_fu_202_p2;
wire   [0:0] and_ln22_fu_190_p2;
wire   [31:0] select_ln19_fu_102_p3;
wire   [30:0] tmp_fu_110_p4;
wire   [31:0] select_ln15_1_fu_134_p3;
wire   [31:0] select_ln15_fu_94_p3;
wire   [0:0] icmp_ln12_1_fu_154_p2;
wire   [0:0] xor_ln16_fu_166_p2;
wire   [0:0] icmp_ln12_2_fu_178_p2;
wire   [0:0] icmp_ln19_fu_120_p2;
wire   [0:0] and_ln19_fu_184_p2;
wire   [0:0] xor_ln22_fu_196_p2;
wire   [0:0] icmp_ln12_fu_148_p2;
wire   [0:0] or_ln22_fu_208_p2;
wire   [0:0] and_ln16_fu_160_p2;
wire   [31:0] add_ln15_fu_142_p2;
wire   [0:0] and_ln16_1_fu_172_p2;
wire   [31:0] select_ln16_fu_220_p3;
wire   [31:0] select_ln16_1_fu_228_p3;
wire   [31:0] select_ln22_fu_236_p3;
wire   [0:0] xor_ln19_fu_252_p2;
wire   [0:0] and_ln19_1_fu_258_p2;
wire   [0:0] icmp_ln12_3_fu_264_p2;
wire   [0:0] and_ln12_fu_270_p2;
wire   [0:0] or_ln22_2_fu_276_p2;
wire   [31:0] select_ln19_1_fu_288_p3;
wire   [31:0] select_ln12_fu_296_p3;
wire   [31:0] select_ln16_2_fu_304_p3;
wire   [31:0] select_ln16_3_fu_312_p3;
wire   [31:0] select_ln22_2_fu_320_p3;
wire   [0:0] or_ln22_4_fu_336_p2;
wire   [0:0] or_ln22_3_fu_282_p2;
wire   [0:0] select_ln31_fu_350_p2;
wire   [31:0] select_ln22_1_fu_244_p3;
wire   [31:0] select_ln22_3_fu_328_p3;
wire   [0:0] select_ln31_fu_350_p3;
wire   [31:0] select_ln31_1_fu_358_p3;
wire   [31:0] select_ln31_2_fu_366_p3;
wire   [31:0] select_ln22_4_fu_342_p3;
wire    ap_ce_reg;

assign add_ln15_fu_142_p2 = (select_ln15_1_fu_134_p3 + select_ln15_fu_94_p3);

assign and_ln12_fu_270_p2 = (icmp_ln12_3_fu_264_p2 & and_ln19_1_fu_258_p2);

assign and_ln16_1_fu_172_p2 = (xor_ln16_fu_166_p2 & icmp_ln12_1_fu_154_p2);

assign and_ln16_fu_160_p2 = (this_buffer_label_offset & icmp_ln12_1_fu_154_p2);

assign and_ln19_1_fu_258_p2 = (xor_ln19_fu_252_p2 & icmp_ln12_2_fu_178_p2);

assign and_ln19_fu_184_p2 = (icmp_ln19_fu_120_p2 & icmp_ln12_2_fu_178_p2);

assign and_ln22_1_fu_202_p2 = (xor_ln22_fu_196_p2 & and_ln19_fu_184_p2);

assign and_ln22_fu_190_p2 = (this_buffer_value_offset & and_ln19_fu_184_p2);

assign ap_ready = 1'b1;

assign ap_return_0 = select_ln31_fu_350_p3;

assign ap_return_1 = select_ln31_1_fu_358_p3;

assign ap_return_2 = select_ln31_2_fu_366_p3;

assign ap_return_3 = select_ln22_4_fu_342_p3;

assign icmp_ln12_1_fu_154_p2 = ((this_num_items_read == 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln12_2_fu_178_p2 = ((this_num_items_read == 32'd1) ? 1'b1 : 1'b0);

assign icmp_ln12_3_fu_264_p2 = ((this_num_items_read != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln12_fu_148_p2 = ((this_num_items_read == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln19_fu_120_p2 = (($signed(tmp_fu_110_p4) < $signed(31'd1)) ? 1'b1 : 1'b0);

assign or_ln22_1_fu_214_p2 = (or_ln22_fu_208_p2 | icmp_ln12_1_fu_154_p2);

assign or_ln22_2_fu_276_p2 = (and_ln19_fu_184_p2 | and_ln12_fu_270_p2);

assign or_ln22_3_fu_282_p2 = (or_ln22_2_fu_276_p2 | icmp_ln12_1_fu_154_p2);

assign or_ln22_4_fu_336_p2 = (icmp_ln12_1_fu_154_p2 | and_ln19_fu_184_p2);

assign or_ln22_fu_208_p2 = (icmp_ln12_fu_148_p2 | and_ln19_fu_184_p2);

assign select_ln12_fu_296_p3 = ((icmp_ln12_fu_148_p2[0:0] == 1'b1) ? 32'd0 : select_ln19_1_fu_288_p3);

assign select_ln15_1_fu_134_p3 = ((this_buffer_value_offset[0:0] == 1'b1) ? reducer_circuit_levels_buffer_value_1_1 : reducer_circuit_levels_buffer_value_0_1);

assign select_ln15_fu_94_p3 = ((this_buffer_value_offset[0:0] == 1'b1) ? reducer_circuit_levels_buffer_value_1_0 : reducer_circuit_levels_buffer_value_0_0);

assign select_ln16_1_fu_228_p3 = ((and_ln16_1_fu_172_p2[0:0] == 1'b1) ? add_ln15_fu_142_p2 : select_ln16_fu_220_p3);

assign select_ln16_2_fu_304_p3 = ((and_ln16_fu_160_p2[0:0] == 1'b1) ? reducer_circuit_levels_buffer_label_1_0 : select_ln12_fu_296_p3);

assign select_ln16_3_fu_312_p3 = ((and_ln16_1_fu_172_p2[0:0] == 1'b1) ? reducer_circuit_levels_buffer_label_0_0 : select_ln16_2_fu_304_p3);

assign select_ln16_fu_220_p3 = ((and_ln16_fu_160_p2[0:0] == 1'b1) ? add_ln15_fu_142_p2 : 32'd0);

assign select_ln19_1_fu_288_p3 = ((and_ln19_1_fu_258_p2[0:0] == 1'b1) ? select_ln19_fu_102_p3 : 32'd0);

assign select_ln19_fu_102_p3 = ((this_buffer_label_offset[0:0] == 1'b1) ? reducer_circuit_levels_buffer_label_1_0 : reducer_circuit_levels_buffer_label_0_0);

assign select_ln22_1_fu_244_p3 = ((and_ln22_1_fu_202_p2[0:0] == 1'b1) ? reducer_circuit_levels_buffer_value_0_0 : select_ln22_fu_236_p3);

assign select_ln22_2_fu_320_p3 = ((and_ln22_fu_190_p2[0:0] == 1'b1) ? select_ln19_fu_102_p3 : select_ln16_3_fu_312_p3);

assign select_ln22_3_fu_328_p3 = ((and_ln22_1_fu_202_p2[0:0] == 1'b1) ? select_ln19_fu_102_p3 : select_ln22_2_fu_320_p3);

assign select_ln22_4_fu_342_p3 = ((or_ln22_4_fu_336_p2[0:0] == 1'b1) ? 32'd0 : this_num_items_read_2);

assign select_ln22_fu_236_p3 = ((and_ln22_fu_190_p2[0:0] == 1'b1) ? reducer_circuit_levels_buffer_value_1_0 : select_ln16_1_fu_228_p3);

assign select_ln31_1_fu_358_p3 = ((or_ln22_1_fu_214_p2[0:0] == 1'b1) ? select_ln22_1_fu_244_p3 : 32'd0);

assign select_ln31_2_fu_366_p3 = ((or_ln22_1_fu_214_p2[0:0] == 1'b1) ? select_ln22_3_fu_328_p3 : 32'd0);

assign select_ln31_fu_350_p2 = this_valid_read;

assign select_ln31_fu_350_p3 = ((or_ln22_1_fu_214_p2[0:0] == 1'b1) ? or_ln22_3_fu_282_p2 : select_ln31_fu_350_p2);

assign tmp_fu_110_p4 = {{select_ln19_fu_102_p3[31:1]}};

assign xor_ln16_fu_166_p2 = (this_buffer_label_offset ^ 1'd1);

assign xor_ln19_fu_252_p2 = (icmp_ln19_fu_120_p2 ^ 1'd1);

assign xor_ln22_fu_196_p2 = (this_buffer_value_offset ^ 1'd1);

endmodule //accelerate_add
