==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name accelerate accelerate 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.01 seconds; current allocated memory: 1.023 GB.
INFO: [HLS 200-10] Analyzing design file 'SPMV_CSR_src/accelerator/accelerator.cpp' ... 
WARNING: [HLS 207-5558] Array_Partition/Array_Reshape pragma is ignored, because variable is scalar type  (SPMV_CSR_src/accelerator/accelerator.cpp:11:38)
WARNING: [HLS 207-5558] Array_Partition/Array_Reshape pragma is ignored, because variable is scalar type  (SPMV_CSR_src/accelerator/accelerator.cpp:12:38)
INFO: [HLS 200-10] Analyzing design file 'SPMV_CSR_src/accelerator/reducer.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 46.27 seconds. CPU system time: 2.59 seconds. Elapsed time: 47.67 seconds; current allocated memory: 116.918 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-291] Loop 'adder_tree' is marked as complete unroll implied by the pipeline pragma (SPMV_CSR_src/accelerator/accelerator.cpp:28:14)
INFO: [HLS 214-186] Unrolling loop 'adder_tree' (SPMV_CSR_src/accelerator/accelerator.cpp:28:14) in function 'adders' completely with a factor of 4 (SPMV_CSR_src/accelerator/accelerator.cpp:25:0)
INFO: [HLS 214-186] Unrolling loop 'multipliers_loop' (SPMV_CSR_src/accelerator/accelerator.cpp:14:20) in function 'multipliers' completely with a factor of 4 (SPMV_CSR_src/accelerator/accelerator.cpp:10:0)
INFO: [HLS 214-178] Inlining function 'reducer_data::reducer_data(int, int)' into 'reducer_level::reducer_level()' (SPMV_CSR_src/accelerator/reducer.hpp:13:0)
INFO: [HLS 214-178] Inlining function 'reducer_level::reducer_level()' into 'reducer::reducer()' (SPMV_CSR_src/accelerator/reducer.hpp:23:0)
INFO: [HLS 214-178] Inlining function 'reducer_data::reducer_data(int, int)' into 'reducer::reduce(int&, int, int)' (SPMV_CSR_src/accelerator/reducer.cpp:40:0)
INFO: [HLS 214-178] Inlining function 'reducer_level::insert(reducer_data)' into 'reducer::reduce(int&, int, int)' (SPMV_CSR_src/accelerator/reducer.cpp:40:0)
INFO: [HLS 214-178] Inlining function 'reducer::reducer()' into 'accelerate(int&, int*, int*, bool*, int, bool, int*)' (SPMV_CSR_src/accelerator/accelerator.cpp:33:0)
INFO: [HLS 214-178] Inlining function 'set_storage(int*, int*, bool)' into 'accelerate(int&, int*, int*, bool*, int, bool, int*)' (SPMV_CSR_src/accelerator/accelerator.cpp:33:0)
INFO: [HLS 214-178] Inlining function 'multipliers(int*, int*, int*, int*, bool*)' into 'accelerate(int&, int*, int*, bool*, int, bool, int*)' (SPMV_CSR_src/accelerator/accelerator.cpp:33:0)
INFO: [HLS 214-178] Inlining function 'reducer::reduce(int&, int, int)' into 'accelerate(int&, int*, int*, bool*, int, bool, int*)' (SPMV_CSR_src/accelerator/accelerator.cpp:33:0)
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 3.44 seconds. CPU system time: 0.43 seconds. Elapsed time: 4.13 seconds; current allocated memory: 117.801 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 117.801 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.06 seconds. CPU system time: 0.03 seconds. Elapsed time: 0.18 seconds; current allocated memory: 118.090 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.04 seconds. CPU system time: 0 seconds. Elapsed time: 0.05 seconds; current allocated memory: 118.434 MB.
INFO: [XFORM 203-510] Pipelining loop 'Loop-2' (SPMV_CSR_src/accelerator/reducer.hpp:23) in function 'accelerate' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'Loop-1' (SPMV_CSR_src/accelerator/reducer.hpp:23) in function 'accelerate' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'Loop-1.1' (SPMV_CSR_src/accelerator/reducer.hpp:13) in function 'accelerate' completely with a factor of 1.
INFO: [XFORM 203-102] Partitioning array 'reducer_circuit.levels.valid' automatically.
INFO: [XFORM 203-102] Partitioning array 'reducer_circuit.levels.num_items' automatically.
INFO: [XFORM 203-102] Partitioning array 'multiplier_outs' automatically.
INFO: [XFORM 203-102] Automatically partitioning small array 'reducer_circuit.levels.buffer.value' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'reducer_circuit.levels.buffer.label' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'reducer_circuit.levels.buffer.value' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'reducer_circuit.levels.buffer.label' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'reducer_circuit.levels.buffer.value' in dimension 2 completely.
INFO: [XFORM 203-101] Partitioning array 'reducer_circuit.levels.buffer.label' in dimension 2 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (SPMV_CSR_src/accelerator/reducer.cpp:31:1) in function 'reducer_level::add'... converting 19 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (SPMV_CSR_src/accelerator/accelerator.cpp:10:59) to (SPMV_CSR_src/accelerator/reducer.cpp:35:20) in function 'accelerate'... converting 3 basic blocks.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.08 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.1 seconds; current allocated memory: 140.566 MB.
INFO: [HLS 200-472] Inferring partial write operation for 'storage' (SPMV_CSR_src/accelerator/accelerator.cpp:6:12)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.04 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.06 seconds; current allocated memory: 159.883 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'accelerate' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'accelerate_Pipeline_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'Loop 1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 1, loop 'Loop 1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.03 seconds. CPU system time: 0.03 seconds. Elapsed time: 0.08 seconds; current allocated memory: 161.285 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.02 seconds. CPU system time: 0 seconds. Elapsed time: 0.02 seconds; current allocated memory: 161.285 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'adders' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'adders'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 1, function 'adders'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.02 seconds. CPU system time: 0 seconds. Elapsed time: 0.02 seconds; current allocated memory: 161.285 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name accelerate accelerate 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 1.023 GB.
INFO: [HLS 200-10] Analyzing design file 'SPMV_CSR_src/accelerator/accelerator.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'SPMV_CSR_src/accelerator/reducer.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 44.5 seconds. CPU system time: 1.82 seconds. Elapsed time: 45.16 seconds; current allocated memory: 116.695 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-291] Loop 'adder_tree' is marked as complete unroll implied by the pipeline pragma (SPMV_CSR_src/accelerator/accelerator.cpp:28:14)
INFO: [HLS 214-186] Unrolling loop 'adder_tree' (SPMV_CSR_src/accelerator/accelerator.cpp:28:14) in function 'adders' completely with a factor of 4 (SPMV_CSR_src/accelerator/accelerator.cpp:25:0)
INFO: [HLS 214-186] Unrolling loop 'multipliers_loop' (SPMV_CSR_src/accelerator/accelerator.cpp:14:20) in function 'multipliers' completely with a factor of 4 (SPMV_CSR_src/accelerator/accelerator.cpp:10:0)
INFO: [HLS 214-178] Inlining function 'reducer_data::reducer_data(int, int)' into 'reducer_level::reducer_level()' (SPMV_CSR_src/accelerator/reducer.hpp:13:0)
INFO: [HLS 214-178] Inlining function 'reducer_level::reducer_level()' into 'reducer::reducer()' (SPMV_CSR_src/accelerator/reducer.hpp:23:0)
INFO: [HLS 214-178] Inlining function 'reducer_data::reducer_data(int, int)' into 'reducer::reduce(int&, int, int)' (SPMV_CSR_src/accelerator/reducer.cpp:40:0)
INFO: [HLS 214-178] Inlining function 'reducer_level::insert(reducer_data)' into 'reducer::reduce(int&, int, int)' (SPMV_CSR_src/accelerator/reducer.cpp:40:0)
INFO: [HLS 214-178] Inlining function 'reducer::reducer()' into 'accelerate(int&, int*, int*, bool*, int, bool, int*)' (SPMV_CSR_src/accelerator/accelerator.cpp:33:0)
INFO: [HLS 214-178] Inlining function 'set_storage(int*, int*, bool)' into 'accelerate(int&, int*, int*, bool*, int, bool, int*)' (SPMV_CSR_src/accelerator/accelerator.cpp:33:0)
INFO: [HLS 214-178] Inlining function 'multipliers(int*, int*, int*, int*, bool*)' into 'accelerate(int&, int*, int*, bool*, int, bool, int*)' (SPMV_CSR_src/accelerator/accelerator.cpp:33:0)
INFO: [HLS 214-178] Inlining function 'reducer::reduce(int&, int, int)' into 'accelerate(int&, int*, int*, bool*, int, bool, int*)' (SPMV_CSR_src/accelerator/accelerator.cpp:33:0)
INFO: [HLS 214-248] Applying array_partition to '_ZZ10accelerateRiPiS0_PbibS0_E7storage': Complete partitioning on dimension 1. (SPMV_CSR_src/accelerator/accelerator.cpp:35:0)
INFO: [HLS 214-248] Applying array_partition to '_ZZ10accelerateRiPiS0_PbibS0_E15multiplier_outs': Complete partitioning on dimension 1. (SPMV_CSR_src/accelerator/accelerator.cpp:34:0)
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 3.19 seconds. CPU system time: 0.28 seconds. Elapsed time: 3.51 seconds; current allocated memory: 117.422 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 117.422 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 117.996 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.02 seconds. CPU system time: 0 seconds. Elapsed time: 0.02 seconds; current allocated memory: 118.312 MB.
INFO: [XFORM 203-510] Pipelining loop 'Loop-2' (SPMV_CSR_src/accelerator/reducer.hpp:23) in function 'accelerate' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'Loop-1' (SPMV_CSR_src/accelerator/reducer.hpp:23) in function 'accelerate' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'Loop-1.1' (SPMV_CSR_src/accelerator/reducer.hpp:13) in function 'accelerate' completely with a factor of 1.
INFO: [XFORM 203-102] Partitioning array 'reducer_circuit.levels.valid' automatically.
INFO: [XFORM 203-102] Partitioning array 'reducer_circuit.levels.num_items' automatically.
INFO: [XFORM 203-102] Automatically partitioning small array 'reducer_circuit.levels.buffer.value' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'reducer_circuit.levels.buffer.label' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'reducer_circuit.levels.buffer.value' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'reducer_circuit.levels.buffer.label' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'reducer_circuit.levels.buffer.value' in dimension 2 completely.
INFO: [XFORM 203-101] Partitioning array 'reducer_circuit.levels.buffer.label' in dimension 2 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (SPMV_CSR_src/accelerator/reducer.cpp:31:1) in function 'reducer_level::add'... converting 19 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (SPMV_CSR_src/accelerator/accelerator.cpp:10:64) to (SPMV_CSR_src/accelerator/reducer.cpp:35:20) in function 'accelerate'... converting 3 basic blocks.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.08 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.09 seconds; current allocated memory: 140.453 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.04 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.06 seconds; current allocated memory: 159.789 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'accelerate' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'accelerate_Pipeline_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'Loop 1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 1, loop 'Loop 1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.02 seconds. CPU system time: 0.04 seconds. Elapsed time: 0.05 seconds; current allocated memory: 161.168 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.02 seconds. CPU system time: 0 seconds. Elapsed time: 0.03 seconds; current allocated memory: 161.168 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'adders' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'adders'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 1, function 'adders'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.02 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.03 seconds; current allocated memory: 161.168 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name accelerate accelerate 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.02 seconds; current allocated memory: 579.406 MB.
INFO: [HLS 200-10] Analyzing design file 'SPMV_CSR_src/accelerator/accelerator.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'SPMV_CSR_src/accelerator/reducer.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 45.29 seconds. CPU system time: 2.37 seconds. Elapsed time: 46.31 seconds; current allocated memory: 116.762 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-291] Loop 'adder_tree' is marked as complete unroll implied by the pipeline pragma (SPMV_CSR_src/accelerator/accelerator.cpp:35:14)
INFO: [HLS 214-186] Unrolling loop 'adder_tree' (SPMV_CSR_src/accelerator/accelerator.cpp:35:14) in function 'adders' completely with a factor of 4 (SPMV_CSR_src/accelerator/accelerator.cpp:30:0)
INFO: [HLS 214-186] Unrolling loop 'multipliers_loop' (SPMV_CSR_src/accelerator/accelerator.cpp:19:20) in function 'multipliers' completely with a factor of 4 (SPMV_CSR_src/accelerator/accelerator.cpp:15:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_9_1' (SPMV_CSR_src/accelerator/accelerator.cpp:9:19) in function 'set_storage' completely with a factor of 23 (SPMV_CSR_src/accelerator/accelerator.cpp:4:0)
INFO: [HLS 214-178] Inlining function 'reducer_data::reducer_data(int, int)' into 'reducer_level::reducer_level()' (SPMV_CSR_src/accelerator/reducer.hpp:13:0)
INFO: [HLS 214-178] Inlining function 'reducer_level::reducer_level()' into 'reducer::reducer()' (SPMV_CSR_src/accelerator/reducer.hpp:23:0)
INFO: [HLS 214-178] Inlining function 'reducer_data::reducer_data(int, int)' into 'reducer::reduce(int&, int, int)' (SPMV_CSR_src/accelerator/reducer.cpp:40:0)
INFO: [HLS 214-178] Inlining function 'reducer_level::insert(reducer_data)' into 'reducer::reduce(int&, int, int)' (SPMV_CSR_src/accelerator/reducer.cpp:40:0)
INFO: [HLS 214-178] Inlining function 'reducer::reducer()' into 'accelerate(int&, int*, int*, bool*, int, bool, int*)' (SPMV_CSR_src/accelerator/accelerator.cpp:40:0)
INFO: [HLS 214-178] Inlining function 'set_storage(int*, int*, bool)' into 'accelerate(int&, int*, int*, bool*, int, bool, int*)' (SPMV_CSR_src/accelerator/accelerator.cpp:40:0)
INFO: [HLS 214-178] Inlining function 'multipliers(int*, int*, int*, int*, bool*)' into 'accelerate(int&, int*, int*, bool*, int, bool, int*)' (SPMV_CSR_src/accelerator/accelerator.cpp:40:0)
INFO: [HLS 214-178] Inlining function 'reducer::reduce(int&, int, int)' into 'accelerate(int&, int*, int*, bool*, int, bool, int*)' (SPMV_CSR_src/accelerator/accelerator.cpp:40:0)
INFO: [HLS 214-248] Applying array_partition to '_ZZ10accelerateRiPiS0_PbibS0_E15multiplier_outs': Complete partitioning on dimension 1. (SPMV_CSR_src/accelerator/accelerator.cpp:41:0)
INFO: [HLS 214-248] Applying array_partition to '_ZZ10accelerateRiPiS0_PbibS0_E7storage': Complete partitioning on dimension 1. (SPMV_CSR_src/accelerator/accelerator.cpp:42:0)
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 3.48 seconds. CPU system time: 0.52 seconds. Elapsed time: 4.33 seconds; current allocated memory: 117.520 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 117.520 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.05 seconds. CPU system time: 0.04 seconds. Elapsed time: 0.15 seconds; current allocated memory: 118.133 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.03 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.04 seconds; current allocated memory: 118.438 MB.
INFO: [XFORM 203-510] Pipelining loop 'Loop-2' (SPMV_CSR_src/accelerator/reducer.hpp:23) in function 'accelerate' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'Loop-1' (SPMV_CSR_src/accelerator/reducer.hpp:23) in function 'accelerate' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'Loop-1.1' (SPMV_CSR_src/accelerator/reducer.hpp:13) in function 'accelerate' completely with a factor of 1.
INFO: [XFORM 203-102] Partitioning array 'reducer_circuit.levels.valid' automatically.
INFO: [XFORM 203-102] Partitioning array 'reducer_circuit.levels.num_items' automatically.
INFO: [XFORM 203-102] Automatically partitioning small array 'reducer_circuit.levels.buffer.value' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'reducer_circuit.levels.buffer.label' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'reducer_circuit.levels.buffer.value' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'reducer_circuit.levels.buffer.label' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'reducer_circuit.levels.buffer.value' in dimension 2 completely.
INFO: [XFORM 203-101] Partitioning array 'reducer_circuit.levels.buffer.label' in dimension 2 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (SPMV_CSR_src/accelerator/reducer.cpp:31:1) in function 'reducer_level::add'... converting 19 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (SPMV_CSR_src/accelerator/accelerator.cpp:15:64) to (SPMV_CSR_src/accelerator/reducer.cpp:35:20) in function 'accelerate'... converting 3 basic blocks.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.14 seconds. CPU system time: 0.03 seconds. Elapsed time: 0.18 seconds; current allocated memory: 140.828 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.07 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.1 seconds; current allocated memory: 159.898 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'accelerate' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'accelerate_Pipeline_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'Loop 1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 1, loop 'Loop 1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.02 seconds. CPU system time: 0.05 seconds. Elapsed time: 0.09 seconds; current allocated memory: 161.262 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.02 seconds. CPU system time: 0 seconds. Elapsed time: 0.04 seconds; current allocated memory: 161.262 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'adders' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'adders'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 1, function 'adders'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.02 seconds. CPU system time: 0 seconds. Elapsed time: 0.02 seconds; current allocated memory: 161.262 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name accelerate accelerate 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.01 seconds; current allocated memory: 579.406 MB.
INFO: [HLS 200-10] Analyzing design file 'SPMV_CSR_src/accelerator/accelerator.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'SPMV_CSR_src/accelerator/reducer.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 47.4 seconds. CPU system time: 2.73 seconds. Elapsed time: 48.64 seconds; current allocated memory: 116.734 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-186] Unrolling loop 'multipliers_loop' (SPMV_CSR_src/accelerator/accelerator.cpp:19:20) in function 'multipliers' completely with a factor of 4 (SPMV_CSR_src/accelerator/accelerator.cpp:15:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_9_1' (SPMV_CSR_src/accelerator/accelerator.cpp:9:19) in function 'set_storage' completely with a factor of 23 (SPMV_CSR_src/accelerator/accelerator.cpp:4:0)
INFO: [HLS 214-178] Inlining function 'reducer_data::reducer_data(int, int)' into 'reducer_level::reducer_level()' (SPMV_CSR_src/accelerator/reducer.hpp:13:0)
INFO: [HLS 214-178] Inlining function 'reducer_level::reducer_level()' into 'reducer::reducer()' (SPMV_CSR_src/accelerator/reducer.hpp:23:0)
INFO: [HLS 214-178] Inlining function 'reducer_data::reducer_data(int, int)' into 'reducer::reduce(int&, int, int)' (SPMV_CSR_src/accelerator/reducer.cpp:40:0)
INFO: [HLS 214-178] Inlining function 'reducer_level::insert(reducer_data)' into 'reducer::reduce(int&, int, int)' (SPMV_CSR_src/accelerator/reducer.cpp:40:0)
INFO: [HLS 214-178] Inlining function 'reducer::reducer()' into 'accelerate(int&, int*, int*, bool*, int, bool, int*)' (SPMV_CSR_src/accelerator/accelerator.cpp:39:0)
INFO: [HLS 214-178] Inlining function 'set_storage(int*, int*, bool)' into 'accelerate(int&, int*, int*, bool*, int, bool, int*)' (SPMV_CSR_src/accelerator/accelerator.cpp:39:0)
INFO: [HLS 214-178] Inlining function 'multipliers(int*, int*, int*, int*, bool*)' into 'accelerate(int&, int*, int*, bool*, int, bool, int*)' (SPMV_CSR_src/accelerator/accelerator.cpp:39:0)
INFO: [HLS 214-178] Inlining function 'reducer::reduce(int&, int, int)' into 'accelerate(int&, int*, int*, bool*, int, bool, int*)' (SPMV_CSR_src/accelerator/accelerator.cpp:39:0)
INFO: [HLS 214-248] Applying array_partition to '_ZZ10accelerateRiPiS0_PbibS0_E15multiplier_outs': Complete partitioning on dimension 1. (SPMV_CSR_src/accelerator/accelerator.cpp:40:0)
INFO: [HLS 214-248] Applying array_partition to '_ZZ10accelerateRiPiS0_PbibS0_E7storage': Complete partitioning on dimension 1. (SPMV_CSR_src/accelerator/accelerator.cpp:41:0)
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 3.6 seconds. CPU system time: 0.52 seconds. Elapsed time: 4.31 seconds; current allocated memory: 117.477 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 117.477 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.04 seconds. CPU system time: 0.03 seconds. Elapsed time: 0.11 seconds; current allocated memory: 118.156 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'adders' into 'accelerate' (SPMV_CSR_src/accelerator/accelerator.cpp:48) automatically.
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.02 seconds. CPU system time: 0 seconds. Elapsed time: 0.03 seconds; current allocated memory: 118.445 MB.
INFO: [XFORM 203-510] Pipelining loop 'adder_tree' (SPMV_CSR_src/accelerator/accelerator.cpp:34) in function 'adders' automatically.
INFO: [XFORM 203-510] Pipelining loop 'Loop-2' (SPMV_CSR_src/accelerator/reducer.hpp:23) in function 'accelerate' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'Loop-1' (SPMV_CSR_src/accelerator/reducer.hpp:23) in function 'accelerate' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'Loop-1.1' (SPMV_CSR_src/accelerator/reducer.hpp:13) in function 'accelerate' completely with a factor of 1.
INFO: [XFORM 203-102] Partitioning array 'reducer_circuit.levels.valid' automatically.
INFO: [XFORM 203-102] Partitioning array 'reducer_circuit.levels.num_items' automatically.
INFO: [XFORM 203-602] Inlining function 'adders' into 'accelerate' (SPMV_CSR_src/accelerator/accelerator.cpp:48) automatically.
INFO: [XFORM 203-102] Automatically partitioning small array 'reducer_circuit.levels.buffer.value' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'reducer_circuit.levels.buffer.label' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'reducer_circuit.levels.buffer.value' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'reducer_circuit.levels.buffer.label' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'reducer_circuit.levels.buffer.value' in dimension 2 completely.
INFO: [XFORM 203-101] Partitioning array 'reducer_circuit.levels.buffer.label' in dimension 2 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (SPMV_CSR_src/accelerator/reducer.cpp:31:1) in function 'reducer_level::add'... converting 19 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (SPMV_CSR_src/accelerator/accelerator.cpp:15:64) to (SPMV_CSR_src/accelerator/accelerator.cpp:34:14) in function 'accelerate'... converting 3 basic blocks.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.14 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.17 seconds; current allocated memory: 140.660 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.08 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.08 seconds; current allocated memory: 160.184 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'accelerate' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'accelerate_Pipeline_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'Loop 1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 1, loop 'Loop 1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.03 seconds. CPU system time: 0.04 seconds. Elapsed time: 0.1 seconds; current allocated memory: 161.555 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.02 seconds; current allocated memory: 161.555 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'accelerate_Pipeline_adder_tree' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'adder_tree'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 2, loop 'adder_tree'
INFO: [SCHED 204-11] Finished scheduling.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name accelerate accelerate 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0.01 seconds. Elapsed time: 0 seconds; current allocated memory: 579.406 MB.
INFO: [HLS 200-10] Analyzing design file 'SPMV_CSR_src/accelerator/accelerator.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'SPMV_CSR_src/accelerator/reducer.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 48.72 seconds. CPU system time: 2.75 seconds. Elapsed time: 49.72 seconds; current allocated memory: 116.738 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-186] Unrolling loop 'reducer_loop' (SPMV_CSR_src/accelerator/reducer.cpp:45:16) in function 'reducer::reduce' completely with a factor of 1 (SPMV_CSR_src/accelerator/reducer.cpp:39:0)
INFO: [HLS 214-186] Unrolling loop 'multipliers_loop' (SPMV_CSR_src/accelerator/accelerator.cpp:19:20) in function 'multipliers' completely with a factor of 4 (SPMV_CSR_src/accelerator/accelerator.cpp:15:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_9_1' (SPMV_CSR_src/accelerator/accelerator.cpp:9:19) in function 'set_storage' completely with a factor of 23 (SPMV_CSR_src/accelerator/accelerator.cpp:4:0)
INFO: [HLS 214-178] Inlining function 'reducer_data::reducer_data(int, int)' into 'reducer_level::reducer_level()' (SPMV_CSR_src/accelerator/reducer.hpp:13:0)
INFO: [HLS 214-178] Inlining function 'reducer_level::reducer_level()' into 'reducer::reducer()' (SPMV_CSR_src/accelerator/reducer.hpp:23:0)
INFO: [HLS 214-178] Inlining function 'reducer_data::reducer_data(int, int)' into 'reducer::reduce(int&, int, int)' (SPMV_CSR_src/accelerator/reducer.cpp:39:0)
INFO: [HLS 214-178] Inlining function 'reducer_level::insert(reducer_data)' into 'reducer::reduce(int&, int, int)' (SPMV_CSR_src/accelerator/reducer.cpp:39:0)
INFO: [HLS 214-178] Inlining function 'reducer_level::add(reducer_data&)' into 'reducer::reduce(int&, int, int)' (SPMV_CSR_src/accelerator/reducer.cpp:39:0)
INFO: [HLS 214-178] Inlining function 'reducer::reducer()' into 'accelerate(int&, int*, int*, bool*, int, bool, int*)' (SPMV_CSR_src/accelerator/accelerator.cpp:39:0)
INFO: [HLS 214-178] Inlining function 'set_storage(int*, int*, bool)' into 'accelerate(int&, int*, int*, bool*, int, bool, int*)' (SPMV_CSR_src/accelerator/accelerator.cpp:39:0)
INFO: [HLS 214-178] Inlining function 'multipliers(int*, int*, int*, int*, bool*)' into 'accelerate(int&, int*, int*, bool*, int, bool, int*)' (SPMV_CSR_src/accelerator/accelerator.cpp:39:0)
INFO: [HLS 214-248] Applying array_partition to '_ZZ10accelerateRiPiS0_PbibS0_E15multiplier_outs': Complete partitioning on dimension 1. (SPMV_CSR_src/accelerator/accelerator.cpp:40:0)
INFO: [HLS 214-248] Applying array_partition to '_ZZ10accelerateRiPiS0_PbibS0_E7storage': Complete partitioning on dimension 1. (SPMV_CSR_src/accelerator/accelerator.cpp:41:0)
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 3.69 seconds. CPU system time: 0.53 seconds. Elapsed time: 4.41 seconds; current allocated memory: 117.461 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 117.461 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.05 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.1 seconds; current allocated memory: 118.117 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'adders' into 'accelerate' (SPMV_CSR_src/accelerator/accelerator.cpp:48) automatically.
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.02 seconds; current allocated memory: 118.430 MB.
INFO: [XFORM 203-510] Pipelining loop 'adder_tree' (SPMV_CSR_src/accelerator/accelerator.cpp:34) in function 'adders' automatically.
INFO: [XFORM 203-510] Pipelining loop 'Loop-2' (SPMV_CSR_src/accelerator/reducer.hpp:23) in function 'accelerate' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'Loop-1' (SPMV_CSR_src/accelerator/reducer.hpp:23) in function 'accelerate' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'Loop-1.1' (SPMV_CSR_src/accelerator/reducer.hpp:13) in function 'accelerate' completely with a factor of 1.
INFO: [XFORM 203-102] Partitioning array 'reducer_circuit.levels.valid' automatically.
INFO: [XFORM 203-102] Partitioning array 'reducer_circuit.levels.num_items' automatically.
INFO: [XFORM 203-102] Automatically partitioning small array 'reducer_circuit.levels.buffer.value' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'reducer_circuit.levels.buffer.label' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'reducer_circuit.levels.buffer.value' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'reducer_circuit.levels.buffer.label' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'reducer_circuit.levels.buffer.value' in dimension 2 completely.
INFO: [XFORM 203-101] Partitioning array 'reducer_circuit.levels.buffer.label' in dimension 2 completely.
INFO: [XFORM 203-602] Inlining function 'adders' into 'accelerate' (SPMV_CSR_src/accelerator/accelerator.cpp:48) automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (SPMV_CSR_src/accelerator/accelerator.cpp:15:64) to (SPMV_CSR_src/accelerator/accelerator.cpp:34:14) in function 'accelerate'... converting 3 basic blocks.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.07 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.1 seconds; current allocated memory: 140.781 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.04 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.05 seconds; current allocated memory: 160.066 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'accelerate' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'accelerate_Pipeline_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'Loop 1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 1, loop 'Loop 1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.02 seconds. CPU system time: 0.03 seconds. Elapsed time: 0.06 seconds; current allocated memory: 161.441 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.02 seconds. CPU system time: 0 seconds. Elapsed time: 0.03 seconds; current allocated memory: 161.441 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'accelerate_Pipeline_adder_tree' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'adder_tree'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 2, loop 'adder_tree'
INFO: [SCHED 204-11] Finished scheduling.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name accelerate accelerate 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0.01 seconds. Elapsed time: 0 seconds; current allocated memory: 1.023 GB.
INFO: [HLS 200-10] Analyzing design file 'SPMV_CSR_src/accelerator/accelerator.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'SPMV_CSR_src/accelerator/reducer.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 46.63 seconds. CPU system time: 2.51 seconds. Elapsed time: 48.09 seconds; current allocated memory: 116.734 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-291] Loop 'reducer_loop' is marked as complete unroll implied by the pipeline pragma (SPMV_CSR_src/accelerator/reducer.cpp:45:16)
INFO: [HLS 214-291] Loop 'adder_tree' is marked as complete unroll implied by the pipeline pragma (SPMV_CSR_src/accelerator/accelerator.cpp:35:14)
INFO: [HLS 214-291] Loop 'multipliers_loop' is marked as complete unroll implied by the pipeline pragma (SPMV_CSR_src/accelerator/accelerator.cpp:20:20)
INFO: [HLS 214-291] Loop 'set_storage_loop' is marked as complete unroll implied by the pipeline pragma (SPMV_CSR_src/accelerator/accelerator.cpp:9:21)
INFO: [HLS 214-291] Loop 'anonymous' is marked as complete unroll implied by the pipeline pragma (SPMV_CSR_src/accelerator/reducer.hpp:23:7)
INFO: [HLS 214-291] Loop 'anonymous' is marked as complete unroll implied by the pipeline pragma (SPMV_CSR_src/accelerator/reducer.hpp:13:7)
INFO: [HLS 214-186] Unrolling loop 'reducer_loop' (SPMV_CSR_src/accelerator/reducer.cpp:45:16) in function 'reducer::reduce' completely with a factor of 1 (SPMV_CSR_src/accelerator/reducer.cpp:39:0)
INFO: [HLS 214-186] Unrolling loop 'adder_tree' (SPMV_CSR_src/accelerator/accelerator.cpp:35:14) in function 'adders' completely with a factor of 4 (SPMV_CSR_src/accelerator/accelerator.cpp:31:0)
WARNING: [HLS 214-189] Pipeline directive for loop 'adder_tree' (SPMV_CSR_src/accelerator/accelerator.cpp:35:14) in function 'adders' has been removed because the loop is unrolled completely (SPMV_CSR_src/accelerator/accelerator.cpp:31:0)
INFO: [HLS 214-186] Unrolling loop 'multipliers_loop' (SPMV_CSR_src/accelerator/accelerator.cpp:20:20) in function 'multipliers' completely with a factor of 4 (SPMV_CSR_src/accelerator/accelerator.cpp:16:0)
INFO: [HLS 214-186] Unrolling loop 'set_storage_loop' (SPMV_CSR_src/accelerator/accelerator.cpp:9:21) in function 'set_storage' completely with a factor of 23 (SPMV_CSR_src/accelerator/accelerator.cpp:4:0)
INFO: [HLS 214-186] Unrolling loop 'anonymous' (SPMV_CSR_src/accelerator/reducer.hpp:23:7) in function 'reducer::reducer' completely with a factor of 2 (SPMV_CSR_src/accelerator/reducer.hpp:23:0)
INFO: [HLS 214-186] Unrolling loop 'anonymous' (SPMV_CSR_src/accelerator/reducer.hpp:13:7) in function 'reducer_level::reducer_level' completely with a factor of 2 (SPMV_CSR_src/accelerator/reducer.hpp:13:0)
INFO: [HLS 214-178] Inlining function 'reducer_data::reducer_data(int, int)' into 'reducer_level::reducer_level()' (SPMV_CSR_src/accelerator/reducer.hpp:13:0)
INFO: [HLS 214-178] Inlining function 'reducer_level::reducer_level()' into 'reducer::reducer()' (SPMV_CSR_src/accelerator/reducer.hpp:23:0)
INFO: [HLS 214-178] Inlining function 'reducer_data::reducer_data(int, int)' into 'reducer::reduce(int&, int, int)' (SPMV_CSR_src/accelerator/reducer.cpp:39:0)
INFO: [HLS 214-178] Inlining function 'reducer_level::insert(reducer_data)' into 'reducer::reduce(int&, int, int)' (SPMV_CSR_src/accelerator/reducer.cpp:39:0)
INFO: [HLS 214-178] Inlining function 'reducer_level::add(reducer_data&)' into 'reducer::reduce(int&, int, int)' (SPMV_CSR_src/accelerator/reducer.cpp:39:0)
INFO: [HLS 214-178] Inlining function 'reducer::reducer()' into 'accelerate(int&, int*, int*, bool*, int, bool, int*)' (SPMV_CSR_src/accelerator/accelerator.cpp:42:0)
INFO: [HLS 214-178] Inlining function 'set_storage(int*, int*, bool)' into 'accelerate(int&, int*, int*, bool*, int, bool, int*)' (SPMV_CSR_src/accelerator/accelerator.cpp:42:0)
INFO: [HLS 214-178] Inlining function 'multipliers(int*, int*, int*, int*, bool*)' into 'accelerate(int&, int*, int*, bool*, int, bool, int*)' (SPMV_CSR_src/accelerator/accelerator.cpp:42:0)
INFO: [HLS 214-248] Applying array_partition to '_ZZ10accelerateRiPiS0_PbibS0_E15multiplier_outs': Complete partitioning on dimension 1. (SPMV_CSR_src/accelerator/accelerator.cpp:43:0)
INFO: [HLS 214-248] Applying array_partition to '_ZZ10accelerateRiPiS0_PbibS0_E7storage': Complete partitioning on dimension 1. (SPMV_CSR_src/accelerator/accelerator.cpp:44:0)
INFO: [HLS 214-248] Applying array_partition to 'vector': Complete partitioning on dimension 1. (SPMV_CSR_src/accelerator/accelerator.cpp:42:0)
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 3.26 seconds. CPU system time: 0.4 seconds. Elapsed time: 3.8 seconds; current allocated memory: 117.508 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 117.508 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.04 seconds. CPU system time: 0.04 seconds. Elapsed time: 0.14 seconds; current allocated memory: 118.176 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'adders' into 'accelerate' (SPMV_CSR_src/accelerator/accelerator.cpp:52) automatically.
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.01 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.02 seconds; current allocated memory: 118.477 MB.
INFO: [XFORM 203-102] Partitioning array 'reducer_circuit.levels.valid' automatically.
INFO: [XFORM 203-102] Partitioning array 'reducer_circuit.levels.num_items' automatically.
INFO: [XFORM 203-102] Automatically partitioning small array 'reducer_circuit.levels.buffer.value' completely based on array size.
INFO: [XFORM 203-102] Automatically partitioning small array 'reducer_circuit.levels.buffer.label' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'reducer_circuit.levels.buffer.value' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'reducer_circuit.levels.buffer.label' in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'reducer_circuit.levels.buffer.value' in dimension 2 completely.
INFO: [XFORM 203-101] Partitioning array 'reducer_circuit.levels.buffer.label' in dimension 2 completely.
INFO: [XFORM 203-602] Inlining function 'adders' into 'accelerate' (SPMV_CSR_src/accelerator/accelerator.cpp:52) automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (SPMV_CSR_src/accelerator/accelerator.cpp:16:64) to (SPMV_CSR_src/accelerator/accelerator.cpp:54:1) in function 'accelerate'... converting 3 basic blocks.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.08 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.1 seconds; current allocated memory: 140.285 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.05 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.06 seconds; current allocated memory: 141.113 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'accelerate' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'reduce' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'reduce'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 3, function 'reduce'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.13 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.15 seconds; current allocated memory: 143.840 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.04 seconds. CPU system time: 0 seconds. Elapsed time: 0.05 seconds; current allocated memory: 143.840 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'accelerate' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'accelerate'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 7, function 'accelerate'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.08 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.09 seconds; current allocated memory: 143.980 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.05 seconds. CPU system time: 0 seconds. Elapsed time: 0.04 seconds; current allocated memory: 143.980 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'reduce' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Register 'reducer_circuit_levels_num_items_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'reducer_circuit_levels_buffer_value_0_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'reducer_circuit_levels_buffer_label_0_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'reducer_circuit_levels_num_items_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'reducer_circuit_levels_buffer_value_1_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'reducer_circuit_levels_valid_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'reducer_circuit_levels_buffer_value_0_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'reducer_circuit_levels_valid_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'reducer_circuit_levels_buffer_value_1_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'reducer_circuit_levels_buffer_label_1_0' is power-on initialization.
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'reduce' pipeline 'reduce' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'reduce'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0.06 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.07 seconds; current allocated memory: 144.074 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'accelerate' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'accelerate/out_r' to 'ap_ovld' (last_write_notify).
INFO: [RTGEN 206-500] Setting interface mode on port 'accelerate/subrow_vals' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accelerate/subrow_col_indices' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accelerate/mult_enables' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accelerate/label_r' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accelerate/init_vector' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accelerate/vector_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accelerate/vector_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accelerate/vector_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accelerate/vector_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accelerate/vector_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accelerate/vector_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accelerate/vector_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accelerate/vector_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accelerate/vector_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accelerate/vector_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accelerate/vector_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accelerate/vector_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accelerate/vector_12' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accelerate/vector_13' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accelerate/vector_14' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accelerate/vector_15' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accelerate/vector_16' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accelerate/vector_17' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accelerate/vector_18' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accelerate/vector_19' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accelerate/vector_20' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accelerate/vector_21' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'accelerate/vector_22' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'accelerate' to 'ap_ctrl_hs'.
WARNING: [RTGEN 206-101] Register 'accelerate_int_int_int_bool_int_bool_int_storage' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accelerate_int_int_int_bool_int_bool_int_storage_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accelerate_int_int_int_bool_int_bool_int_storage_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accelerate_int_int_int_bool_int_bool_int_storage_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accelerate_int_int_int_bool_int_bool_int_storage_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accelerate_int_int_int_bool_int_bool_int_storage_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accelerate_int_int_int_bool_int_bool_int_storage_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accelerate_int_int_int_bool_int_bool_int_storage_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accelerate_int_int_int_bool_int_bool_int_storage_8' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'accelerate_int_int_int_bool_int_bool_int_storage_9' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'p_ZZ10accelerateRiPiS0_PbibS0_E7storage_10' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'p_ZZ10accelerateRiPiS0_PbibS0_E7storage_11' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'p_ZZ10accelerateRiPiS0_PbibS0_E7storage_12' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'p_ZZ10accelerateRiPiS0_PbibS0_E7storage_13' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'p_ZZ10accelerateRiPiS0_PbibS0_E7storage_14' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'p_ZZ10accelerateRiPiS0_PbibS0_E7storage_15' is power-on initialization.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
